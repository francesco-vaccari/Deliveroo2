In server.py, la funzione handle actions viene chiamata solo una volta per frame, il che vuol dire che posso processare solo un'azione/messaggio ogni frame. Non posso rendere il processing dei messaggi bloccante perché altrimenti può essere che non vada più avanti. Potrebbe aver senso avere al massimo una azione da ogni agente per ogni frame, quindi aggiungendo un controllo su chi manda il messaggio. Potrei inoltre dividere la gestione dei messaggi connect/disconnect dalla gestione delle azioni di gioco. E potrei anche inserire magari un timer tra due azioni dello stesso agente.

Aggiornare descrizione delle azioni base. Aggiungendo le coordinate e sistemare un po' tutte le descrizioni. Pensarci bene.

Aggiungere nei prompt per fixare le funzioni che il belief set può essere diverso da quando è avvenuto l'errore. Non più perché mi sa che il belief set dato e con cui si testa è una copia fatta prima della generazione dell'intention. Verificare che sia così, altrimenti specificare nel prompt.

Aggiungere belief set iniziale e finale per evaluation dell'intention control question 4?

Cambiare nel prompting il self.stop quando pronto per esperimenti.

Aggiungere logging in ControlManager e PerceptionManager.

Controllare e sistemare lo pseudo codice con tutto aggiornato e magari guardare come è fatto quello BDI standard per confrontare.

Aggiungere modalità senza possibilità di eseguire desire già implementati.

In control, quando esegue un desire, non mi serve aspettare tra una azione e la seguente per sentire che eventi arrivano. Magari sdoppiare la funzionein una che ritorna gli eventi e una che solo esegue il piano.

Per poter runnare il progetto serve: pygame, astor, python-dotenv, openai