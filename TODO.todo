Testare:
- no-desire-triggering
- no-evaluation-triggered-desires
- Desire che viene eseguito solamente con l'ultima intention
- Desire implementati listati nella control question 1
- Invalidazione di called intentions dopo 3 valutazioni negative o errori di fila


Magari fare qualche esperimento con user generated desires?

Se l'agente finisce energia interrompo l'esperimento, però modifico intention così nei log non vengono segnate come executable.
Modificati (non modificato evolution_steps.txt):
- experiments/7/2024-11-04-10-09-27 (intention 17, non dovrebbe essere mai stata generata)
- experiments/6/2024-11-02-12-00-24 (intention 15, non dovrebbe essere executable)


1: moveup, 2: movedown, 3: moveleft, 4: moveright, 5: pickup, 6: putdown

Per poter runnare il progetto serve: pygame, astor, python-dotenv, PyQt5, openai, copy(?), tiktoken, e ovviamente il file .env con le variablili di ambiente. Aggiornare magari la descrizione della repo così da spiegare come farlo partire.


Cose di cui parlare:
- a che punto sono con il progetto
- nuovo meccanismo della memoria dato dal problema della conoscenza dell'utente sulle azioni e come modificano l'ambiente (ed eventi)
- come eseguire gli esperimenti
- mostrare esempio di esperimento
- modello di azure

Note su incontro:
evoluzione dell'ambiente con cambiamenti della mappa, o aggiunta di nuovi elementi

provare senza score, o con delivery zones che danno più punti

capire se ci possono essere evoluzioni diverse con lo stesso gioco, capire se ci sono diverse direzioni di evoluzione

reward negativo per azioni sbagliate



Cose di cui parlare:
- ho finito il progetto, pseudo code con la pipeline finale
- come ho intenzione di espandere l'ambiente (porte, altri tipi di celle, parcelle che portano più score di altre, cose non legate allo score)
- come ho intenzione di eseguire gli esperimenti (no desire triggering per learning, o score più alto in periodo di tempo, o massimo numero di chiamate) (probabilmente no perception generation dopo la prima funzione)
- magari qualche esempio per mostrare lo user generated desire
- chiedere riguardo a spesa per avere una stima più accurata di quanto costa il servizio così da potermi regolare su numero/tipo esperimenti
- capire cosa c'è di interessante a capire come avviene software evolution, capire se può essere interessante la struttura in sé

Note su incontro:
complessità che aumenta: anche due agenti
5 esperimenti per ogni tipo
analisi dell'evoluzione durante i vari step
analisi di codice applicato a scenari differenti dallo scenario della generazione (più complessi)
esperimenti con più agenti e analisi di evoluzione con più agenti (o con agente singolo applicato poi con più agenti)



Cose di cui parlare:
- chiedere ancora se mi da informazioni più precise sul pricing così posso regolarmi su quanti esperimenti fare
- parlare dei tipi di esperimenti che voglio fare e degli oggetti che ho aggiunto (esperimenti endure o learning)
- spiegare che analisi posso fare (radon) o analisi del codice applicato a scenari differenti

Note su incontro:
- vedere se lo stesso obiettivo lo raggiunge meglio dopo averlo già raggiunto in precedenza (se c'è questo miglioramento in cose che ha già imparato e non solo in cose nuove)



Cose di cui parlare:
- esperimenti cominciati
- qualche problema con timeout e funzioni che scriveva llm poi risolti con nuovo meccanismo memoria
- path finding è difficoltoso, infatti mappe esperimenti devono essere rettangoli e piccole
- alcune funzioni sono one-action
- 3 esperimenti per ogni tipo, eventualmente posso fare di più e magari con altri elementi
- ho lavorato a file per analisi e per fare replay per poter rivedere facilmente cosa è successo nell'esperimento

Note su incontro:
- definire quando un obiettivo è stato raggiunto (10 parcelle consegnate ad esempio)
- lasciare andare oltre nella generazione di desire l'agente per vedere cosa genera, se sempre gli stessi obiettivi o qualcosa di nuovo



Cose di cui parlare:
- chiedere per titolo tesi: Software Evolution in LLM-based Autonomous Agents
- chiedere per documento fine tirocinio
- sto andando avanti con gli esperimenti, per settimana prossima dovrei aver finito, in caso non mi venga in mente di farne altri
- poi cerco di capire come fare analisi con il tool che ho e con quello che mi sono annotato (categorie per funzioni generate, timeout, one-action, generali e funzionanti, specifiche all'istanza di ambiente, tipi di desire testuali generati, anche di intention, evoluzione dopo aver completato obiettivo, assunzioni fatte da LLM su funzionamento dell'ambiente, stessa cosa per trigger function se sono generali, specifiche, funzionanti e rispecchiano obiettivo desire)

Note su incontro:
- fare esperimenti in cui elementi dell'ambiente cambiano (aggiunta di porte e chiavi, o magari della batteria, o di cella che da più punti)
- cominciare a scrivere tesi, soprattutto indice
- mandare modulo tirocinio
- struttura tesi:
    abstract
    primo capitolo 3 4 pagine di introduzione: parlare del contesto (software engeneering per software evolution e cosa é, capacità di modificare requisiti e adattare codice) poi contesto di questo scenario, poi andare più nello specifico e dire che l'evoluzione prevede generazione di codice rispetto a quello passato, normalmente fatto da sviluppatori, noi vediamo se è possibile rendere automatica questa cosa (openai codex e copilot e stato dell'arte in questo contesto) anche se sono senza concetto di software evoluition, poi definisco obiettivo della tesi ovvero sviluppare software agents, agenti automatici che sono in grado di adattare obiettivi e comportamenti, e creare architettura per prendere codice generato in modo da automatizzare quelloc he prima veniva fatto a mano. primo oviettivo è stato quello di estendere architettura BDI (control e perception), poi una serie di esperimenti e alla fine risultati attesi dalla tesi (agenti che evolvono software in maniera automatica) e poi descrizione dei capitoli della tesi
    primo capitolo: stato dell'arte su quello che uso nella tesi (sistemi software autonomi, agenti che usano LLM, anche articoli che affrontano il mio problema affrontato), altro background è su LLM e come sta evolvendo lo scenario e gli strumenti dedicati all'ingegneria del software
    poi capitoli che riguardano la mia tesi: pseudo codice e formalizzazione della proposta architetturale di agente autonomo che evolve
    capitolo che va nel dettaglio del funzionamneto di tutto
    poi parte sperimentale con evoluzione nei vari scenari e che significa evoluzione
    capitolo di conclusione di 2 3 pagine che riprende obiettivi della tesi, spiegando i risultati e i limiti e possibili sviluppi futuri

Cose di cui parlare:
- titolo tesi perché ho provato ad iscrivermi e serve quello finale
- esperimenti miei finiti (senza contare se voglio fare user generated desire e con due agenti)
- esperimenti con ambiente dinamico
- indice tesi