CONTROL

function control:
    load base actions in the library

    wait for the belief set to have at least one entry
    wait another 20 seconds

    # each make_request makes up to 3 attempts at returning a valid output
    # if the make_request is not able to return a valid output with the requested objects, generate_desire is set to True

    generate_desire = True

    while not stop:
        if generate_desire:
            no_desire_triggered = True
            
            for trigger_function in desire_trigger_functions:
                if trigger_function(belief_set) is True:
                    generate plan using the intentions functions concatenated
                    if problems during generation:
                        mark the desire as not triggerable anymore
                    else:
                        execute the plan
                    no_desire_triggered = False
                    break
            
            if no_desire_triggered:
                belief_set_prior = copy of the belief set
                desire = make_request(belief_set)
                generate_desire = False
                intention_retries = 0
                intentions = []
        else:
            intention, function = make_request(desire, library, belief_set)
            plan = obtain the plan by executing the function
            events = execute the actions in the plan and track which events are received after which action
            evaluation = make_request(intention, plan, events) # ask the LLM if the intention is satisfied
            if negative evaluation:
                intention_retries += 1
                if intention_retries >= 3:
                    generate_desire = True
            if positive evaluation:
                update the library with new intention and its function
                intentions.append(intention)
                evaluation = make_request(desire, belief_set_prior, belief_set) # ask the LLM if the desire is satisfied
                if positive evaluation:
                    save the desire with its intention
                    trigger function = make_request(desire, belief_set_prior, belief_set) # ask the LLM for the desire trigger function
                if negative evaluation:
                    do nothing
                    # this means that the desire is not yet satisfied and new intentions will be generated









PERCEPTION

B = {}                                                # Belief Set
PF = {}                                               # Perception Functions

while True:
    receive new events E
    PF = generate_perception_functions(PF, E)         # Prompt LLM
    B = revise_belief_set(B, PF, E)



CONTROL

D = {}                                         # Desires
DTF = {}                                       # Desire Trigger Functions
I = {}                                         # Intentions Library
P = 0                                          # Plan
A = {moveup, pickup ... }                      # Actions
M = {}                                         # Memory

I = add_actions_as_intentions(A, I)
wait()

while True:
    D' = check_if_desire_triggered(D, DTF)

    if D':
        P = get_plan(D', B)
        E = execute(P)
        if not desire_is_satisfied(D', B):                              # Prompt LLM
            invalidate_desire(D')
    
    if not D':
        D' = generate_new_desire(D, B, M)                               # Prompt LLM
        while True:
            I' = generate_intention(D', I, B, M)                        # Prompt LLM
            P = get_plan(I', B)
            E = execute(P)
            evaluation, M' = evaluate_execution(I', P, E, M)            # Prompt LLM
            M = update_memory(M')
            if evaluation:
                D' = add_intention_to_desire(I')
                if desire_is_satisfied(D', B):                          # Prompt LLM
                    D' = generate_trigger_function(D', B)               # Prompt LLM
                    D = add_desire(D')
                    break

