
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        
[7]
Executable: True
Description: The short term goal is for the agent to move towards the parcel spawn point and pick up a parcel.
        def function_7():
            global belief_set
            spawn_point = [cell['cell_coordinates'] for cell in belief_set['map'][
                'grid'] if cell['cell_type'] == 'parcels_spawn'][0]
            agent_position = belief_set['agent']['coordinates']
            while agent_position != spawn_point:
                if agent_position[0] > spawn_point[0]:
                    function_1()
                elif agent_position[0] < spawn_point[0]:
                    function_2()
                elif agent_position[1] > spawn_point[1]:
                    function_3()
                else:
                    function_4()
                agent_position = belief_set['agent']['coordinates']
            function_5()
        
[8]
Executable: False
Description: The short term goal is for the agent to move towards the delivery cell and deliver the parcel it is carrying
        def function_8():
            global belief_set
            agent_position = belief_set['agent']['coordinates']
            delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
            if agent_position[0] < delivery_position[0]:
                function_2()
            elif agent_position[0] > delivery_position[0]:
                function_1()
            elif agent_position[1] < delivery_position[1]:
                function_4()
            elif agent_position[1] > delivery_position[1]:
                function_3()
            else:
                function_6()
        
[9]
Executable: False
Description: The agent's short term goal is to navigate to the delivery cell while it is carrying a parcel, and then drop off the parcel in the delivery cell to increase its score.
        def function_9():
            global belief_set
            delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
            agent_position = belief_set['agent']['coordinates']
            if delivery_cell[0] < agent_position[0]:
                function_1()
            elif delivery_cell[0] > agent_position[0]:
                function_2()
            elif delivery_cell[1] < agent_position[1]:
                function_3()
            elif delivery_cell[1] > agent_position[1]:
                function_4()
            else:
                function_6()
        
[10]
Executable: False
Description: The short term goal is to navigate the agent to the delivery cell while carrying a parcel, and then drop off the parcel at the delivery cell, which increases the agent's overall score.
        def function_10():
            global belief_set
            agent = belief_set['agent']
            delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                ['cell_type'] == 'delivery_cell')
            while agent['coordinates'] != delivery_cell['cell_coordinates']:
                if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                    function_2()
                elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                    function_1()
                elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                    function_4()
                elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                    function_3()
            function_6()
        
[11]
Executable: True
Description: The short term goal is for the agent to deliver the parcel it is carrying to the delivery cell.
        def function_11():
            global belief_set
            while belief_set['agent']['coordinates'] != [1, 3]:
                if belief_set['agent']['coordinates'][1] < 3:
                    function_4()
                elif belief_set['agent']['coordinates'][0] > 1:
                    function_1()
            function_6()
        
