
Desire 1: The agent's long term goal is to optimize its path in order to carry and deliver as many parcels as possible in the shortest amount of time while maximizing its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel and pick it up.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcel = belief_set['parcel'][1]
                    while agent['coordinates'] != parcel['coordinates']:
                        if agent['coordinates'][0] > parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel['coordinates'][0]:
                            function_2()
                        if agent['coordinates'][1] > parcel['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < parcel['coordinates'][1]:
                            function_4()
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to pick up a parcel if it is in the same cell as the parcel, and to move towards the delivery cell if it is carrying a parcel. If the agent is not carrying a parcel, it should move towards the nearest parcel.
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcel']
                    map_grid = belief_set['map']['map']['grid']
                    delivery_cell = [cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    if agent['parcels_carried_ids']:
                        if agent['coordinates'] == delivery_cell:
                            function_6()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                    else:
                        for parcel in parcels.values():
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                                break
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                                break
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                                break
                            elif agent['coordinates'][1] > parcel['coordinates'][1]:
                                function_3()
                                break
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                                break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell in the most efficient path possible.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['map']['grid'] if 
                        cell['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    if agent['coordinates'][0] < delivery_cell[0]:
                        function_2()
                    elif agent['coordinates'][0] > delivery_cell[0]:
                        function_1()
                    elif agent['coordinates'][1] < delivery_cell[1]:
                        function_4()
                    elif agent['coordinates'][1] > delivery_cell[1]:
                        function_3()
                    else:
                        function_6()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate the environment, collect all available parcels, and deliver them to the designated delivery cells to maximize its score.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent to the delivery cell and drop the parcel that it is carrying
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcel']
                    map_grid = belief_set['map']['map']['grid']
                    delivery_cell = next(cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell')['cell_coordinates']
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        if agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: False
    Description: The agent's short term goal is to navigate towards the nearest parcel, pick it up, and then navigate to the nearest delivery cell to deliver it.
                def function_11():
                    global belief_set
                    parcel_location = [p['coordinates'] for p in belief_set['parcel'].
                        values() if p['carried_by_id'] is None][0]
                    agent_location = belief_set['agent'][1]['coordinates']
                    while agent_location != parcel_location:
                        if agent_location[0] < parcel_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_location[1]:
                            function_3()
                        agent_location = belief_set['agent'][1]['coordinates']
                    function_5()
                    delivery_location = [c['cell_coordinates'] for c in belief_set['map'][
                        'map']['grid'] if c['cell_type'] == 'delivery_cell'][0]
                    while agent_location != delivery_location:
                        if agent_location[0] < delivery_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_location[0]:
                            function_1()
                        elif agent_location[1] < delivery_location[1]:
                            function_4()
                        elif agent_location[1] > delivery_location[1]:
                            function_3()
                        agent_location = belief_set['agent'][1]['coordinates']
                    function_6()
                
    Intention ID: [12]
    Executable: True
    Description: The short term goal is to detect if the agent is carrying a parcel and if so, deliver it to the nearest delivery cell.
                def function_12():
                    global belief_set
                    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
                        for cell in belief_set['map']['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ] == belief_set['agent'][1]['coordinates']:
                                function_6()
                                break
                        else:
                            for cell in belief_set['map']['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell':
                                    if cell['cell_coordinates'][0] < belief_set['agent'][1][
                                        'coordinates'][0]:
                                        function_1()
                                    elif cell['cell_coordinates'][0] > belief_set['agent'][1][
                                        'coordinates'][0]:
                                        function_2()
                                    elif cell['cell_coordinates'][1] < belief_set['agent'][1][
                                        'coordinates'][1]:
                                        function_3()
                                    elif cell['cell_coordinates'][1] > belief_set['agent'][1][
                                        'coordinates'][1]:
                                        function_4()
                                    break
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if 'parcel' in belief_set and belief_set['parcel'] != {}:
        return True
    elif belief_set['agent'][1]['parcels_carried_ids'] != []:
        return True
    else:
        return False



