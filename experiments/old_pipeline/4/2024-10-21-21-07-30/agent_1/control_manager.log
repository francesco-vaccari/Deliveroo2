2024-10-21 21:07:31,726 - INFO - Loading actions from agent_dir/actions.json ...
2024-10-21 21:07:31,764 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-10-21 21:08:14,092 - INFO - Desire added: 1. Desires:
Desire 1: The agent's long term goal is to strategically carry and deliver all parcels available in the environment to the designated delivery cells, while overcoming any obstacles that may arise, such as locked doors, by finding and using keys.
Executable: False
Trigger function:
None



2024-10-21 21:08:21,421 - INFO - Testing intention 
def function():
    global belief_set
    key_coordinates = belief_set['key'][1]['coordinates']
    agent_coordinates = belief_set['agent']['coordinates']
    while agent_coordinates[0] < key_coordinates[0]:
        function_2()
        agent_coordinates = belief_set['agent']['coordinates']
    while agent_coordinates[0] > key_coordinates[0]:
        function_1()
        agent_coordinates = belief_set['agent']['coordinates']
    while agent_coordinates[1] < key_coordinates[1]:
        function_4()
        agent_coordinates = belief_set['agent']['coordinates']
    while agent_coordinates[1] > key_coordinates[1]:
        function_3()
        agent_coordinates = belief_set['agent']['coordinates']
    function_5()
2024-10-21 21:08:21,427 - INFO - The intention is valid.
2024-10-21 21:08:21,453 - INFO - Intention added to desire 1
2024-10-21 21:08:21,472 - INFO - Running intention 7 ...
2024-10-21 21:08:21,696 - INFO - Belief set thread started ...
2024-10-21 21:08:21,714 - INFO - Plan thread started ...
2024-10-21 21:08:21,733 - INFO - Started subprocess...
2024-10-21 21:08:21,784 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:08:22,108 - INFO - Executing action action_1 ...
2024-10-21 21:08:22,340 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}}]
2024-10-21 21:08:22,687 - INFO - Executing action action_5 ...
2024-10-21 21:08:22,892 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-10-21 21:08:23,274 - INFO - Plan thread terminated.
2024-10-21 21:08:23,299 - INFO - Belief set thread terminated.
2024-10-21 21:08:23,299 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]]
2024-10-21 21:08:23,299 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:08:33,557 - INFO - Testing intention 
def function():
    global belief_set
    parcel = next(iter(belief_set['parcel'].values()))
    agent = belief_set['agent']
    if agent['coordinates'] == parcel['coordinates']:
        function_5()
    else:
        if agent['coordinates'][0] < parcel['coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > parcel['coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < parcel['coordinates'][1]:
            function_4()
        elif agent['coordinates'][1] > parcel['coordinates'][1]:
            function_3()
2024-10-21 21:08:33,582 - INFO - The intention is valid.
2024-10-21 21:08:33,602 - INFO - Intention added to desire 1
2024-10-21 21:08:33,602 - INFO - Running intention 8 ...
2024-10-21 21:08:33,733 - INFO - Belief set thread started ...
2024-10-21 21:08:33,739 - INFO - Plan thread started ...
2024-10-21 21:08:33,758 - INFO - Started subprocess...
2024-10-21 21:08:33,777 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:08:34,052 - INFO - Executing action action_3 ...
2024-10-21 21:08:34,264 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 0}}]
2024-10-21 21:08:34,636 - INFO - Plan thread terminated.
2024-10-21 21:08:34,642 - INFO - Belief set thread terminated.
2024-10-21 21:08:34,642 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 0}}]]
2024-10-21 21:08:34,642 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:08:39,817 - INFO - Invalidating intention 8 ...
2024-10-21 21:08:44,313 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    parcels = belief_set['parcel']
    for parcel in parcels.values():
        if parcel['coordinates'] == agent['coordinates'] and not agent['parcels_carried_ids']:
            function_5()
            break
2024-10-21 21:08:44,313 - INFO - The intention is valid.
2024-10-21 21:08:44,320 - INFO - Intention added to desire 1
2024-10-21 21:08:44,326 - INFO - Running intention 9 ...
2024-10-21 21:08:44,446 - INFO - Belief set thread started ...
2024-10-21 21:08:44,452 - INFO - Plan thread started ...
2024-10-21 21:08:44,476 - INFO - Started subprocess...
2024-10-21 21:08:44,476 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:08:44,794 - INFO - Executing action action_5 ...
2024-10-21 21:08:44,999 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}]
2024-10-21 21:08:45,473 - INFO - Plan thread terminated.
2024-10-21 21:08:45,516 - INFO - Belief set thread terminated.
2024-10-21 21:08:45,516 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}]]
2024-10-21 21:08:45,517 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:09:08,104 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    parcel = belief_set['parcel'][1]
    if agent['coordinates'] == parcel['coordinates'] and 1 in agent['parcels_carried_ids']:
        function_4()
    elif agent['has_key'] and belief_set['door'][1]['coordinates'] in [[agent['coordinates'][0] + 1, agent['coordinates'][1]], [agent['coordinates'][0] - 1, agent['coordinates'][1]], [agent['coordinates'][0], agent['coordinates'][1] - 1], [agent['coordinates'][0], agent['coordinates'][1] + 1]]:
        function_5()
    elif agent['coordinates'] == belief_set['map']['grid'][3]['cell_coordinates'] and 1 in agent['parcels_carried_ids']:
        function_6()
    else:
        function_2()
        function_4()
2024-10-21 21:09:08,117 - INFO - The intention is valid.
2024-10-21 21:09:08,131 - INFO - Intention added to desire 1
2024-10-21 21:09:08,136 - INFO - Running intention 10 ...
2024-10-21 21:09:08,273 - INFO - Belief set thread started ...
2024-10-21 21:09:08,311 - INFO - Plan thread started ...
2024-10-21 21:09:08,386 - INFO - Started subprocess...
2024-10-21 21:09:08,387 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:09:08,633 - INFO - Executing action action_4 ...
2024-10-21 21:09:08,850 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-10-21 21:09:09,172 - INFO - Belief set thread terminated.
2024-10-21 21:09:09,184 - INFO - Plan thread terminated.
2024-10-21 21:09:09,197 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]]
2024-10-21 21:09:09,197 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:09:13,072 - INFO - Invalidating intention 10 ...
2024-10-21 21:09:27,356 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent']['coordinates']
    parcel_coordinates = belief_set['parcel'][1]['coordinates']
    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'double_delivery_cell' or cell['cell_type'] == 'delivery_cell'][0]
    if belief_set['agent']['has_key']:
        for door in belief_set['door'].values():
            if door['coordinates'] == agent_coordinates:
                function_7()
    if parcel_coordinates == agent_coordinates and 1 not in belief_set['agent']['parcels_carried_ids']:
        function_9()
    if delivery_cell_coordinates[0] < agent_coordinates[0]:
        function_1()
    elif delivery_cell_coordinates[0] > agent_coordinates[0]:
        function_2()
    elif delivery_cell_coordinates[1] < agent_coordinates[1]:
        function_3()
    elif delivery_cell_coordinates[1] > agent_coordinates[1]:
        function_4()
    if delivery_cell_coordinates == agent_coordinates:
        function_6()
2024-10-21 21:09:27,369 - INFO - The intention is valid.
2024-10-21 21:09:27,389 - INFO - Intention added to desire 1
2024-10-21 21:09:27,427 - INFO - Running intention 11 ...
2024-10-21 21:09:27,595 - INFO - Belief set thread started ...
2024-10-21 21:09:27,614 - INFO - Plan thread started ...
2024-10-21 21:09:27,614 - INFO - Started subprocess...
2024-10-21 21:09:27,658 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:09:27,941 - INFO - Executing action action_4 ...
2024-10-21 21:09:28,171 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-10-21 21:09:28,491 - INFO - Belief set thread terminated.
2024-10-21 21:09:28,528 - INFO - Plan thread terminated.
2024-10-21 21:09:28,546 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]]
2024-10-21 21:09:28,547 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:09:33,532 - INFO - Invalidating intention 11 ...
2024-10-21 21:09:47,090 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    map = belief_set['map']
    parcel = belief_set['parcel'][1]
    key = belief_set['key'][1]
    door_1 = belief_set['door'][1]
    door_2 = belief_set['door'][2]
    
    # If agent and parcel are in the same cell, pick up parcel
    if agent['coordinates'] == parcel['coordinates']:
        function_5()
    
    # If agent and key are in the same cell, pick up key
    elif agent['coordinates'] == key['coordinates']:
        function_5()
    
    # If agent and door are in the same cell, and agent has key, unlock door
    elif (agent['coordinates'] == door_1['coordinates'] or agent['coordinates'] == door_2['coordinates']) and agent['has_key']:
        function_5()
    
    # Otherwise, navigate towards delivery cell
    else:
        for cell in map['grid']:
            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'][0] > agent['coordinates'][0]:
                function_2()
            elif cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'][0] < agent['coordinates'][0]:
                function_1()
            elif cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'][1] > agent['coordinates'][1]:
                function_4()
            elif cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'][1] < agent['coordinates'][1]:
                function_3()
2024-10-21 21:09:47,091 - INFO - The intention is valid.
2024-10-21 21:09:47,098 - INFO - Intention added to desire 1
2024-10-21 21:09:47,098 - INFO - Running intention 12 ...
2024-10-21 21:09:47,273 - INFO - Belief set thread started ...
2024-10-21 21:09:47,304 - INFO - Plan thread started ...
2024-10-21 21:09:47,323 - INFO - Started subprocess...
2024-10-21 21:09:47,323 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:09:47,568 - INFO - Executing action action_5 ...
2024-10-21 21:09:47,786 - INFO - Action action_5 executed. Events received: []
2024-10-21 21:09:48,114 - INFO - Belief set thread terminated.
2024-10-21 21:09:48,140 - INFO - Plan thread terminated.
2024-10-21 21:09:48,165 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[]]
2024-10-21 21:09:48,165 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:09:56,211 - INFO - Invalidating intention 12 ...
2024-10-21 21:09:56,243 - INFO - Invalidating intention 2 ...
2024-10-21 21:09:56,249 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-10-21 21:09:56,262 - INFO - Invalidating intention 4 ...
2024-10-21 21:09:56,262 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-10-21 21:09:56,274 - INFO - Invalidating intention 5 ...
2024-10-21 21:09:56,293 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-10-21 21:10:07,776 - INFO - Desire added: 2. Desires:
Desire 1: The agent's long term goal is to strategically carry and deliver all parcels available in the environment to the designated delivery cells, while overcoming any obstacles that may arise, such as locked doors, by finding and using keys.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to find and pick up the key to unlock doors on its path.
                def function_7():
                    global belief_set
                    key_coordinates = belief_set['key'][1]['coordinates']
                    agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to pick up a parcel and move towards the delivery cell.
                def function_8():
                    global belief_set
                    parcel = next(iter(belief_set['parcel'].values()))
                    agent = belief_set['agent']
                    if agent['coordinates'] == parcel['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] < parcel['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][0] > parcel['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][1] < parcel['coordinates'][1]:
                        function_4()
                    elif agent['coordinates'][1] > parcel['coordinates'][1]:
                        function_3()
                
    Intention ID: [9]
    Executable: True
    Description: The short term goal is for the agent to pick up parcels if it is on a parcel spawn cell. If a parcel is available on the same cell as the agent and the agent is not carrying any parcel, it should pick up the parcel.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcel']
                    for parcel in parcels.values():
                        if parcel['coordinates'] == agent['coordinates'] and not agent[
                            'parcels_carried_ids']:
                            function_5()
                            break
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest delivery cell by overcoming any obstacles in its path, and deliver the parcel it is currently carrying.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    parcel = belief_set['parcel'][1]
                    if agent['coordinates'] == parcel['coordinates'] and 1 in agent[
                        'parcels_carried_ids']:
                        function_4()
                    elif agent['has_key'] and belief_set['door'][1]['coordinates'] in [[
                        agent['coordinates'][0] + 1, agent['coordinates'][1]], [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], [agent[
                        'coordinates'][0], agent['coordinates'][1] + 1]]:
                        function_5()
                    elif agent['coordinates'] == belief_set['map']['grid'][3][
                        'cell_coordinates'] and 1 in agent['parcels_carried_ids']:
                        function_6()
                    else:
                        function_2()
                        function_4()
                
    Intention ID: [11]
    Executable: False
    Description: The short term goal of the agent is to navigate towards the delivery cell while avoiding any non-walkable cells and using keys to unlock any doors on the path. Once the delivery cell is reached, the agent will deliver all the parcels it is carrying.
                def function_11():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    parcel_coordinates = belief_set['parcel'][1]['coordinates']
                    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] ==
                        'double_delivery_cell' or cell['cell_type'] == 'delivery_cell'][0]
                    if belief_set['agent']['has_key']:
                        for door in belief_set['door'].values():
                            if door['coordinates'] == agent_coordinates:
                                function_7()
                    if parcel_coordinates == agent_coordinates and 1 not in belief_set['agent'
                        ]['parcels_carried_ids']:
                        function_9()
                    if delivery_cell_coordinates[0] < agent_coordinates[0]:
                        function_1()
                    elif delivery_cell_coordinates[0] > agent_coordinates[0]:
                        function_2()
                    elif delivery_cell_coordinates[1] < agent_coordinates[1]:
                        function_3()
                    elif delivery_cell_coordinates[1] > agent_coordinates[1]:
                        function_4()
                    if delivery_cell_coordinates == agent_coordinates:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to navigate towards the delivery cell by choosing a path that avoids non-walkable cells and uses the key to unlock any doors that may be in its way.
                def function_12():
                    global belief_set
                    agent = belief_set['agent']
                    map = belief_set['map']
                    parcel = belief_set['parcel'][1]
                    key = belief_set['key'][1]
                    door_1 = belief_set['door'][1]
                    door_2 = belief_set['door'][2]
                    if agent['coordinates'] == parcel['coordinates']:
                        function_5()
                    elif agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif (agent['coordinates'] == door_1['coordinates'] or agent[
                        'coordinates'] == door_2['coordinates']) and agent['has_key']:
                        function_5()
                    else:
                        for cell in map['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > agent['coordinates'][0]:
                                function_2()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < agent['coordinates'][0]:
                                function_1()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > agent['coordinates'][1]:
                                function_4()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < agent['coordinates'][1]:
                                function_3()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all parcels and keys from the environment, navigate through all walkable cell types avoiding non-walkable cells, and finally deliver all collected parcels to the respective delivery cells to maximize the score.
Executable: False
Trigger function:
None



2024-10-21 21:10:21,860 - INFO - Testing intention 
def function():
    global belief_set
    agent_coords = belief_set['agent']['coordinates']
    for cell in belief_set['map']['grid']:
        if cell['cell_type'] == 'double_delivery_cell':
            delivery_coords = cell['cell_coordinates']
            break
    if agent_coords[0] < delivery_coords[0] and belief_set['map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'] != 'non_walkable':
        function_2()
    elif agent_coords[0] > delivery_coords[0] and belief_set['map']['grid'][agent_coords[0] - 1][agent_coords[1]]['cell_type'] != 'non_walkable':
        function_1()
    elif agent_coords[1] < delivery_coords[1] and belief_set['map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'] != 'non_walkable':
        function_4()
    elif agent_coords[1] > delivery_coords[1] and belief_set['map']['grid'][agent_coords[0]][agent_coords[1] - 1]['cell_type'] != 'non_walkable':
        function_3()
    if agent_coords == delivery_coords:
        function_6()
2024-10-21 21:10:21,865 - INFO - The intention is valid.
2024-10-21 21:10:21,888 - INFO - Intention added to desire 2
2024-10-21 21:10:21,923 - INFO - Running intention 13 ...
2024-10-21 21:10:22,148 - INFO - Belief set thread started ...
2024-10-21 21:10:22,166 - INFO - Plan thread started ...
2024-10-21 21:10:22,173 - INFO - Started subprocess...
2024-10-21 21:10:22,173 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:10:52,217 - ERROR - Error during intention 13 execution. Intention 13 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 30 seconds
2024-10-21 21:10:52,241 - INFO - Belief set thread terminated.
2024-10-21 21:10:52,247 - INFO - Plan thread terminated.
2024-10-21 21:10:52,266 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-10-21 21:10:52,285 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:10:52,336 - INFO - Invalidating intention 13 ...
2024-10-21 21:10:58,969 - INFO - Testing intention 
def function():
    global belief_set
    agent_coords = belief_set['agent']['coordinates']
    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if 'delivery' in cell['cell_type']]
    for cell in delivery_cells:
        if cell[0] < agent_coords[0]:
            function_1()
        elif cell[0] > agent_coords[0]:
            function_2()
        if cell[1] < agent_coords[1]:
            function_3()
        elif cell[1] > agent_coords[1]:
            function_4()
    if belief_set['agent']['parcels_carried_ids']:
        function_6()

2024-10-21 21:10:58,970 - INFO - The intention is valid.
2024-10-21 21:10:58,982 - INFO - Intention added to desire 2
2024-10-21 21:10:59,007 - INFO - Running intention 14 ...
2024-10-21 21:10:59,247 - INFO - Belief set thread started ...
2024-10-21 21:10:59,304 - INFO - Plan thread started ...
2024-10-21 21:10:59,310 - INFO - Started subprocess...
2024-10-21 21:10:59,341 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:10:59,723 - INFO - Executing action action_4 ...
2024-10-21 21:11:00,055 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-10-21 21:11:00,331 - INFO - Executing action action_2 ...
2024-10-21 21:11:00,585 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:11:00,967 - INFO - Executing action action_3 ...
2024-10-21 21:11:01,247 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-10-21 21:11:01,535 - INFO - Executing action action_6 ...
2024-10-21 21:11:01,779 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': None}}]
2024-10-21 21:11:02,116 - INFO - Plan thread terminated.
2024-10-21 21:11:02,147 - INFO - Belief set thread terminated.
2024-10-21 21:11:02,165 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_2', 'action_3', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': None}}]]
2024-10-21 21:11:02,190 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': None}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:11:06,483 - INFO - Invalidating intention 14 ...
2024-10-21 21:11:15,702 - INFO - Testing intention 
def function():
    global belief_set
    agt_crd = belief_set['agent']['coordinates']
    map_grid = belief_set['map']['grid']
    walkable_cells = [c['cell_coordinates'] for c in map_grid if c['cell_type'] == 'walkable']
    target_crd = min(walkable_cells, key=lambda c: abs(c[0] - agt_crd[0]) + abs(c[1] - agt_crd[1]))
    while agt_crd != target_crd:
        if agt_crd[0] < target_crd[0]:
            function_2()
        elif agt_crd[0] > target_crd[0]:
            function_1()
        elif agt_crd[1] < target_crd[1]:
            function_4()
        elif agt_crd[1] > target_crd[1]:
            function_3()
        function_5()
        function_7()
        function_9()
        agt_crd = belief_set['agent']['coordinates']
2024-10-21 21:11:15,702 - INFO - The intention is valid.
2024-10-21 21:11:15,710 - INFO - Intention added to desire 2
2024-10-21 21:11:15,715 - INFO - Running intention 15 ...
2024-10-21 21:11:15,918 - INFO - Belief set thread started ...
2024-10-21 21:11:15,924 - INFO - Plan thread started ...
2024-10-21 21:11:15,930 - INFO - Started subprocess...
2024-10-21 21:11:15,931 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': None}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:11:16,331 - INFO - Plan thread terminated.
2024-10-21 21:11:16,360 - INFO - Belief set thread terminated.
2024-10-21 21:11:16,360 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-10-21 21:11:16,361 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': None}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:11:21,522 - INFO - Invalidating intention 15 ...
2024-10-21 21:11:21,541 - INFO - Invalidating intention 1 ...
2024-10-21 21:11:21,541 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-10-21 21:11:21,541 - INFO - Invalidating intention 2 ...
2024-10-21 21:11:21,541 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-10-21 21:11:21,541 - INFO - Invalidating intention 3 ...
2024-10-21 21:11:21,541 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-10-21 21:11:21,572 - INFO - Invalidating intention 4 ...
2024-10-21 21:11:21,597 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-10-21 21:11:29,020 - INFO - Desire added: 3. Desires:
Desire 1: The agent's long term goal is to strategically carry and deliver all parcels available in the environment to the designated delivery cells, while overcoming any obstacles that may arise, such as locked doors, by finding and using keys.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to find and pick up the key to unlock doors on its path.
                def function_7():
                    global belief_set
                    key_coordinates = belief_set['key'][1]['coordinates']
                    agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to pick up a parcel and move towards the delivery cell.
                def function_8():
                    global belief_set
                    parcel = next(iter(belief_set['parcel'].values()))
                    agent = belief_set['agent']
                    if agent['coordinates'] == parcel['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] < parcel['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][0] > parcel['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][1] < parcel['coordinates'][1]:
                        function_4()
                    elif agent['coordinates'][1] > parcel['coordinates'][1]:
                        function_3()
                
    Intention ID: [9]
    Executable: True
    Description: The short term goal is for the agent to pick up parcels if it is on a parcel spawn cell. If a parcel is available on the same cell as the agent and the agent is not carrying any parcel, it should pick up the parcel.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcel']
                    for parcel in parcels.values():
                        if parcel['coordinates'] == agent['coordinates'] and not agent[
                            'parcels_carried_ids']:
                            function_5()
                            break
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest delivery cell by overcoming any obstacles in its path, and deliver the parcel it is currently carrying.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    parcel = belief_set['parcel'][1]
                    if agent['coordinates'] == parcel['coordinates'] and 1 in agent[
                        'parcels_carried_ids']:
                        function_4()
                    elif agent['has_key'] and belief_set['door'][1]['coordinates'] in [[
                        agent['coordinates'][0] + 1, agent['coordinates'][1]], [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], [agent[
                        'coordinates'][0], agent['coordinates'][1] + 1]]:
                        function_5()
                    elif agent['coordinates'] == belief_set['map']['grid'][3][
                        'cell_coordinates'] and 1 in agent['parcels_carried_ids']:
                        function_6()
                    else:
                        function_2()
                        function_4()
                
    Intention ID: [11]
    Executable: False
    Description: The short term goal of the agent is to navigate towards the delivery cell while avoiding any non-walkable cells and using keys to unlock any doors on the path. Once the delivery cell is reached, the agent will deliver all the parcels it is carrying.
                def function_11():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    parcel_coordinates = belief_set['parcel'][1]['coordinates']
                    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] ==
                        'double_delivery_cell' or cell['cell_type'] == 'delivery_cell'][0]
                    if belief_set['agent']['has_key']:
                        for door in belief_set['door'].values():
                            if door['coordinates'] == agent_coordinates:
                                function_7()
                    if parcel_coordinates == agent_coordinates and 1 not in belief_set['agent'
                        ]['parcels_carried_ids']:
                        function_9()
                    if delivery_cell_coordinates[0] < agent_coordinates[0]:
                        function_1()
                    elif delivery_cell_coordinates[0] > agent_coordinates[0]:
                        function_2()
                    elif delivery_cell_coordinates[1] < agent_coordinates[1]:
                        function_3()
                    elif delivery_cell_coordinates[1] > agent_coordinates[1]:
                        function_4()
                    if delivery_cell_coordinates == agent_coordinates:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to navigate towards the delivery cell by choosing a path that avoids non-walkable cells and uses the key to unlock any doors that may be in its way.
                def function_12():
                    global belief_set
                    agent = belief_set['agent']
                    map = belief_set['map']
                    parcel = belief_set['parcel'][1]
                    key = belief_set['key'][1]
                    door_1 = belief_set['door'][1]
                    door_2 = belief_set['door'][2]
                    if agent['coordinates'] == parcel['coordinates']:
                        function_5()
                    elif agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif (agent['coordinates'] == door_1['coordinates'] or agent[
                        'coordinates'] == door_2['coordinates']) and agent['has_key']:
                        function_5()
                    else:
                        for cell in map['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > agent['coordinates'][0]:
                                function_2()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < agent['coordinates'][0]:
                                function_1()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > agent['coordinates'][1]:
                                function_4()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < agent['coordinates'][1]:
                                function_3()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all parcels and keys from the environment, navigate through all walkable cell types avoiding non-walkable cells, and finally deliver all collected parcels to the respective delivery cells to maximize the score.
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to navigate towards the double delivery cell, while avoiding non-walkable cells, and deliver the parcels it is carrying to maximize its score.
                def function_13():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'double_delivery_cell':
                            delivery_coords = cell['cell_coordinates']
                            break
                    if agent_coords[0] < delivery_coords[0] and belief_set['map']['grid'][
                        agent_coords[0] + 1][agent_coords[1]]['cell_type'] != 'non_walkable':
                        function_2()
                    elif agent_coords[0] > delivery_coords[0] and belief_set['map']['grid'][
                        agent_coords[0] - 1][agent_coords[1]]['cell_type'] != 'non_walkable':
                        function_1()
                    elif agent_coords[1] < delivery_coords[1] and belief_set['map']['grid'][
                        agent_coords[0]][agent_coords[1] + 1]['cell_type'] != 'non_walkable':
                        function_4()
                    elif agent_coords[1] > delivery_coords[1] and belief_set['map']['grid'][
                        agent_coords[0]][agent_coords[1] - 1]['cell_type'] != 'non_walkable':
                        function_3()
                    if agent_coords == delivery_coords:
                        function_6()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is for the agent to move towards the delivery cell while avoiding non-walkable cells, and deliver the parcel if it is carrying any.
                def function_14():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if 'delivery' in cell['cell_type']]
                    for cell in delivery_cells:
                        if cell[0] < agent_coords[0]:
                            function_1()
                        elif cell[0] > agent_coords[0]:
                            function_2()
                        if cell[1] < agent_coords[1]:
                            function_3()
                        elif cell[1] > agent_coords[1]:
                            function_4()
                    if belief_set['agent']['parcels_carried_ids']:
                        function_6()
                
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest walkable cell, pick up any key or parcel available, and then try to move again towards the delivery cell while avoiding non-walkable cells.
                def function_15():
                    global belief_set
                    agt_crd = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    walkable_cells = [c['cell_coordinates'] for c in map_grid if c[
                        'cell_type'] == 'walkable']
                    target_crd = min(walkable_cells, key=lambda c: abs(c[0] - agt_crd[0]) +
                        abs(c[1] - agt_crd[1]))
                    while agt_crd != target_crd:
                        if agt_crd[0] < target_crd[0]:
                            function_2()
                        elif agt_crd[0] > target_crd[0]:
                            function_1()
                        elif agt_crd[1] < target_crd[1]:
                            function_4()
                        elif agt_crd[1] > target_crd[1]:
                            function_3()
                        function_5()
                        function_7()
                        function_9()
                        agt_crd = belief_set['agent']['coordinates']
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to efficiently collect all available parcels, then deliver them to the appropriate delivery cells while avoiding non-walkable paths and utilizing any available keys to unlock doors if necessary.
Executable: False
Trigger function:
None



2024-10-21 21:11:39,082 - INFO - Testing intention 
def function():
    global belief_set
    agent_position = belief_set['agent']['coordinates']
    parcel_position = belief_set['parcel'][1]['coordinates']
    delivery_cell_position = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] in ['double_delivery_cell', 'delivery_cell']][0]

    while agent_position != parcel_position:
        if agent_position[0] < parcel_position[0]:
            function_2()
        elif agent_position[0] > parcel_position[0]:
            function_1()
        elif agent_position[1] < parcel_position[1]:
            function_4()
        elif agent_position[1] > parcel_position[1]:
            function_3()

    function_5()

    while agent_position != delivery_cell_position:
        if agent_position[0] < delivery_cell_position[0]:
            function_2()
        elif agent_position[0] > delivery_cell_position[0]:
            function_1()
        elif agent_position[1] < delivery_cell_position[1]:
            function_4()
        elif agent_position[1] > delivery_cell_position[1]:
            function_3()

    function_6()
2024-10-21 21:11:39,083 - INFO - The intention is valid.
2024-10-21 21:11:39,096 - INFO - Intention added to desire 3
2024-10-21 21:11:39,145 - INFO - Running intention 16 ...
2024-10-21 21:11:39,375 - INFO - Belief set thread started ...
2024-10-21 21:11:39,406 - INFO - Plan thread started ...
2024-10-21 21:11:39,419 - INFO - Started subprocess...
2024-10-21 21:11:39,419 - INFO - Belief set before intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': None}}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 2], 'carried_by_id': None}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:11:39,721 - INFO - Executing action action_5 ...
2024-10-21 21:11:39,966 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}]
2024-10-21 21:11:40,320 - INFO - Executing action action_4 ...
2024-10-21 21:11:40,552 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}]
2024-10-21 21:11:40,981 - INFO - Executing action action_4 ...
2024-10-21 21:11:41,219 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:41,565 - INFO - Executing action action_4 ...
2024-10-21 21:11:41,807 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:42,125 - INFO - Executing action action_4 ...
2024-10-21 21:11:42,355 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:42,722 - INFO - Executing action action_4 ...
2024-10-21 21:11:42,927 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:43,237 - INFO - Executing action action_4 ...
2024-10-21 21:11:43,480 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:43,814 - INFO - Executing action action_4 ...
2024-10-21 21:11:44,040 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:44,364 - INFO - Executing action action_4 ...
2024-10-21 21:11:44,570 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:44,883 - INFO - Executing action action_4 ...
2024-10-21 21:11:45,101 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:45,453 - INFO - Executing action action_4 ...
2024-10-21 21:11:45,659 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:46,010 - INFO - Executing action action_4 ...
2024-10-21 21:11:46,216 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:46,558 - INFO - Executing action action_4 ...
2024-10-21 21:11:46,807 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:47,093 - INFO - Executing action action_4 ...
2024-10-21 21:11:47,319 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:47,643 - INFO - Executing action action_4 ...
2024-10-21 21:11:47,906 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:48,205 - INFO - Executing action action_4 ...
2024-10-21 21:11:48,431 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:48,748 - INFO - Executing action action_4 ...
2024-10-21 21:11:48,992 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:49,305 - INFO - Executing action action_4 ...
2024-10-21 21:11:49,536 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:49,849 - INFO - Executing action action_4 ...
2024-10-21 21:11:50,092 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:50,402 - INFO - Executing action action_4 ...
2024-10-21 21:11:50,627 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:50,975 - INFO - Executing action action_4 ...
2024-10-21 21:11:51,178 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:51,525 - INFO - Executing action action_4 ...
2024-10-21 21:11:51,736 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:52,154 - INFO - Executing action action_4 ...
2024-10-21 21:11:52,398 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:52,789 - INFO - Executing action action_4 ...
2024-10-21 21:11:52,999 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:53,323 - INFO - Executing action action_4 ...
2024-10-21 21:11:53,566 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:53,884 - INFO - Executing action action_4 ...
2024-10-21 21:11:54,090 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:54,472 - INFO - Executing action action_4 ...
2024-10-21 21:11:54,702 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:55,045 - INFO - Executing action action_4 ...
2024-10-21 21:11:55,285 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:55,643 - INFO - Executing action action_4 ...
2024-10-21 21:11:55,874 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:56,201 - INFO - Executing action action_4 ...
2024-10-21 21:11:56,464 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:56,843 - INFO - Executing action action_4 ...
2024-10-21 21:11:57,066 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:57,389 - INFO - Executing action action_4 ...
2024-10-21 21:11:57,631 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:57,921 - INFO - Executing action action_4 ...
2024-10-21 21:11:58,155 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:58,523 - INFO - Executing action action_4 ...
2024-10-21 21:11:58,763 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:59,084 - INFO - Executing action action_4 ...
2024-10-21 21:11:59,300 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:11:59,697 - INFO - Executing action action_4 ...
2024-10-21 21:11:59,904 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:00,259 - INFO - Executing action action_4 ...
2024-10-21 21:12:00,508 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:00,887 - INFO - Executing action action_4 ...
2024-10-21 21:12:01,105 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:01,455 - INFO - Executing action action_4 ...
2024-10-21 21:12:01,687 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:02,024 - INFO - Executing action action_4 ...
2024-10-21 21:12:02,226 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:02,616 - INFO - Executing action action_4 ...
2024-10-21 21:12:02,847 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:03,232 - INFO - Executing action action_4 ...
2024-10-21 21:12:03,513 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:03,860 - INFO - Executing action action_4 ...
2024-10-21 21:12:04,077 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:04,394 - INFO - Executing action action_4 ...
2024-10-21 21:12:04,628 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:04,941 - INFO - Executing action action_4 ...
2024-10-21 21:12:05,152 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:05,426 - INFO - Executing action action_4 ...
2024-10-21 21:12:05,658 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:05,950 - INFO - Executing action action_4 ...
2024-10-21 21:12:06,169 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:06,498 - INFO - Executing action action_4 ...
2024-10-21 21:12:06,772 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:07,066 - INFO - Executing action action_4 ...
2024-10-21 21:12:07,317 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:07,671 - INFO - Executing action action_4 ...
2024-10-21 21:12:07,890 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:08,277 - INFO - Executing action action_4 ...
2024-10-21 21:12:08,487 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:08,778 - INFO - Executing action action_4 ...
2024-10-21 21:12:09,015 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:09,345 - INFO - Executing action action_4 ...
2024-10-21 21:12:09,457 - ERROR - Error during intention 16 execution. Intention 16 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 30 seconds
2024-10-21 21:12:09,488 - INFO - Belief set thread terminated.
2024-10-21 21:12:09,556 - INFO - Action action_4 executed. Events received: []
2024-10-21 21:12:09,843 - INFO - Plan thread terminated.
2024-10-21 21:12:09,874 - INFO - Intention 16 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-10-21 21:12:09,874 - INFO - Belief set after intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:12:09,906 - INFO - Invalidating intention 16 ...
2024-10-21 21:12:14,264 - INFO - Testing intention 
def function():
    global belief_set
    while belief_set['agent']['coordinates'] != [3, 0]:
        if belief_set['agent']['coordinates'][0] < 3:
            function_2()
        elif belief_set['agent']['coordinates'][1] > 0:
            function_3()
    if belief_set['agent']['parcels_carried_ids']:
        function_6()
2024-10-21 21:12:14,277 - INFO - The intention is valid.
2024-10-21 21:12:14,315 - INFO - Intention added to desire 3
2024-10-21 21:12:14,340 - INFO - Running intention 17 ...
2024-10-21 21:12:14,532 - INFO - Belief set thread started ...
2024-10-21 21:12:14,538 - INFO - Plan thread started ...
2024-10-21 21:12:14,563 - INFO - Started subprocess...
2024-10-21 21:12:14,582 - INFO - Belief set before intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:12:14,883 - INFO - Executing action action_2 ...
2024-10-21 21:12:15,102 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:15,426 - INFO - Executing action action_2 ...
2024-10-21 21:12:15,649 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:15,960 - INFO - Executing action action_2 ...
2024-10-21 21:12:16,221 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:16,551 - INFO - Executing action action_2 ...
2024-10-21 21:12:16,830 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:17,242 - INFO - Executing action action_2 ...
2024-10-21 21:12:17,459 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:17,809 - INFO - Executing action action_2 ...
2024-10-21 21:12:18,070 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:18,369 - INFO - Executing action action_2 ...
2024-10-21 21:12:18,593 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:18,917 - INFO - Executing action action_2 ...
2024-10-21 21:12:19,147 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:19,524 - INFO - Executing action action_2 ...
2024-10-21 21:12:19,760 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:20,116 - INFO - Executing action action_2 ...
2024-10-21 21:12:20,342 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:20,730 - INFO - Executing action action_2 ...
2024-10-21 21:12:20,954 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:21,311 - INFO - Executing action action_2 ...
2024-10-21 21:12:21,525 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:21,861 - INFO - Executing action action_2 ...
2024-10-21 21:12:22,072 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:22,416 - INFO - Executing action action_2 ...
2024-10-21 21:12:22,690 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:23,085 - INFO - Executing action action_2 ...
2024-10-21 21:12:23,304 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:23,692 - INFO - Executing action action_2 ...
2024-10-21 21:12:23,905 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:24,385 - INFO - Executing action action_2 ...
2024-10-21 21:12:24,620 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:24,911 - INFO - Executing action action_2 ...
2024-10-21 21:12:25,117 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:25,448 - INFO - Executing action action_2 ...
2024-10-21 21:12:25,703 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:26,052 - INFO - Executing action action_2 ...
2024-10-21 21:12:26,276 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:26,675 - INFO - Executing action action_2 ...
2024-10-21 21:12:26,899 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:27,212 - INFO - Executing action action_2 ...
2024-10-21 21:12:27,444 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:27,785 - INFO - Executing action action_2 ...
2024-10-21 21:12:28,004 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:28,298 - INFO - Executing action action_2 ...
2024-10-21 21:12:28,563 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:28,900 - INFO - Executing action action_2 ...
2024-10-21 21:12:29,162 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:29,479 - INFO - Executing action action_2 ...
2024-10-21 21:12:29,703 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:30,062 - INFO - Executing action action_2 ...
2024-10-21 21:12:30,286 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:30,645 - INFO - Executing action action_2 ...
2024-10-21 21:12:30,863 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:31,156 - INFO - Executing action action_2 ...
2024-10-21 21:12:31,385 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:31,752 - INFO - Executing action action_2 ...
2024-10-21 21:12:32,001 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:32,325 - INFO - Executing action action_2 ...
2024-10-21 21:12:32,568 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:32,915 - INFO - Executing action action_2 ...
2024-10-21 21:12:33,147 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:33,482 - INFO - Executing action action_2 ...
2024-10-21 21:12:33,751 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:34,089 - INFO - Executing action action_2 ...
2024-10-21 21:12:34,313 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:34,611 - INFO - Executing action action_2 ...
2024-10-21 21:12:34,836 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:35,197 - INFO - Executing action action_2 ...
2024-10-21 21:12:35,453 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:35,821 - INFO - Executing action action_2 ...
2024-10-21 21:12:36,044 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:36,381 - INFO - Executing action action_2 ...
2024-10-21 21:12:36,620 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:36,977 - INFO - Executing action action_2 ...
2024-10-21 21:12:37,201 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:37,536 - INFO - Executing action action_2 ...
2024-10-21 21:12:37,766 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:38,127 - INFO - Executing action action_2 ...
2024-10-21 21:12:38,382 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:38,737 - INFO - Executing action action_2 ...
2024-10-21 21:12:38,968 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:39,317 - INFO - Executing action action_2 ...
2024-10-21 21:12:39,530 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:39,870 - INFO - Executing action action_2 ...
2024-10-21 21:12:40,076 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:40,408 - INFO - Executing action action_2 ...
2024-10-21 21:12:40,625 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:40,934 - INFO - Executing action action_2 ...
2024-10-21 21:12:41,202 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:41,533 - INFO - Executing action action_2 ...
2024-10-21 21:12:41,776 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:42,074 - INFO - Executing action action_2 ...
2024-10-21 21:12:42,308 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:42,677 - INFO - Executing action action_2 ...
2024-10-21 21:12:42,951 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:43,314 - INFO - Executing action action_2 ...
2024-10-21 21:12:43,537 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:43,927 - INFO - Executing action action_2 ...
2024-10-21 21:12:44,140 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:44,413 - INFO - Executing action action_2 ...
2024-10-21 21:12:44,628 - ERROR - Error during intention 17 execution. Intention 17 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 30 seconds
2024-10-21 21:12:44,696 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:44,702 - INFO - Belief set thread terminated.
2024-10-21 21:12:44,987 - INFO - Plan thread terminated.
2024-10-21 21:12:45,037 - INFO - Intention 17 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2']. Events: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-10-21 21:12:45,044 - INFO - Belief set after intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:12:45,075 - INFO - Invalidating intention 17 ...
2024-10-21 21:12:49,297 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent']['parcels_carried_ids']:
        if belief_set['agent']['coordinates'] == [3, 0]:
            function_6()
        elif belief_set['agent']['coordinates'][0] < 3:
            function_2()
        elif belief_set['agent']['coordinates'][1] > 0:
            function_3()
2024-10-21 21:12:49,297 - INFO - The intention is valid.
2024-10-21 21:12:49,310 - INFO - Intention added to desire 3
2024-10-21 21:12:49,310 - INFO - Running intention 18 ...
2024-10-21 21:12:49,410 - INFO - Belief set thread started ...
2024-10-21 21:12:49,430 - INFO - Plan thread started ...
2024-10-21 21:12:49,448 - INFO - Started subprocess...
2024-10-21 21:12:49,448 - INFO - Belief set before intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:12:49,751 - INFO - Executing action action_2 ...
2024-10-21 21:12:49,988 - INFO - Action action_2 executed. Events received: []
2024-10-21 21:12:50,333 - INFO - Plan thread terminated.
2024-10-21 21:12:50,388 - INFO - Belief set thread terminated.
2024-10-21 21:12:50,401 - INFO - Intention 18 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[]]
2024-10-21 21:12:50,401 - INFO - Belief set after intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:12:53,274 - INFO - Invalidating intention 18 ...
2024-10-21 21:12:53,274 - INFO - Invalidating intention 2 ...
2024-10-21 21:12:53,274 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-10-21 21:12:53,274 - INFO - Invalidating intention 3 ...
2024-10-21 21:12:53,274 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-10-21 21:12:53,274 - INFO - Invalidating intention 6 ...
2024-10-21 21:12:53,274 - INFO - Intention 6 is a base action. It cannot be invalidated.
2024-10-21 21:13:07,553 - INFO - Desire added: 4. Desires:
Desire 1: The agent's long term goal is to strategically carry and deliver all parcels available in the environment to the designated delivery cells, while overcoming any obstacles that may arise, such as locked doors, by finding and using keys.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to find and pick up the key to unlock doors on its path.
                def function_7():
                    global belief_set
                    key_coordinates = belief_set['key'][1]['coordinates']
                    agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent']['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to pick up a parcel and move towards the delivery cell.
                def function_8():
                    global belief_set
                    parcel = next(iter(belief_set['parcel'].values()))
                    agent = belief_set['agent']
                    if agent['coordinates'] == parcel['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] < parcel['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][0] > parcel['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][1] < parcel['coordinates'][1]:
                        function_4()
                    elif agent['coordinates'][1] > parcel['coordinates'][1]:
                        function_3()
                
    Intention ID: [9]
    Executable: True
    Description: The short term goal is for the agent to pick up parcels if it is on a parcel spawn cell. If a parcel is available on the same cell as the agent and the agent is not carrying any parcel, it should pick up the parcel.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcel']
                    for parcel in parcels.values():
                        if parcel['coordinates'] == agent['coordinates'] and not agent[
                            'parcels_carried_ids']:
                            function_5()
                            break
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest delivery cell by overcoming any obstacles in its path, and deliver the parcel it is currently carrying.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    parcel = belief_set['parcel'][1]
                    if agent['coordinates'] == parcel['coordinates'] and 1 in agent[
                        'parcels_carried_ids']:
                        function_4()
                    elif agent['has_key'] and belief_set['door'][1]['coordinates'] in [[
                        agent['coordinates'][0] + 1, agent['coordinates'][1]], [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], [agent[
                        'coordinates'][0], agent['coordinates'][1] + 1]]:
                        function_5()
                    elif agent['coordinates'] == belief_set['map']['grid'][3][
                        'cell_coordinates'] and 1 in agent['parcels_carried_ids']:
                        function_6()
                    else:
                        function_2()
                        function_4()
                
    Intention ID: [11]
    Executable: False
    Description: The short term goal of the agent is to navigate towards the delivery cell while avoiding any non-walkable cells and using keys to unlock any doors on the path. Once the delivery cell is reached, the agent will deliver all the parcels it is carrying.
                def function_11():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    parcel_coordinates = belief_set['parcel'][1]['coordinates']
                    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] ==
                        'double_delivery_cell' or cell['cell_type'] == 'delivery_cell'][0]
                    if belief_set['agent']['has_key']:
                        for door in belief_set['door'].values():
                            if door['coordinates'] == agent_coordinates:
                                function_7()
                    if parcel_coordinates == agent_coordinates and 1 not in belief_set['agent'
                        ]['parcels_carried_ids']:
                        function_9()
                    if delivery_cell_coordinates[0] < agent_coordinates[0]:
                        function_1()
                    elif delivery_cell_coordinates[0] > agent_coordinates[0]:
                        function_2()
                    elif delivery_cell_coordinates[1] < agent_coordinates[1]:
                        function_3()
                    elif delivery_cell_coordinates[1] > agent_coordinates[1]:
                        function_4()
                    if delivery_cell_coordinates == agent_coordinates:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to navigate towards the delivery cell by choosing a path that avoids non-walkable cells and uses the key to unlock any doors that may be in its way.
                def function_12():
                    global belief_set
                    agent = belief_set['agent']
                    map = belief_set['map']
                    parcel = belief_set['parcel'][1]
                    key = belief_set['key'][1]
                    door_1 = belief_set['door'][1]
                    door_2 = belief_set['door'][2]
                    if agent['coordinates'] == parcel['coordinates']:
                        function_5()
                    elif agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif (agent['coordinates'] == door_1['coordinates'] or agent[
                        'coordinates'] == door_2['coordinates']) and agent['has_key']:
                        function_5()
                    else:
                        for cell in map['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > agent['coordinates'][0]:
                                function_2()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < agent['coordinates'][0]:
                                function_1()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > agent['coordinates'][1]:
                                function_4()
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < agent['coordinates'][1]:
                                function_3()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all parcels and keys from the environment, navigate through all walkable cell types avoiding non-walkable cells, and finally deliver all collected parcels to the respective delivery cells to maximize the score.
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to navigate towards the double delivery cell, while avoiding non-walkable cells, and deliver the parcels it is carrying to maximize its score.
                def function_13():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'double_delivery_cell':
                            delivery_coords = cell['cell_coordinates']
                            break
                    if agent_coords[0] < delivery_coords[0] and belief_set['map']['grid'][
                        agent_coords[0] + 1][agent_coords[1]]['cell_type'] != 'non_walkable':
                        function_2()
                    elif agent_coords[0] > delivery_coords[0] and belief_set['map']['grid'][
                        agent_coords[0] - 1][agent_coords[1]]['cell_type'] != 'non_walkable':
                        function_1()
                    elif agent_coords[1] < delivery_coords[1] and belief_set['map']['grid'][
                        agent_coords[0]][agent_coords[1] + 1]['cell_type'] != 'non_walkable':
                        function_4()
                    elif agent_coords[1] > delivery_coords[1] and belief_set['map']['grid'][
                        agent_coords[0]][agent_coords[1] - 1]['cell_type'] != 'non_walkable':
                        function_3()
                    if agent_coords == delivery_coords:
                        function_6()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is for the agent to move towards the delivery cell while avoiding non-walkable cells, and deliver the parcel if it is carrying any.
                def function_14():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if 'delivery' in cell['cell_type']]
                    for cell in delivery_cells:
                        if cell[0] < agent_coords[0]:
                            function_1()
                        elif cell[0] > agent_coords[0]:
                            function_2()
                        if cell[1] < agent_coords[1]:
                            function_3()
                        elif cell[1] > agent_coords[1]:
                            function_4()
                    if belief_set['agent']['parcels_carried_ids']:
                        function_6()
                
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest walkable cell, pick up any key or parcel available, and then try to move again towards the delivery cell while avoiding non-walkable cells.
                def function_15():
                    global belief_set
                    agt_crd = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    walkable_cells = [c['cell_coordinates'] for c in map_grid if c[
                        'cell_type'] == 'walkable']
                    target_crd = min(walkable_cells, key=lambda c: abs(c[0] - agt_crd[0]) +
                        abs(c[1] - agt_crd[1]))
                    while agt_crd != target_crd:
                        if agt_crd[0] < target_crd[0]:
                            function_2()
                        elif agt_crd[0] > target_crd[0]:
                            function_1()
                        elif agt_crd[1] < target_crd[1]:
                            function_4()
                        elif agt_crd[1] > target_crd[1]:
                            function_3()
                        function_5()
                        function_7()
                        function_9()
                        agt_crd = belief_set['agent']['coordinates']
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to efficiently collect all available parcels, then deliver them to the appropriate delivery cells while avoiding non-walkable paths and utilizing any available keys to unlock doors if necessary.
    Intention ID: [16]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell.
                def function_16():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    parcel_position = belief_set['parcel'][1]['coordinates']
                    delivery_cell_position = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] in [
                        'double_delivery_cell', 'delivery_cell']][0]
                    while agent_position != parcel_position:
                        if agent_position[0] < parcel_position[0]:
                            function_2()
                        elif agent_position[0] > parcel_position[0]:
                            function_1()
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                    function_5()
                    while agent_position != delivery_cell_position:
                        if agent_position[0] < delivery_cell_position[0]:
                            function_2()
                        elif agent_position[0] > delivery_cell_position[0]:
                            function_1()
                        elif agent_position[1] < delivery_cell_position[1]:
                            function_4()
                        elif agent_position[1] > delivery_cell_position[1]:
                            function_3()
                    function_6()
                
    Intention ID: [17]
    Executable: False
    Description: The agent's short term goal is to move to the delivery cell and drop the parcel if it is carrying any.
                def function_17():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [3, 0]:
                        if belief_set['agent']['coordinates'][0] < 3:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > 0:
                            function_3()
                    if belief_set['agent']['parcels_carried_ids']:
                        function_6()
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is for the agent to deliver the parcel if it is carrying one by moving to the delivery cell and putting down the parcel.
                def function_18():
                    global belief_set
                    if belief_set['agent']['parcels_carried_ids']:
                        if belief_set['agent']['coordinates'] == [3, 0]:
                            function_6()
                        elif belief_set['agent']['coordinates'][0] < 3:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > 0:
                            function_3()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to collect all parcels from the spawn point, traverse the map avoiding non-walkable cells, unlock doors using keys if necessary, and deliver the parcels to the delivery cells for maximizing the score.
Executable: False
Trigger function:
None



2024-10-21 21:13:16,386 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    parcel = belief_set['parcel'][1]
    map = belief_set['map']['grid']
    delivery_cells = [cell for cell in map if cell['cell_type'] in ['delivery_cell', 'double_delivery_cell']]
    target_cell = min(delivery_cells, key=lambda cell: abs(cell['cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell['cell_coordinates'][1] - agent['coordinates'][1]))
    if target_cell['cell_coordinates'][0] > agent['coordinates'][0]:
        function_2()
    elif target_cell['cell_coordinates'][0] < agent['coordinates'][0]:
        function_1()
    elif target_cell['cell_coordinates'][1] > agent['coordinates'][1]:
        function_4()
    elif target_cell['cell_coordinates'][1] < agent['coordinates'][1]:
        function_3()
    elif parcel['id'] in agent['parcels_carried_ids']:
        function_6()
2024-10-21 21:13:16,386 - INFO - The intention is valid.
2024-10-21 21:13:16,405 - INFO - Intention added to desire 4
2024-10-21 21:13:16,417 - INFO - Running intention 19 ...
2024-10-21 21:13:16,573 - INFO - Belief set thread started ...
2024-10-21 21:13:16,615 - INFO - Plan thread started ...
2024-10-21 21:13:16,628 - INFO - Started subprocess...
2024-10-21 21:13:16,628 - INFO - Belief set before intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {1: {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1], 'has_key': True, 'score': 0}, 'key': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:13:16,987 - INFO - Executing action action_6 ...
2024-10-21 21:13:17,207 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 40}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': None}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}]
2024-10-21 21:13:17,507 - INFO - Belief set thread terminated.
2024-10-21 21:13:17,512 - INFO - Plan thread terminated.
2024-10-21 21:13:17,530 - INFO - Intention 19 execution has finished. Threads and subprocess terminated. Plan: ['action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 40}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': None}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-10-21 21:13:17,530 - INFO - Belief set after intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'double_delivery_cell'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'parcel': {}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 40}, 'key': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': None}}, 'door': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [2, 0]}}}
2024-10-21 21:13:26,443 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    if 'parcel' not in belief_set or not belief_set['parcel']:
        return False
    if 'agent' in belief_set and belief_set['agent']['id'] == 1 and belief_set['agent']['parcels_carried_ids']:
        return True
    if 'key' in belief_set and belief_set['key'][1]['carried_by_id'] == 1:
        return True
    if 'door' in belief_set and any(door['id'] == 1 for door in belief_set['door'].values() if door['coordinates'] == belief_set['agent']['coordinates']):
        return True
    return False
2024-10-21 21:13:26,462 - INFO - The trigger function is valid.
2024-10-21 21:13:26,462 - INFO - Trigger function added to desire 4.
