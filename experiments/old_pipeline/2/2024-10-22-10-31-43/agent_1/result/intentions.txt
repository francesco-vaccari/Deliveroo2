
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        
[7]
Executable: False
Description: The agent's short-term goal is to move in the direction of the parcel, making sure not to cross non-walkable cells, and pick up the parcel.
        def function_7():
            global belief_set
            target = belief_set['parcel'][1]['coordinates']
            agent_position = belief_set['agent'][1]['coordinates']
            while agent_position != target:
                if agent_position[0] < target[0] and belief_set['map']['grid'][
                    agent_position[0] + 1][agent_position[1]]['cell_type'
                    ] == 'walkable':
                    function_2()
                elif agent_position[0] > target[0] and belief_set['map']['grid'][
                    agent_position[0] - 1][agent_position[1]]['cell_type'
                    ] == 'walkable':
                    function_1()
                elif agent_position[1] < target[1] and belief_set['map']['grid'][
                    agent_position[0]][agent_position[1] + 1]['cell_type'
                    ] == 'walkable':
                    function_4()
                elif agent_position[1] > target[1] and belief_set['map']['grid'][
                    agent_position[0]][agent_position[1] - 1]['cell_type'
                    ] == 'walkable':
                    function_3()
            function_5()
        
[8]
Executable: False
Description: The agent's short-term goal is to move towards the parcel spawn cell and pick up the parcel.
        def function_8():
            global belief_set
            agent_coordinates = belief_set['agent'][1]['coordinates']
            parcel_coordinates = belief_set['parcel'][1]['coordinates']
            if agent_coordinates[0] > parcel_coordinates[0]:
                function_1()
            elif agent_coordinates[0] < parcel_coordinates[0]:
                function_2()
            elif agent_coordinates[1] > parcel_coordinates[1]:
                function_3()
            elif agent_coordinates[1] < parcel_coordinates[1]:
                function_4()
            else:
                function_5()
        
[9]
Executable: True
Description: The short-term goal is for the agent to navigate to the parcel spawn cell and pick up the parcel. This will be accomplished by first moving the agent to the parcel spawn cell and then picking up the parcel.
        def function_9():
            global belief_set
            parcel_location = belief_set['parcel'][1]['coordinates']
            agent_location = belief_set['agent'][1]['coordinates']
            while agent_location != parcel_location:
                if agent_location[0] < parcel_location[0]:
                    function_2()
                elif agent_location[0] > parcel_location[0]:
                    function_1()
                elif agent_location[1] < parcel_location[1]:
                    function_4()
                elif agent_location[1] > parcel_location[1]:
                    function_3()
                agent_location = belief_set['agent'][1]['coordinates']
            function_5()
        
[10]
Executable: False
Description: The short-term goal is to deliver the parcel that the agent is carrying to the delivery cell. This will be accomplished by navigating to the delivery cell and then putting down the parcel.
        def function_10():
            global belief_set
            while belief_set['agent'][1]['coordinates'] != belief_set['map']['grid'][7
                ]['cell_coordinates']:
                if belief_set['agent'][1]['coordinates'][0] < belief_set['map']['grid'
                    ][7]['cell_coordinates'][0]:
                    function_2()
                elif belief_set['agent'][1]['coordinates'][0] > belief_set['map'][
                    'grid'][7]['cell_coordinates'][0]:
                    function_1()
                elif belief_set['agent'][1]['coordinates'][1] < belief_set['map'][
                    'grid'][7]['cell_coordinates'][1]:
                    function_4()
                elif belief_set['agent'][1]['coordinates'][1] > belief_set['map'][
                    'grid'][7]['cell_coordinates'][1]:
                    function_3()
            function_6()
        
[11]
Executable: False
Description: The agent's short-term goal is to navigate to a delivery cell and drop off the parcel it is carrying.
        def function_11():
            global belief_set
            agent = belief_set['agent'][1]
            parcel = belief_set['parcel'][1]
            while agent['coordinates'] != [1, 3]:
                if agent['coordinates'][0] < 1:
                    function_2()
                elif agent['coordinates'][0] > 1:
                    function_1()
                elif agent['coordinates'][1] < 3:
                    function_4()
                elif agent['coordinates'][1] > 3:
                    function_3()
            function_6()
        
[12]
Executable: False
Description: The short-term goal is for the agent to navigate to the delivery cell and deliver the parcel. This will be accomplished by first moving the agent to the delivery cell and then putting down the parcel.
        def function_12():
            global belief_set
            agent_coordinates = belief_set['agent'][1]['coordinates']
            delivery_coordinates = [item['cell_coordinates'] for item in belief_set
                ['map']['grid'] if item['cell_type'] == 'delivery_cell'][0]
            if agent_coordinates[0] > delivery_coordinates[0]:
                function_1()
            elif agent_coordinates[0] < delivery_coordinates[0]:
                function_2()
            elif agent_coordinates[1] > delivery_coordinates[1]:
                function_3()
            elif agent_coordinates[1] < delivery_coordinates[1]:
                function_4()
            if agent_coordinates == delivery_coordinates:
                function_6()
        
[13]
Executable: True
Description: The short term goal is to move the agent to the cell containing the key and pick it up. This action will prepare the agent to unlock doors in the future.
        def function_13():
            global belief_set
            key_coordinates = belief_set['key'][1]['coordinates']
            agent_coordinates = belief_set['agent'][1]['coordinates']
            while agent_coordinates[0] != key_coordinates[0]:
                if agent_coordinates[0] > key_coordinates[0]:
                    function_1()
                else:
                    function_2()
                agent_coordinates = belief_set['agent'][1]['coordinates']
            while agent_coordinates[1] != key_coordinates[1]:
                if agent_coordinates[1] > key_coordinates[1]:
                    function_3()
                else:
                    function_4()
                agent_coordinates = belief_set['agent'][1]['coordinates']
            function_5()
        
[14]
Executable: True
Description: The short term goal is to deliver the parcel the agent is carrying to the delivery cell. The agent will navigate to the delivery cell and put down the parcel.
        def function_14():
            global belief_set
            delivery_coordinates = [cell['cell_coordinates'] for cell in belief_set
                ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
            agent_coordinates = belief_set['agent'][1]['coordinates']
            while agent_coordinates != delivery_coordinates:
                if agent_coordinates[0] > delivery_coordinates[0]:
                    function_1()
                elif agent_coordinates[0] < delivery_coordinates[0]:
                    function_2()
                if agent_coordinates[1] > delivery_coordinates[1]:
                    function_3()
                elif agent_coordinates[1] < delivery_coordinates[1]:
                    function_4()
                agent_coordinates = belief_set['agent'][1]['coordinates']
            function_6()
        
[15]
Executable: False
Description: The short-term goal is for the agent to navigate to the cell containing the key, pick it up, then navigate to the door and unlock it. After unlocking the door, the agent should navigate to the parcel spawn cell, pick up the parcel, and finally, deliver the parcel to the delivery cell.
        def function_15():
            global belief_set
            function_13()
            if belief_set['agent'][1]['coordinates'] == belief_set['door'][1][
                'coordinates'] and belief_set['agent'][1]['has_key']:
                function_5()
            else:
                function_1()
                function_3()
            function_9()
            function_14()
        
[16]
Executable: False
Description: The short-term goal is to navigate to the parcel spawn cell, pick up the parcel, then navigate to the delivery cell, and deliver the parcel, all while avoiding non-walkable areas.
        def function_16():
            global belief_set
            agent_coords = belief_set['agent'][1]['coordinates']
            parcel_spawn_coords = [cell['cell_coordinates'] for cell in belief_set[
                'map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
            delivery_coords = [cell['cell_coordinates'] for cell in belief_set[
                'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
            while agent_coords != parcel_spawn_coords:
                if parcel_spawn_coords[0] < agent_coords[0]:
                    function_1()
                elif parcel_spawn_coords[0] > agent_coords[0]:
                    function_2()
                elif parcel_spawn_coords[1] < agent_coords[1]:
                    function_3()
                elif parcel_spawn_coords[1] > agent_coords[1]:
                    function_4()
                agent_coords = belief_set['agent'][1]['coordinates']
            function_5()
            while agent_coords != delivery_coords:
                if delivery_coords[0] < agent_coords[0]:
                    function_1()
                elif delivery_coords[0] > agent_coords[0]:
                    function_2()
                elif delivery_coords[1] < agent_coords[1]:
                    function_3()
                elif delivery_coords[1] > agent_coords[1]:
                    function_4()
                agent_coords = belief_set['agent'][1]['coordinates']
            function_6()
        
[17]
Executable: False
Description: The agent's short term goal is to navigate to the parcel spawn cell, pick up the parcel, then navigate to the delivery cell, and deliver the parcel, all while avoiding non-walkable cells.
        def function_17():
            global belief_set
            if not belief_set['agent'][1]['parcels_carried_ids']:
                function_9()
            if belief_set['agent'][1]['coordinates'] != [1, 3]:
                while belief_set['agent'][1]['coordinates'][1] != 3:
                    function_4()
            function_14()
            while belief_set['agent'][1]['coordinates'][1] != 0:
                function_3()
        
