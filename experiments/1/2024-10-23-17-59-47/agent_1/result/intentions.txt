
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        
[7]
Executable: True
Description: The short term goal is to navigate the agent towards the parcel spawn location and pick up a parcel.
        def function_7():
            global belief_set
            parcel_spawn = [cell for cell in belief_set['map']['grid'] if cell[
                'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
            agent_pos = belief_set['agent']['coordinates']
            while agent_pos[0] > parcel_spawn[0]:
                function_1()
                agent_pos[0] -= 1
            while agent_pos[0] < parcel_spawn[0]:
                function_2()
                agent_pos[0] += 1
            while agent_pos[1] > parcel_spawn[1]:
                function_3()
                agent_pos[1] -= 1
            while agent_pos[1] < parcel_spawn[1]:
                function_4()
                agent_pos[1] += 1
            function_5()
        
[8]
Executable: True
Description: The short term goal is to navigate the agent towards the delivery cell and deliver the parcels it's carrying.
        def function_8():
            global belief_set
            delivery_cell_coordinates = [cell['cell_coordinates'] for cell in
                belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
            while belief_set['agent']['coordinates'] != delivery_cell_coordinates:
                if belief_set['agent']['coordinates'][0] < delivery_cell_coordinates[0
                    ]:
                    function_2()
                elif belief_set['agent']['coordinates'][0] > delivery_cell_coordinates[
                    0]:
                    function_1()
                elif belief_set['agent']['coordinates'][1] < delivery_cell_coordinates[
                    1]:
                    function_4()
                elif belief_set['agent']['coordinates'][1] > delivery_cell_coordinates[
                    1]:
                    function_3()
            function_6()
        
