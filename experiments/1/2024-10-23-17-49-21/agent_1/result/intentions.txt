
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        
[7]
Executable: False
Description: The short term goal is to navigate the agent towards the closest parcel and pick it up to carry.
        def function_7():
            global belief_set
            agent_coords = belief_set['agent']['coordinates']
            parcel_coords = belief_set['parcel'][1]['coordinates']
            if agent_coords[0] > parcel_coords[0]:
                function_1()
            elif agent_coords[0] < parcel_coords[0]:
                function_2()
            if agent_coords[1] > parcel_coords[1]:
                function_3()
            elif agent_coords[1] < parcel_coords[1]:
                function_4()
            else:
                function_5()
        
[8]
Executable: False
Description: The short term goal is to move towards the parcel spawn area, pick up a parcel, and then move towards the delivery cell to deliver the parcel.
        def function_8():
            global belief_set
            spawn = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if
                cell['cell_type'] == 'parcels_spawn'][0]
            delivery = [cell['cell_coordinates'] for cell in belief_set['map'][
                'grid'] if cell['cell_type'] == 'delivery_cell'][0]
            agent = belief_set['agent']['coordinates']
            while agent != spawn:
                if agent[0] < spawn[0]:
                    function_2()
                elif agent[0] > spawn[0]:
                    function_1()
                elif agent[1] < spawn[1]:
                    function_4()
                elif agent[1] > spawn[1]:
                    function_3()
            function_5()
            while agent != delivery:
                if agent[0] < delivery[0]:
                    function_2()
                elif agent[0] > delivery[0]:
                    function_1()
                elif agent[1] < delivery[1]:
                    function_4()
                elif agent[1] > delivery[1]:
                    function_3()
            function_6()
        
[9]
Executable: True
Description: The short term goal of the agent is to move towards the delivery cell while carrying a parcel, check if it's at the delivery cell, and if it is, deliver the parcel.
        def function_9():
            global belief_set
            agent = belief_set['agent']
            delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
            while agent['coordinates'] != delivery_cell:
                if agent['coordinates'][0] < delivery_cell[0]:
                    function_2()
                    agent['coordinates'][0] += 1
                elif agent['coordinates'][0] > delivery_cell[0]:
                    function_1()
                    agent['coordinates'][0] -= 1
                elif agent['coordinates'][1] < delivery_cell[1]:
                    function_4()
                    agent['coordinates'][1] += 1
                elif agent['coordinates'][1] > delivery_cell[1]:
                    function_3()
                    agent['coordinates'][1] -= 1
            function_6()
        
