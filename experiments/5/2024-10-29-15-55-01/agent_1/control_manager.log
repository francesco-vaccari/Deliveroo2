2024-10-29 15:55:02,212 - INFO - Loading actions from agent_dir/actions.json ...
2024-10-29 15:55:02,263 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-10-29 15:55:39,402 - INFO - Checking if a desire has been triggered ...
Desires: Empty
2024-10-29 15:55:39,414 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-10-29 15:55:39,414 - INFO - No desire has been triggered.
2024-10-29 15:55:39,414 - INFO - No desire triggered.
2024-10-29 15:55:41,285 - INFO - Desire added: 1. Desires:
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
Executable: False
Trigger function:
None



2024-10-29 15:55:53,351 - INFO - Testing intention 
def function():
    global belief_set
    agent_position = belief_set['agent'][1]['coordinates']
    parcel_position = belief_set['parcels'][1]['coordinates']
    delivery_position = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    while agent_position != parcel_position:
        if agent_position[0] > parcel_position[0]:
            function_1()
            agent_position[0] -= 1
        elif agent_position[0] < parcel_position[0]:
            function_2()
            agent_position[0] += 1
        elif agent_position[1] > parcel_position[1]:
            function_3()
            agent_position[1] -= 1
        elif agent_position[1] < parcel_position[1]:
            function_4()
            agent_position[1] += 1
    function_5()
    while agent_position != delivery_position:
        if agent_position[0] > delivery_position[0]:
            function_1()
            agent_position[0] -= 1
        elif agent_position[0] < delivery_position[0]:
            function_2()
            agent_position[0] += 1
        elif agent_position[1] > delivery_position[1]:
            function_3()
            agent_position[1] -= 1
        elif agent_position[1] < delivery_position[1]:
            function_4()
            agent_position[1] += 1
    function_6()
2024-10-29 15:55:53,351 - INFO - The intention is valid.
2024-10-29 15:55:53,359 - INFO - Intention added to desire 1
2024-10-29 15:55:53,365 - INFO - Running intention 7 ...
2024-10-29 15:55:53,403 - INFO - Belief set thread started ...
2024-10-29 15:55:53,416 - INFO - Plan thread started ...
2024-10-29 15:55:53,428 - INFO - Started subprocess...
2024-10-29 15:55:53,496 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'score': 0}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:55:53,836 - INFO - Executing action action_1 ...
2024-10-29 15:55:54,060 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 0}}]
2024-10-29 15:55:54,403 - INFO - Executing action action_3 ...
2024-10-29 15:55:54,645 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 0}}]
2024-10-29 15:55:55,012 - INFO - Executing action action_5 ...
2024-10-29 15:55:55,253 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}]
2024-10-29 15:55:55,542 - INFO - Executing action action_2 ...
2024-10-29 15:55:55,767 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'score': 0}}]
2024-10-29 15:55:56,135 - INFO - Executing action action_4 ...
2024-10-29 15:55:56,365 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2], 'score': 0}}]
2024-10-29 15:55:56,745 - INFO - Executing action action_4 ...
2024-10-29 15:55:56,981 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [1, 2], 'score': 0}}]
2024-10-29 15:55:57,298 - INFO - Executing action action_4 ...
2024-10-29 15:55:57,511 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'score': 0}}]
2024-10-29 15:55:57,854 - INFO - Executing action action_6 ...
2024-10-29 15:55:58,130 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-10-29 15:55:58,448 - INFO - Plan thread terminated.
2024-10-29 15:55:58,523 - INFO - Belief set thread terminated.
2024-10-29 15:55:58,610 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 0}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 0}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'score': 0}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2], 'score': 0}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [1, 2], 'score': 0}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'score': 0}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-10-29 15:55:58,610 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40}}, 'parcels': {}}
2024-10-29 15:56:05,706 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    # If the agent is not carrying any parcels and there are no parcels in the map, it should not pursue the goal
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set['parcels']:
        return False
    # If the agent is carrying parcels, it should pursue the goal
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    # If there are parcels in the map, the agent should pursue the goal
    if belief_set['parcels']:
        return True
    return False
2024-10-29 15:56:05,707 - INFO - The trigger function is valid.
2024-10-29 15:56:05,707 - INFO - Trigger function added to desire 1.
2024-10-29 15:56:06,923 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
    Intention ID: [7]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the delivery cell to deliver the parcel.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_position != parcel_position:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < parcel_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position != delivery_position:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < delivery_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < delivery_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set[
        'parcels']:
        return False
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    if belief_set['parcels']:
        return True
    return False




2024-10-29 15:56:06,923 - INFO - Running trigger function for desire 1 ...
2024-10-29 15:56:06,923 - INFO - Trigger function for desire 1 has been executed. Result: True
2024-10-29 15:56:06,923 - INFO - Desire 1 could be triggered. Adding it to the list...
2024-10-29 15:56:06,923 - INFO - Desires triggered: [1]. Now randomly choosing which one to run.
2024-10-29 15:56:06,936 - INFO - Desire 1 was randomly chosen. Desire 1 has been triggered.
2024-10-29 15:56:06,936 - INFO - Desire 1 is about to be executed ...
2024-10-29 15:56:06,936 - INFO - Executing all valid intentions for desire 1 ...
2024-10-29 15:56:06,936 - INFO - Executing intention 7 ...
2024-10-29 15:56:06,936 - INFO - Running intention 7 ...
2024-10-29 15:56:07,072 - INFO - Belief set thread started ...
2024-10-29 15:56:07,084 - INFO - Plan thread started ...
2024-10-29 15:56:07,096 - INFO - Started subprocess...
2024-10-29 15:56:07,115 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:56:22,173 - ERROR - Error during intention 7 execution. Intention 7 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-10-29 15:56:22,198 - INFO - Belief set thread terminated.
2024-10-29 15:56:22,229 - INFO - Plan thread terminated.
2024-10-29 15:56:22,254 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-10-29 15:56:22,255 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:56:22,255 - INFO - Invalidating intention 7 ...
2024-10-29 15:56:22,255 - ERROR - Error during intention 7 execution. Desire 1 is now invalid and intention 7 has been invalidated.
2024-10-29 15:56:23,143 - INFO - Invalidating desire 1 ...
2024-10-29 15:56:27,367 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the delivery cell to deliver the parcel.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_position != parcel_position:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < parcel_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position != delivery_position:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < delivery_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < delivery_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set[
        'parcels']:
        return False
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    if belief_set['parcels']:
        return True
    return False




2024-10-29 15:56:27,367 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-10-29 15:56:27,367 - INFO - No desire has been triggered.
2024-10-29 15:56:27,373 - INFO - No desire triggered.
2024-10-29 15:56:29,290 - INFO - Desire added: 2. Desires:
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the delivery cell to deliver the parcel.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_position != parcel_position:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < parcel_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position != delivery_position:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < delivery_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < delivery_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set[
        'parcels']:
        return False
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    if belief_set['parcels']:
        return True
    return False



Desire 2: The long-term goal is to develop an optimal pathfinding strategy that allows the agent to collect and deliver as many parcels as possible while minimizing travel time and avoiding non-walkable cells.
Executable: False
Trigger function:
None



2024-10-29 15:56:40,851 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    map_grid = belief_set['map']['grid']
    delivery_cell = [cell for cell in map_grid if cell['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
    parcel_ids = [parcel['id'] for parcel in parcels.values() if parcel['carried_by_id'] is None]
    if parcel_ids:
        parcel_location = parcels[parcel_ids[0]]['coordinates']
        while agent['coordinates'] != parcel_location:
            if agent['coordinates'][0] < parcel_location[0]:
                function_2()
            elif agent['coordinates'][0] > parcel_location[0]:
                function_1()
            elif agent['coordinates'][1] < parcel_location[1]:
                function_4()
            elif agent['coordinates'][1] > parcel_location[1]:
                function_3()
        function_5()
    while agent['coordinates'] != delivery_cell:
        if agent['coordinates'][0] < delivery_cell[0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell[0]:
            function_1()
        elif agent['coordinates'][1] < delivery_cell[1]:
            function_4()
        elif agent['coordinates'][1] > delivery_cell[1]:
            function_3()
    function_6()
2024-10-29 15:56:40,864 - INFO - The intention is valid.
2024-10-29 15:56:40,884 - INFO - Intention added to desire 2
2024-10-29 15:56:40,903 - INFO - Running intention 8 ...
2024-10-29 15:56:41,072 - INFO - Belief set thread started ...
2024-10-29 15:56:41,085 - INFO - Plan thread started ...
2024-10-29 15:56:41,097 - INFO - Started subprocess...
2024-10-29 15:56:41,097 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:56:41,381 - INFO - Executing action action_1 ...
2024-10-29 15:56:41,588 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 40}}]
2024-10-29 15:56:41,965 - INFO - Executing action action_1 ...
2024-10-29 15:56:42,199 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:42,591 - INFO - Executing action action_1 ...
2024-10-29 15:56:42,816 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:43,196 - INFO - Executing action action_1 ...
2024-10-29 15:56:43,409 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:43,733 - INFO - Executing action action_1 ...
2024-10-29 15:56:43,962 - INFO - Action action_1 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-10-29 15:56:44,256 - INFO - Executing action action_1 ...
2024-10-29 15:56:44,480 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:44,797 - INFO - Executing action action_1 ...
2024-10-29 15:56:45,039 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:45,325 - INFO - Executing action action_1 ...
2024-10-29 15:56:45,556 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:45,911 - INFO - Executing action action_1 ...
2024-10-29 15:56:46,129 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:46,484 - INFO - Executing action action_1 ...
2024-10-29 15:56:46,696 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:47,006 - INFO - Executing action action_1 ...
2024-10-29 15:56:47,219 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:47,543 - INFO - Executing action action_1 ...
2024-10-29 15:56:47,799 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:48,123 - INFO - Executing action action_1 ...
2024-10-29 15:56:48,346 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:48,770 - INFO - Executing action action_1 ...
2024-10-29 15:56:48,989 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:49,281 - INFO - Executing action action_1 ...
2024-10-29 15:56:49,500 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:49,813 - INFO - Executing action action_1 ...
2024-10-29 15:56:50,027 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:50,364 - INFO - Executing action action_1 ...
2024-10-29 15:56:50,577 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:50,894 - INFO - Executing action action_1 ...
2024-10-29 15:56:51,123 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:51,434 - INFO - Executing action action_1 ...
2024-10-29 15:56:51,683 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:52,029 - INFO - Executing action action_1 ...
2024-10-29 15:56:52,268 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:52,569 - INFO - Executing action action_1 ...
2024-10-29 15:56:52,774 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:53,120 - INFO - Executing action action_1 ...
2024-10-29 15:56:53,363 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:53,668 - INFO - Executing action action_1 ...
2024-10-29 15:56:53,900 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:54,209 - INFO - Executing action action_1 ...
2024-10-29 15:56:54,429 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:54,742 - INFO - Executing action action_1 ...
2024-10-29 15:56:54,966 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:55,295 - INFO - Executing action action_1 ...
2024-10-29 15:56:55,507 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:55,806 - INFO - Executing action action_1 ...
2024-10-29 15:56:56,019 - INFO - Action action_1 executed. Events received: []
2024-10-29 15:56:56,150 - ERROR - Error during intention 8 execution. Intention 8 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-10-29 15:56:56,261 - INFO - Belief set thread terminated.
2024-10-29 15:56:56,342 - INFO - Plan thread terminated.
2024-10-29 15:56:56,361 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 40}}], [], [], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-10-29 15:56:56,361 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:57:03,048 - INFO - Invalidating intention 8 ...
2024-10-29 15:57:16,912 - INFO - Testing intention 
def function():
    global belief_set
    width = belief_set['map']['width']
    height = belief_set['map']['height']
    grid = belief_set['map']['grid']
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    non_walkable_cells = [cell for cell in grid if cell['cell_type'] == 'non_walkable']
    for i in range(width*height):
        for parcel in parcels.values():
            if parcel['carried_by_id'] is None and parcel['coordinates'] not in [cell['cell_coordinates'] for cell in non_walkable_cells]:
                while agent['coordinates'][0] > parcel['coordinates'][0]:
                    function_1()
                while agent['coordinates'][0] < parcel['coordinates'][0]:
                    function_2()
                while agent['coordinates'][1] > parcel['coordinates'][1]:
                    function_3()
                while agent['coordinates'][1] < parcel['coordinates'][1]:
                    function_4()
                function_5()
                break
        else:
            continue
        break
    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in grid if cell['cell_type'] == 'delivery_cell'][0]
    for i in range(width*height):
        while agent['coordinates'][0] > delivery_cell_coordinates[0]:
            function_1()
        while agent['coordinates'][0] < delivery_cell_coordinates[0]:
            function_2()
        while agent['coordinates'][1] > delivery_cell_coordinates[1]:
            function_3()
        while agent['coordinates'][1] < delivery_cell_coordinates[1]:
            function_4()
        function_6()
        break
2024-10-29 15:57:16,931 - INFO - The intention is valid.
2024-10-29 15:57:16,932 - INFO - Intention added to desire 2
2024-10-29 15:57:16,943 - INFO - Running intention 9 ...
2024-10-29 15:57:17,067 - INFO - Belief set thread started ...
2024-10-29 15:57:17,073 - INFO - Plan thread started ...
2024-10-29 15:57:17,098 - INFO - Started subprocess...
2024-10-29 15:57:17,117 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:57:17,384 - INFO - Executing action action_3 ...
2024-10-29 15:57:17,623 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 40}}]
2024-10-29 15:57:17,953 - INFO - Executing action action_3 ...
2024-10-29 15:57:18,272 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 40}}]
2024-10-29 15:57:18,592 - INFO - Executing action action_3 ...
2024-10-29 15:57:18,845 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40}}]
2024-10-29 15:57:19,169 - INFO - Executing action action_3 ...
2024-10-29 15:57:19,412 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:19,741 - INFO - Executing action action_3 ...
2024-10-29 15:57:19,974 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:20,343 - INFO - Executing action action_3 ...
2024-10-29 15:57:20,574 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:21,005 - INFO - Executing action action_3 ...
2024-10-29 15:57:21,231 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:21,650 - INFO - Executing action action_3 ...
2024-10-29 15:57:21,876 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:22,255 - INFO - Executing action action_3 ...
2024-10-29 15:57:22,461 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:22,806 - INFO - Executing action action_3 ...
2024-10-29 15:57:23,054 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:23,378 - INFO - Executing action action_3 ...
2024-10-29 15:57:23,583 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:23,893 - INFO - Executing action action_3 ...
2024-10-29 15:57:24,112 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:24,379 - INFO - Executing action action_3 ...
2024-10-29 15:57:24,620 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:24,975 - INFO - Executing action action_3 ...
2024-10-29 15:57:25,216 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:25,573 - INFO - Executing action action_3 ...
2024-10-29 15:57:25,834 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:26,157 - INFO - Executing action action_3 ...
2024-10-29 15:57:26,368 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:26,684 - INFO - Executing action action_3 ...
2024-10-29 15:57:26,922 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:27,233 - INFO - Executing action action_3 ...
2024-10-29 15:57:27,465 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:27,776 - INFO - Executing action action_3 ...
2024-10-29 15:57:28,018 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:28,371 - INFO - Executing action action_3 ...
2024-10-29 15:57:28,590 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:28,933 - INFO - Executing action action_3 ...
2024-10-29 15:57:29,152 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:29,501 - INFO - Executing action action_3 ...
2024-10-29 15:57:29,737 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:30,069 - INFO - Executing action action_3 ...
2024-10-29 15:57:30,309 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:30,589 - INFO - Executing action action_3 ...
2024-10-29 15:57:30,825 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:31,184 - INFO - Executing action action_3 ...
2024-10-29 15:57:31,401 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:31,718 - INFO - Executing action action_3 ...
2024-10-29 15:57:31,947 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:57:32,158 - ERROR - Error during intention 9 execution. Intention 9 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-10-29 15:57:32,194 - INFO - Belief set thread terminated.
2024-10-29 15:57:32,206 - INFO - Plan thread terminated.
2024-10-29 15:57:32,251 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-10-29 15:57:32,269 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:57:38,227 - INFO - Invalidating intention 9 ...
2024-10-29 15:57:52,818 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    map_info = belief_set['map']
    width = map_info['width']
    height = map_info['height']
    delivery_cell = [cell for cell in map_info['grid'] if cell['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
    for parcel_id, parcel_info in parcels.items():
        if parcel_info['carried_by_id'] is None:
            parcel_coordinates = parcel_info['coordinates']
            while agent['coordinates'] != parcel_coordinates:
                if agent['coordinates'][0] > parcel_coordinates[0] and agent['coordinates'][0] > 0:
                    function_1()
                elif agent['coordinates'][0] < parcel_coordinates[0] and agent['coordinates'][0] < width - 1:
                    function_2()
                if agent['coordinates'][1] > parcel_coordinates[1] and agent['coordinates'][1] > 0:
                    function_3()
                elif agent['coordinates'][1] < parcel_coordinates[1] and agent['coordinates'][1] < height - 1:
                    function_4()
            function_5()
            break
    while agent['coordinates'] != delivery_cell:
        if agent['coordinates'][0] > delivery_cell[0] and agent['coordinates'][0] > 0:
            function_1()
        elif agent['coordinates'][0] < delivery_cell[0] and agent['coordinates'][0] < width - 1:
            function_2()
        if agent['coordinates'][1] > delivery_cell[1] and agent['coordinates'][1] > 0:
            function_3()
        elif agent['coordinates'][1] < delivery_cell[1] and agent['coordinates'][1] < height - 1:
            function_4()
    function_6()

2024-10-29 15:57:52,826 - INFO - The intention is valid.
2024-10-29 15:57:52,834 - INFO - Intention added to desire 2
2024-10-29 15:57:52,846 - INFO - Running intention 10 ...
2024-10-29 15:57:53,003 - INFO - Belief set thread started ...
2024-10-29 15:57:53,034 - INFO - Plan thread started ...
2024-10-29 15:57:53,071 - INFO - Started subprocess...
2024-10-29 15:57:53,072 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 8: {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:57:53,348 - INFO - Executing action action_5 ...
2024-10-29 15:57:53,560 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}]
2024-10-29 15:57:53,902 - INFO - Executing action action_2 ...
2024-10-29 15:57:54,114 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}]
2024-10-29 15:57:54,469 - INFO - Executing action action_4 ...
2024-10-29 15:57:54,718 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}]
2024-10-29 15:57:55,060 - INFO - Executing action action_2 ...
2024-10-29 15:57:55,360 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:57:55,697 - INFO - Executing action action_4 ...
2024-10-29 15:57:55,941 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}]
2024-10-29 15:57:56,272 - INFO - Executing action action_2 ...
2024-10-29 15:57:56,529 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:57:56,837 - INFO - Executing action action_4 ...
2024-10-29 15:57:57,087 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}]
2024-10-29 15:57:57,440 - INFO - Executing action action_2 ...
2024-10-29 15:57:57,653 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:57:58,017 - INFO - Executing action action_4 ...
2024-10-29 15:57:58,253 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:57:58,696 - INFO - Executing action action_2 ...
2024-10-29 15:57:58,908 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:57:59,201 - INFO - Executing action action_4 ...
2024-10-29 15:57:59,411 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:57:59,735 - INFO - Executing action action_2 ...
2024-10-29 15:57:59,958 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:58:00,249 - INFO - Executing action action_4 ...
2024-10-29 15:58:00,462 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:58:00,786 - INFO - Executing action action_2 ...
2024-10-29 15:58:01,001 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:58:01,320 - INFO - Executing action action_4 ...
2024-10-29 15:58:01,563 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:58:01,911 - INFO - Executing action action_2 ...
2024-10-29 15:58:02,152 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:58:02,481 - INFO - Executing action action_4 ...
2024-10-29 15:58:02,692 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:58:03,021 - INFO - Executing action action_2 ...
2024-10-29 15:58:03,301 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:58:03,575 - INFO - Executing action action_4 ...
2024-10-29 15:58:03,800 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:58:04,131 - INFO - Executing action action_2 ...
2024-10-29 15:58:04,342 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:58:04,649 - INFO - Executing action action_4 ...
2024-10-29 15:58:04,856 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:58:05,227 - INFO - Executing action action_2 ...
2024-10-29 15:58:05,433 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:58:05,750 - INFO - Executing action action_4 ...
2024-10-29 15:58:05,961 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:58:06,272 - INFO - Executing action action_2 ...
2024-10-29 15:58:06,495 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:58:06,819 - INFO - Executing action action_4 ...
2024-10-29 15:58:07,057 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:58:07,362 - INFO - Executing action action_2 ...
2024-10-29 15:58:07,658 - INFO - Action action_2 executed. Events received: []
2024-10-29 15:58:08,014 - INFO - Executing action action_4 ...
2024-10-29 15:58:08,114 - ERROR - Error during intention 10 execution. Intention 10 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-10-29 15:58:08,170 - INFO - Belief set thread terminated.
2024-10-29 15:58:08,265 - INFO - Action action_4 executed. Events received: []
2024-10-29 15:58:08,553 - INFO - Plan thread terminated.
2024-10-29 15:58:08,591 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}], [], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}], [], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-10-29 15:58:08,603 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 6: {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 7: {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 8: {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:58:14,299 - INFO - Invalidating intention 10 ...
2024-10-29 15:58:14,330 - INFO - Invalidating intention 1 ...
2024-10-29 15:58:14,330 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-10-29 15:58:14,342 - INFO - Invalidating intention 2 ...
2024-10-29 15:58:14,342 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-10-29 15:58:14,343 - INFO - Invalidating intention 3 ...
2024-10-29 15:58:14,343 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-10-29 15:58:14,343 - INFO - Invalidating intention 4 ...
2024-10-29 15:58:14,343 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-10-29 15:58:14,361 - INFO - Invalidating intention 5 ...
2024-10-29 15:58:14,361 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-10-29 15:58:14,361 - INFO - Invalidating intention 6 ...
2024-10-29 15:58:14,362 - INFO - Intention 6 is a base action. It cannot be invalidated.
2024-10-29 15:58:15,760 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the delivery cell to deliver the parcel.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_position != parcel_position:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < parcel_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position != delivery_position:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < delivery_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < delivery_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set[
        'parcels']:
        return False
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    if belief_set['parcels']:
        return True
    return False



Desire 2: The long-term goal is to develop an optimal pathfinding strategy that allows the agent to collect and deliver as many parcels as possible while minimizing travel time and avoiding non-walkable cells.
    Intention ID: [8]
    Executable: False
    Description: The short-term goal is to navigate the agent to the nearest parcel, pick it up and return it to the delivery cell, while avoiding non-walkable cells.
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = [cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    parcel_ids = [parcel['id'] for parcel in parcels.values() if parcel[
                        'carried_by_id'] is None]
                    if parcel_ids:
                        parcel_location = parcels[parcel_ids[0]]['coordinates']
                        while agent['coordinates'] != parcel_location:
                            if agent['coordinates'][0] < parcel_location[0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel_location[0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel_location[1]:
                                function_4()
                            elif agent['coordinates'][1] > parcel_location[1]:
                                function_3()
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short-term goal is to navigate to the nearest parcel that isn't behind a non-walkable cell, pick it up, and deliver it to the delivery cell, while avoiding non-walkable cells.
                def function_9():
                    global belief_set
                    width = belief_set['map']['width']
                    height = belief_set['map']['height']
                    grid = belief_set['map']['grid']
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    non_walkable_cells = [cell for cell in grid if cell['cell_type'] ==
                        'non_walkable']
                    for i in range(width * height):
                        for parcel in parcels.values():
                            if parcel['carried_by_id'] is None and parcel['coordinates'
                                ] not in [cell['cell_coordinates'] for cell in
                                non_walkable_cells]:
                                while agent['coordinates'][0] > parcel['coordinates'][0]:
                                    function_1()
                                while agent['coordinates'][0] < parcel['coordinates'][0]:
                                    function_2()
                                while agent['coordinates'][1] > parcel['coordinates'][1]:
                                    function_3()
                                while agent['coordinates'][1] < parcel['coordinates'][1]:
                                    function_4()
                                function_5()
                                break
                        else:
                            continue
                        break
                    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in grid if
                        cell['cell_type'] == 'delivery_cell'][0]
                    for i in range(width * height):
                        while agent['coordinates'][0] > delivery_cell_coordinates[0]:
                            function_1()
                        while agent['coordinates'][0] < delivery_cell_coordinates[0]:
                            function_2()
                        while agent['coordinates'][1] > delivery_cell_coordinates[1]:
                            function_3()
                        while agent['coordinates'][1] < delivery_cell_coordinates[1]:
                            function_4()
                        function_6()
                        break
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short-term goal is to navigate to the nearest parcel, pick it up, and then navigate to the delivery cell to drop off the parcel, all while avoiding non-walkable cells.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_info = belief_set['map']
                    width = map_info['width']
                    height = map_info['height']
                    delivery_cell = [cell for cell in map_info['grid'] if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['carried_by_id'] is None:
                            parcel_coordinates = parcel_info['coordinates']
                            while agent['coordinates'] != parcel_coordinates:
                                if agent['coordinates'][0] > parcel_coordinates[0] and agent[
                                    'coordinates'][0] > 0:
                                    function_1()
                                elif agent['coordinates'][0] < parcel_coordinates[0] and agent[
                                    'coordinates'][0] < width - 1:
                                    function_2()
                                if agent['coordinates'][1] > parcel_coordinates[1] and agent[
                                    'coordinates'][1] > 0:
                                    function_3()
                                elif agent['coordinates'][1] < parcel_coordinates[1] and agent[
                                    'coordinates'][1] < height - 1:
                                    function_4()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0] and agent['coordinates'][
                            0] > 0:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0] and agent['coordinates'
                            ][0] < width - 1:
                            function_2()
                        if agent['coordinates'][1] > delivery_cell[1] and agent['coordinates'][
                            1] > 0:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1] and agent['coordinates'
                            ][1] < height - 1:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
None



2024-10-29 15:58:15,760 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-10-29 15:58:15,760 - INFO - No desire has been triggered.
2024-10-29 15:58:15,760 - INFO - No desire triggered.
2024-10-29 15:58:17,274 - INFO - Desire added: 3. Desires:
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the delivery cell to deliver the parcel.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_position != parcel_position:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < parcel_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position != delivery_position:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < delivery_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < delivery_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set[
        'parcels']:
        return False
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    if belief_set['parcels']:
        return True
    return False



Desire 2: The long-term goal is to develop an optimal pathfinding strategy that allows the agent to collect and deliver as many parcels as possible while minimizing travel time and avoiding non-walkable cells.
    Intention ID: [8]
    Executable: False
    Description: The short-term goal is to navigate the agent to the nearest parcel, pick it up and return it to the delivery cell, while avoiding non-walkable cells.
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = [cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    parcel_ids = [parcel['id'] for parcel in parcels.values() if parcel[
                        'carried_by_id'] is None]
                    if parcel_ids:
                        parcel_location = parcels[parcel_ids[0]]['coordinates']
                        while agent['coordinates'] != parcel_location:
                            if agent['coordinates'][0] < parcel_location[0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel_location[0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel_location[1]:
                                function_4()
                            elif agent['coordinates'][1] > parcel_location[1]:
                                function_3()
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short-term goal is to navigate to the nearest parcel that isn't behind a non-walkable cell, pick it up, and deliver it to the delivery cell, while avoiding non-walkable cells.
                def function_9():
                    global belief_set
                    width = belief_set['map']['width']
                    height = belief_set['map']['height']
                    grid = belief_set['map']['grid']
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    non_walkable_cells = [cell for cell in grid if cell['cell_type'] ==
                        'non_walkable']
                    for i in range(width * height):
                        for parcel in parcels.values():
                            if parcel['carried_by_id'] is None and parcel['coordinates'
                                ] not in [cell['cell_coordinates'] for cell in
                                non_walkable_cells]:
                                while agent['coordinates'][0] > parcel['coordinates'][0]:
                                    function_1()
                                while agent['coordinates'][0] < parcel['coordinates'][0]:
                                    function_2()
                                while agent['coordinates'][1] > parcel['coordinates'][1]:
                                    function_3()
                                while agent['coordinates'][1] < parcel['coordinates'][1]:
                                    function_4()
                                function_5()
                                break
                        else:
                            continue
                        break
                    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in grid if
                        cell['cell_type'] == 'delivery_cell'][0]
                    for i in range(width * height):
                        while agent['coordinates'][0] > delivery_cell_coordinates[0]:
                            function_1()
                        while agent['coordinates'][0] < delivery_cell_coordinates[0]:
                            function_2()
                        while agent['coordinates'][1] > delivery_cell_coordinates[1]:
                            function_3()
                        while agent['coordinates'][1] < delivery_cell_coordinates[1]:
                            function_4()
                        function_6()
                        break
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short-term goal is to navigate to the nearest parcel, pick it up, and then navigate to the delivery cell to drop off the parcel, all while avoiding non-walkable cells.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_info = belief_set['map']
                    width = map_info['width']
                    height = map_info['height']
                    delivery_cell = [cell for cell in map_info['grid'] if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['carried_by_id'] is None:
                            parcel_coordinates = parcel_info['coordinates']
                            while agent['coordinates'] != parcel_coordinates:
                                if agent['coordinates'][0] > parcel_coordinates[0] and agent[
                                    'coordinates'][0] > 0:
                                    function_1()
                                elif agent['coordinates'][0] < parcel_coordinates[0] and agent[
                                    'coordinates'][0] < width - 1:
                                    function_2()
                                if agent['coordinates'][1] > parcel_coordinates[1] and agent[
                                    'coordinates'][1] > 0:
                                    function_3()
                                elif agent['coordinates'][1] < parcel_coordinates[1] and agent[
                                    'coordinates'][1] < height - 1:
                                    function_4()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0] and agent['coordinates'][
                            0] > 0:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0] and agent['coordinates'
                            ][0] < width - 1:
                            function_2()
                        if agent['coordinates'][1] > delivery_cell[1] and agent['coordinates'][
                            1] > 0:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1] and agent['coordinates'
                            ][1] < height - 1:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to maximize the total score by efficiently picking up and delivering as many parcels as possible while navigating through the map.
Executable: False
Trigger function:
None



2024-10-29 15:58:30,320 - INFO - Testing intention 
def function():
    global belief_set
    spawn_coordinates = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
    delivery_coordinates = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    agent_coordinates = belief_set['agent'][1]['coordinates']
    while agent_coordinates != spawn_coordinates:
        if agent_coordinates[0] > spawn_coordinates[0]:
            function_1()
        elif agent_coordinates[0] < spawn_coordinates[0]:
            function_2()
        if agent_coordinates[1] > spawn_coordinates[1]:
            function_3()
        elif agent_coordinates[1] < spawn_coordinates[1]:
            function_4()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    function_5()
    while agent_coordinates != delivery_coordinates:
        if agent_coordinates[0] > delivery_coordinates[0]:
            function_1()
        elif agent_coordinates[0] < delivery_coordinates[0]:
            function_2()
        if agent_coordinates[1] > delivery_coordinates[1]:
            function_3()
        elif agent_coordinates[1] < delivery_coordinates[1]:
            function_4()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    function_6()
2024-10-29 15:58:30,320 - INFO - The intention is valid.
2024-10-29 15:58:30,327 - INFO - Intention added to desire 3
2024-10-29 15:58:30,328 - INFO - Running intention 11 ...
2024-10-29 15:58:30,497 - INFO - Belief set thread started ...
2024-10-29 15:58:30,510 - INFO - Plan thread started ...
2024-10-29 15:58:30,522 - INFO - Started subprocess...
2024-10-29 15:58:30,523 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}, 'parcels': {3: {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 6: {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 7: {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 8: {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:58:30,863 - INFO - Executing action action_1 ...
2024-10-29 15:58:31,069 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}]
2024-10-29 15:58:31,409 - INFO - Executing action action_3 ...
2024-10-29 15:58:31,635 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}]
2024-10-29 15:58:32,057 - INFO - Executing action action_3 ...
2024-10-29 15:58:32,318 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}]
2024-10-29 15:58:32,655 - INFO - Executing action action_3 ...
2024-10-29 15:58:32,887 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}]
2024-10-29 15:58:33,249 - INFO - Executing action action_5 ...
2024-10-29 15:58:33,493 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8, 9, 10], 'score': 40}}]
2024-10-29 15:58:33,893 - INFO - Executing action action_2 ...
2024-10-29 15:58:34,110 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}]
2024-10-29 15:58:34,493 - INFO - Executing action action_4 ...
2024-10-29 15:58:34,780 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8, 9, 10], 'score': 40}}]
2024-10-29 15:58:35,156 - INFO - Executing action action_4 ...
2024-10-29 15:58:35,440 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8, 9, 10], 'score': 40}}]
2024-10-29 15:58:35,809 - INFO - Executing action action_4 ...
2024-10-29 15:58:36,016 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-10-29 15:58:36,334 - INFO - Executing action action_6 ...
2024-10-29 15:58:36,585 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 200}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-10-29 15:58:36,933 - INFO - Belief set thread terminated.
2024-10-29 15:58:36,989 - INFO - Plan thread terminated.
2024-10-29 15:58:36,996 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 3], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8, 9, 10], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8, 9, 10], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8, 9, 10], 'score': 40}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 200}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-10-29 15:58:36,996 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 200}}, 'parcels': {}}
2024-10-29 15:58:45,723 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    map_grid = belief_set['map']['grid']
    walkable_cells = [cell for cell in map_grid if cell['cell_type'] == 'walkable' or cell['cell_type'] == 'parcels_spawn' or cell['cell_type'] == 'delivery_cell']
    if len(walkable_cells) == 0 or len(parcels) == 0:
        return False
    if agent['score'] < 0:
        return False
    if len(agent['parcels_carried_ids']) > 0:
        return True
    return any(cell['cell_type'] == 'parcels_spawn' for cell in walkable_cells)
2024-10-29 15:58:45,724 - INFO - The trigger function is valid.
2024-10-29 15:58:45,724 - INFO - Trigger function added to desire 3.
2024-10-29 15:58:47,732 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the delivery cell to deliver the parcel.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_position != parcel_position:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < parcel_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position != delivery_position:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < delivery_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < delivery_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set[
        'parcels']:
        return False
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    if belief_set['parcels']:
        return True
    return False



Desire 2: The long-term goal is to develop an optimal pathfinding strategy that allows the agent to collect and deliver as many parcels as possible while minimizing travel time and avoiding non-walkable cells.
    Intention ID: [8]
    Executable: False
    Description: The short-term goal is to navigate the agent to the nearest parcel, pick it up and return it to the delivery cell, while avoiding non-walkable cells.
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = [cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    parcel_ids = [parcel['id'] for parcel in parcels.values() if parcel[
                        'carried_by_id'] is None]
                    if parcel_ids:
                        parcel_location = parcels[parcel_ids[0]]['coordinates']
                        while agent['coordinates'] != parcel_location:
                            if agent['coordinates'][0] < parcel_location[0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel_location[0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel_location[1]:
                                function_4()
                            elif agent['coordinates'][1] > parcel_location[1]:
                                function_3()
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short-term goal is to navigate to the nearest parcel that isn't behind a non-walkable cell, pick it up, and deliver it to the delivery cell, while avoiding non-walkable cells.
                def function_9():
                    global belief_set
                    width = belief_set['map']['width']
                    height = belief_set['map']['height']
                    grid = belief_set['map']['grid']
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    non_walkable_cells = [cell for cell in grid if cell['cell_type'] ==
                        'non_walkable']
                    for i in range(width * height):
                        for parcel in parcels.values():
                            if parcel['carried_by_id'] is None and parcel['coordinates'
                                ] not in [cell['cell_coordinates'] for cell in
                                non_walkable_cells]:
                                while agent['coordinates'][0] > parcel['coordinates'][0]:
                                    function_1()
                                while agent['coordinates'][0] < parcel['coordinates'][0]:
                                    function_2()
                                while agent['coordinates'][1] > parcel['coordinates'][1]:
                                    function_3()
                                while agent['coordinates'][1] < parcel['coordinates'][1]:
                                    function_4()
                                function_5()
                                break
                        else:
                            continue
                        break
                    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in grid if
                        cell['cell_type'] == 'delivery_cell'][0]
                    for i in range(width * height):
                        while agent['coordinates'][0] > delivery_cell_coordinates[0]:
                            function_1()
                        while agent['coordinates'][0] < delivery_cell_coordinates[0]:
                            function_2()
                        while agent['coordinates'][1] > delivery_cell_coordinates[1]:
                            function_3()
                        while agent['coordinates'][1] < delivery_cell_coordinates[1]:
                            function_4()
                        function_6()
                        break
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short-term goal is to navigate to the nearest parcel, pick it up, and then navigate to the delivery cell to drop off the parcel, all while avoiding non-walkable cells.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_info = belief_set['map']
                    width = map_info['width']
                    height = map_info['height']
                    delivery_cell = [cell for cell in map_info['grid'] if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['carried_by_id'] is None:
                            parcel_coordinates = parcel_info['coordinates']
                            while agent['coordinates'] != parcel_coordinates:
                                if agent['coordinates'][0] > parcel_coordinates[0] and agent[
                                    'coordinates'][0] > 0:
                                    function_1()
                                elif agent['coordinates'][0] < parcel_coordinates[0] and agent[
                                    'coordinates'][0] < width - 1:
                                    function_2()
                                if agent['coordinates'][1] > parcel_coordinates[1] and agent[
                                    'coordinates'][1] > 0:
                                    function_3()
                                elif agent['coordinates'][1] < parcel_coordinates[1] and agent[
                                    'coordinates'][1] < height - 1:
                                    function_4()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0] and agent['coordinates'][
                            0] > 0:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0] and agent['coordinates'
                            ][0] < width - 1:
                            function_2()
                        if agent['coordinates'][1] > delivery_cell[1] and agent['coordinates'][
                            1] > 0:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1] and agent['coordinates'
                            ][1] < height - 1:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to maximize the total score by efficiently picking up and delivering as many parcels as possible while navigating through the map.
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location, pick up any parcels if present, and then move towards the delivery cell to deliver the picked parcels.
                def function_11():
                    global belief_set
                    spawn_coordinates = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
                    delivery_coordinates = [cell['cell_coordinates'] for cell in belief_set
                        ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates != spawn_coordinates:
                        if agent_coordinates[0] > spawn_coordinates[0]:
                            function_1()
                        elif agent_coordinates[0] < spawn_coordinates[0]:
                            function_2()
                        if agent_coordinates[1] > spawn_coordinates[1]:
                            function_3()
                        elif agent_coordinates[1] < spawn_coordinates[1]:
                            function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_coordinates != delivery_coordinates:
                        if agent_coordinates[0] > delivery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[0] < delivery_coordinates[0]:
                            function_2()
                        if agent_coordinates[1] > delivery_coordinates[1]:
                            function_3()
                        elif agent_coordinates[1] < delivery_coordinates[1]:
                            function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    map_grid = belief_set['map']['grid']
    walkable_cells = [cell for cell in map_grid if cell['cell_type'] ==
        'walkable' or cell['cell_type'] == 'parcels_spawn' or cell[
        'cell_type'] == 'delivery_cell']
    if len(walkable_cells) == 0 or len(parcels) == 0:
        return False
    if agent['score'] < 0:
        return False
    if len(agent['parcels_carried_ids']) > 0:
        return True
    return any(cell['cell_type'] == 'parcels_spawn' for cell in walkable_cells)




2024-10-29 15:58:47,732 - INFO - Running trigger function for desire 3 ...
2024-10-29 15:58:47,732 - INFO - Trigger function for desire 3 has been executed. Result: True
2024-10-29 15:58:47,732 - INFO - Desire 3 could be triggered. Adding it to the list...
2024-10-29 15:58:47,732 - INFO - Desires triggered: [3]. Now randomly choosing which one to run.
2024-10-29 15:58:47,744 - INFO - Desire 3 was randomly chosen. Desire 3 has been triggered.
2024-10-29 15:58:47,744 - INFO - Desire 3 is about to be executed ...
2024-10-29 15:58:47,744 - INFO - Executing all valid intentions for desire 3 ...
2024-10-29 15:58:47,744 - INFO - Executing intention 11 ...
2024-10-29 15:58:47,744 - INFO - Running intention 11 ...
2024-10-29 15:58:47,947 - INFO - Belief set thread started ...
2024-10-29 15:58:47,959 - INFO - Plan thread started ...
2024-10-29 15:58:47,978 - INFO - Started subprocess...
2024-10-29 15:58:47,978 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 200}}, 'parcels': {11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:58:48,273 - INFO - Executing action action_1 ...
2024-10-29 15:58:48,526 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 200}}]
2024-10-29 15:58:48,880 - INFO - Executing action action_3 ...
2024-10-29 15:58:49,139 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 200}}]
2024-10-29 15:58:49,419 - INFO - Executing action action_3 ...
2024-10-29 15:58:49,661 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 200}}]
2024-10-29 15:58:49,961 - INFO - Executing action action_3 ...
2024-10-29 15:58:50,191 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 200}}]
2024-10-29 15:58:50,574 - INFO - Executing action action_5 ...
2024-10-29 15:58:50,805 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [11], 'score': 200}}]
2024-10-29 15:58:51,109 - INFO - Executing action action_2 ...
2024-10-29 15:58:51,414 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [11], 'score': 200}}]
2024-10-29 15:58:51,763 - INFO - Executing action action_4 ...
2024-10-29 15:58:51,982 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [11], 'score': 200}}]
2024-10-29 15:58:52,392 - INFO - Executing action action_4 ...
2024-10-29 15:58:52,617 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [11], 'score': 200}}]
2024-10-29 15:58:52,962 - INFO - Executing action action_4 ...
2024-10-29 15:58:53,199 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [11], 'score': 200}}]
2024-10-29 15:58:53,473 - INFO - Executing action action_6 ...
2024-10-29 15:58:53,690 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 220}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-10-29 15:58:54,013 - INFO - Belief set thread terminated.
2024-10-29 15:58:54,038 - INFO - Plan thread terminated.
2024-10-29 15:58:54,057 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 220}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-10-29 15:58:54,057 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 220}}, 'parcels': {}}
2024-10-29 15:58:54,057 - INFO - Intention 11 has been executed with plan ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [11], 'score': 200}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 220}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]].
2024-10-29 15:58:55,821 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the delivery cell to deliver the parcel.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_position != parcel_position:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < parcel_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position != delivery_position:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < delivery_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < delivery_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set[
        'parcels']:
        return False
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    if belief_set['parcels']:
        return True
    return False



Desire 2: The long-term goal is to develop an optimal pathfinding strategy that allows the agent to collect and deliver as many parcels as possible while minimizing travel time and avoiding non-walkable cells.
    Intention ID: [8]
    Executable: False
    Description: The short-term goal is to navigate the agent to the nearest parcel, pick it up and return it to the delivery cell, while avoiding non-walkable cells.
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = [cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    parcel_ids = [parcel['id'] for parcel in parcels.values() if parcel[
                        'carried_by_id'] is None]
                    if parcel_ids:
                        parcel_location = parcels[parcel_ids[0]]['coordinates']
                        while agent['coordinates'] != parcel_location:
                            if agent['coordinates'][0] < parcel_location[0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel_location[0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel_location[1]:
                                function_4()
                            elif agent['coordinates'][1] > parcel_location[1]:
                                function_3()
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short-term goal is to navigate to the nearest parcel that isn't behind a non-walkable cell, pick it up, and deliver it to the delivery cell, while avoiding non-walkable cells.
                def function_9():
                    global belief_set
                    width = belief_set['map']['width']
                    height = belief_set['map']['height']
                    grid = belief_set['map']['grid']
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    non_walkable_cells = [cell for cell in grid if cell['cell_type'] ==
                        'non_walkable']
                    for i in range(width * height):
                        for parcel in parcels.values():
                            if parcel['carried_by_id'] is None and parcel['coordinates'
                                ] not in [cell['cell_coordinates'] for cell in
                                non_walkable_cells]:
                                while agent['coordinates'][0] > parcel['coordinates'][0]:
                                    function_1()
                                while agent['coordinates'][0] < parcel['coordinates'][0]:
                                    function_2()
                                while agent['coordinates'][1] > parcel['coordinates'][1]:
                                    function_3()
                                while agent['coordinates'][1] < parcel['coordinates'][1]:
                                    function_4()
                                function_5()
                                break
                        else:
                            continue
                        break
                    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in grid if
                        cell['cell_type'] == 'delivery_cell'][0]
                    for i in range(width * height):
                        while agent['coordinates'][0] > delivery_cell_coordinates[0]:
                            function_1()
                        while agent['coordinates'][0] < delivery_cell_coordinates[0]:
                            function_2()
                        while agent['coordinates'][1] > delivery_cell_coordinates[1]:
                            function_3()
                        while agent['coordinates'][1] < delivery_cell_coordinates[1]:
                            function_4()
                        function_6()
                        break
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short-term goal is to navigate to the nearest parcel, pick it up, and then navigate to the delivery cell to drop off the parcel, all while avoiding non-walkable cells.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_info = belief_set['map']
                    width = map_info['width']
                    height = map_info['height']
                    delivery_cell = [cell for cell in map_info['grid'] if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['carried_by_id'] is None:
                            parcel_coordinates = parcel_info['coordinates']
                            while agent['coordinates'] != parcel_coordinates:
                                if agent['coordinates'][0] > parcel_coordinates[0] and agent[
                                    'coordinates'][0] > 0:
                                    function_1()
                                elif agent['coordinates'][0] < parcel_coordinates[0] and agent[
                                    'coordinates'][0] < width - 1:
                                    function_2()
                                if agent['coordinates'][1] > parcel_coordinates[1] and agent[
                                    'coordinates'][1] > 0:
                                    function_3()
                                elif agent['coordinates'][1] < parcel_coordinates[1] and agent[
                                    'coordinates'][1] < height - 1:
                                    function_4()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0] and agent['coordinates'][
                            0] > 0:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0] and agent['coordinates'
                            ][0] < width - 1:
                            function_2()
                        if agent['coordinates'][1] > delivery_cell[1] and agent['coordinates'][
                            1] > 0:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1] and agent['coordinates'
                            ][1] < height - 1:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to maximize the total score by efficiently picking up and delivering as many parcels as possible while navigating through the map.
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location, pick up any parcels if present, and then move towards the delivery cell to deliver the picked parcels.
                def function_11():
                    global belief_set
                    spawn_coordinates = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
                    delivery_coordinates = [cell['cell_coordinates'] for cell in belief_set
                        ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates != spawn_coordinates:
                        if agent_coordinates[0] > spawn_coordinates[0]:
                            function_1()
                        elif agent_coordinates[0] < spawn_coordinates[0]:
                            function_2()
                        if agent_coordinates[1] > spawn_coordinates[1]:
                            function_3()
                        elif agent_coordinates[1] < spawn_coordinates[1]:
                            function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_coordinates != delivery_coordinates:
                        if agent_coordinates[0] > delivery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[0] < delivery_coordinates[0]:
                            function_2()
                        if agent_coordinates[1] > delivery_coordinates[1]:
                            function_3()
                        elif agent_coordinates[1] < delivery_coordinates[1]:
                            function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    map_grid = belief_set['map']['grid']
    walkable_cells = [cell for cell in map_grid if cell['cell_type'] ==
        'walkable' or cell['cell_type'] == 'parcels_spawn' or cell[
        'cell_type'] == 'delivery_cell']
    if len(walkable_cells) == 0 or len(parcels) == 0:
        return False
    if agent['score'] < 0:
        return False
    if len(agent['parcels_carried_ids']) > 0:
        return True
    return any(cell['cell_type'] == 'parcels_spawn' for cell in walkable_cells)




2024-10-29 15:58:55,821 - INFO - Running trigger function for desire 3 ...
2024-10-29 15:58:55,821 - INFO - Trigger function for desire 3 has been executed. Result: False
2024-10-29 15:58:55,821 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-10-29 15:58:55,821 - INFO - No desire has been triggered.
2024-10-29 15:58:55,827 - INFO - No desire triggered.
2024-10-29 15:58:57,428 - INFO - Desire added: 4. Desires:
Desire 1: The agent's long term goal is to efficiently plan a path that allows it to collect as many parcels as possible and deliver them successfully, while avoiding non-walkable cells and maximizing its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the delivery cell to deliver the parcel.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_position != parcel_position:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < parcel_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < parcel_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position != delivery_position:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif agent_position[0] < delivery_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif agent_position[1] < delivery_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if not belief_set['agent'][1]['parcels_carried_ids'] and not belief_set[
        'parcels']:
        return False
    if belief_set['agent'][1]['parcels_carried_ids']:
        return True
    if belief_set['parcels']:
        return True
    return False



Desire 2: The long-term goal is to develop an optimal pathfinding strategy that allows the agent to collect and deliver as many parcels as possible while minimizing travel time and avoiding non-walkable cells.
    Intention ID: [8]
    Executable: False
    Description: The short-term goal is to navigate the agent to the nearest parcel, pick it up and return it to the delivery cell, while avoiding non-walkable cells.
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = [cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    parcel_ids = [parcel['id'] for parcel in parcels.values() if parcel[
                        'carried_by_id'] is None]
                    if parcel_ids:
                        parcel_location = parcels[parcel_ids[0]]['coordinates']
                        while agent['coordinates'] != parcel_location:
                            if agent['coordinates'][0] < parcel_location[0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel_location[0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel_location[1]:
                                function_4()
                            elif agent['coordinates'][1] > parcel_location[1]:
                                function_3()
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short-term goal is to navigate to the nearest parcel that isn't behind a non-walkable cell, pick it up, and deliver it to the delivery cell, while avoiding non-walkable cells.
                def function_9():
                    global belief_set
                    width = belief_set['map']['width']
                    height = belief_set['map']['height']
                    grid = belief_set['map']['grid']
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    non_walkable_cells = [cell for cell in grid if cell['cell_type'] ==
                        'non_walkable']
                    for i in range(width * height):
                        for parcel in parcels.values():
                            if parcel['carried_by_id'] is None and parcel['coordinates'
                                ] not in [cell['cell_coordinates'] for cell in
                                non_walkable_cells]:
                                while agent['coordinates'][0] > parcel['coordinates'][0]:
                                    function_1()
                                while agent['coordinates'][0] < parcel['coordinates'][0]:
                                    function_2()
                                while agent['coordinates'][1] > parcel['coordinates'][1]:
                                    function_3()
                                while agent['coordinates'][1] < parcel['coordinates'][1]:
                                    function_4()
                                function_5()
                                break
                        else:
                            continue
                        break
                    delivery_cell_coordinates = [cell['cell_coordinates'] for cell in grid if
                        cell['cell_type'] == 'delivery_cell'][0]
                    for i in range(width * height):
                        while agent['coordinates'][0] > delivery_cell_coordinates[0]:
                            function_1()
                        while agent['coordinates'][0] < delivery_cell_coordinates[0]:
                            function_2()
                        while agent['coordinates'][1] > delivery_cell_coordinates[1]:
                            function_3()
                        while agent['coordinates'][1] < delivery_cell_coordinates[1]:
                            function_4()
                        function_6()
                        break
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short-term goal is to navigate to the nearest parcel, pick it up, and then navigate to the delivery cell to drop off the parcel, all while avoiding non-walkable cells.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_info = belief_set['map']
                    width = map_info['width']
                    height = map_info['height']
                    delivery_cell = [cell for cell in map_info['grid'] if cell['cell_type'] ==
                        'delivery_cell'][0]['cell_coordinates']
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['carried_by_id'] is None:
                            parcel_coordinates = parcel_info['coordinates']
                            while agent['coordinates'] != parcel_coordinates:
                                if agent['coordinates'][0] > parcel_coordinates[0] and agent[
                                    'coordinates'][0] > 0:
                                    function_1()
                                elif agent['coordinates'][0] < parcel_coordinates[0] and agent[
                                    'coordinates'][0] < width - 1:
                                    function_2()
                                if agent['coordinates'][1] > parcel_coordinates[1] and agent[
                                    'coordinates'][1] > 0:
                                    function_3()
                                elif agent['coordinates'][1] < parcel_coordinates[1] and agent[
                                    'coordinates'][1] < height - 1:
                                    function_4()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0] and agent['coordinates'][
                            0] > 0:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0] and agent['coordinates'
                            ][0] < width - 1:
                            function_2()
                        if agent['coordinates'][1] > delivery_cell[1] and agent['coordinates'][
                            1] > 0:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1] and agent['coordinates'
                            ][1] < height - 1:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to maximize the total score by efficiently picking up and delivering as many parcels as possible while navigating through the map.
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location, pick up any parcels if present, and then move towards the delivery cell to deliver the picked parcels.
                def function_11():
                    global belief_set
                    spawn_coordinates = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
                    delivery_coordinates = [cell['cell_coordinates'] for cell in belief_set
                        ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates != spawn_coordinates:
                        if agent_coordinates[0] > spawn_coordinates[0]:
                            function_1()
                        elif agent_coordinates[0] < spawn_coordinates[0]:
                            function_2()
                        if agent_coordinates[1] > spawn_coordinates[1]:
                            function_3()
                        elif agent_coordinates[1] < spawn_coordinates[1]:
                            function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_coordinates != delivery_coordinates:
                        if agent_coordinates[0] > delivery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[0] < delivery_coordinates[0]:
                            function_2()
                        if agent_coordinates[1] > delivery_coordinates[1]:
                            function_3()
                        elif agent_coordinates[1] < delivery_coordinates[1]:
                            function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    map_grid = belief_set['map']['grid']
    walkable_cells = [cell for cell in map_grid if cell['cell_type'] ==
        'walkable' or cell['cell_type'] == 'parcels_spawn' or cell[
        'cell_type'] == 'delivery_cell']
    if len(walkable_cells) == 0 or len(parcels) == 0:
        return False
    if agent['score'] < 0:
        return False
    if len(agent['parcels_carried_ids']) > 0:
        return True
    return any(cell['cell_type'] == 'parcels_spawn' for cell in walkable_cells)



Desire 4: The agent's long term goal is to optimize its pathfinding in the environment, minimizing the distance travelled while avoiding non-walkable areas, to conserve resources and enhance efficiency.
Executable: False
Trigger function:
None



2024-10-29 15:59:05,527 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    map_grid = belief_set['map']['grid']
    agent_x, agent_y = agent['coordinates']
    walkable_cells = [cell for cell in map_grid if cell['cell_type'] == 'walkable']
    nearest_walkable_cell = min(walkable_cells, key=lambda cell: abs(cell['cell_coordinates'][0] - agent_x) + abs(cell['cell_coordinates'][1] - agent_y))
    if nearest_walkable_cell['cell_coordinates'][0] < agent_x:
        function_1()
    elif nearest_walkable_cell['cell_coordinates'][0] > agent_x:
        function_2()
    elif nearest_walkable_cell['cell_coordinates'][1] < agent_y:
        function_3()
    elif nearest_walkable_cell['cell_coordinates'][1] > agent_y:
        function_4()
2024-10-29 15:59:05,528 - INFO - The intention is valid.
2024-10-29 15:59:05,528 - INFO - Intention added to desire 4
2024-10-29 15:59:05,528 - INFO - Running intention 12 ...
2024-10-29 15:59:05,677 - INFO - Belief set thread started ...
2024-10-29 15:59:05,690 - INFO - Plan thread started ...
2024-10-29 15:59:05,696 - INFO - Started subprocess...
2024-10-29 15:59:05,696 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 220}}, 'parcels': {}}
2024-10-29 15:59:06,062 - INFO - Executing action action_1 ...
2024-10-29 15:59:06,286 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 220}}]
2024-10-29 15:59:06,606 - INFO - Plan thread terminated.
2024-10-29 15:59:06,631 - INFO - Belief set thread terminated.
2024-10-29 15:59:06,656 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 220}}]]
2024-10-29 15:59:06,656 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 220}}, 'parcels': {}}
2024-10-29 15:59:20,177 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if belief_set['parcels']:
        parcel = list(belief_set['parcels'].values())[0]
        while agent['coordinates'] != parcel['coordinates']:
            if agent['coordinates'][0] < parcel['coordinates'][0]:
                function_2()
            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                function_1()
            if agent['coordinates'][1] < parcel['coordinates'][1]:
                function_4()
            elif agent['coordinates'][1] > parcel['coordinates'][1]:
                function_3()
        function_5()
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    while agent['coordinates'] != delivery_cell['cell_coordinates']:
        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
            function_1()
        if agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
            function_4()
        elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
            function_3()
    function_6()
2024-10-29 15:59:20,178 - INFO - The intention is valid.
2024-10-29 15:59:20,185 - INFO - Intention added to desire 4
2024-10-29 15:59:20,204 - INFO - Running intention 13 ...
2024-10-29 15:59:20,322 - INFO - Belief set thread started ...
2024-10-29 15:59:20,335 - INFO - Plan thread started ...
2024-10-29 15:59:20,366 - INFO - Started subprocess...
2024-10-29 15:59:20,366 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 220}}, 'parcels': {12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:59:20,629 - INFO - Executing action action_3 ...
2024-10-29 15:59:20,836 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 220}}]
2024-10-29 15:59:21,115 - INFO - Executing action action_3 ...
2024-10-29 15:59:21,319 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 220}}]
2024-10-29 15:59:21,634 - INFO - Executing action action_3 ...
2024-10-29 15:59:21,853 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 220}}]
2024-10-29 15:59:22,190 - INFO - Executing action action_3 ...
2024-10-29 15:59:22,395 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:22,698 - INFO - Executing action action_3 ...
2024-10-29 15:59:22,972 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:23,398 - INFO - Executing action action_3 ...
2024-10-29 15:59:23,647 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:23,996 - INFO - Executing action action_3 ...
2024-10-29 15:59:24,244 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:24,572 - INFO - Executing action action_3 ...
2024-10-29 15:59:24,809 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:25,102 - INFO - Executing action action_3 ...
2024-10-29 15:59:25,350 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:25,624 - INFO - Executing action action_3 ...
2024-10-29 15:59:25,874 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:26,193 - INFO - Executing action action_3 ...
2024-10-29 15:59:26,459 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:26,853 - INFO - Executing action action_3 ...
2024-10-29 15:59:27,090 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:27,370 - INFO - Executing action action_3 ...
2024-10-29 15:59:27,588 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:27,931 - INFO - Executing action action_3 ...
2024-10-29 15:59:28,205 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:28,572 - INFO - Executing action action_3 ...
2024-10-29 15:59:28,815 - INFO - Action action_3 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-10-29 15:59:29,121 - INFO - Executing action action_3 ...
2024-10-29 15:59:29,376 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:29,693 - INFO - Executing action action_3 ...
2024-10-29 15:59:29,929 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:30,228 - INFO - Executing action action_3 ...
2024-10-29 15:59:30,492 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:30,867 - INFO - Executing action action_3 ...
2024-10-29 15:59:31,082 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:31,397 - INFO - Executing action action_3 ...
2024-10-29 15:59:31,627 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:31,939 - INFO - Executing action action_3 ...
2024-10-29 15:59:32,169 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:32,532 - INFO - Executing action action_3 ...
2024-10-29 15:59:32,767 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:33,031 - INFO - Executing action action_3 ...
2024-10-29 15:59:33,243 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:33,623 - INFO - Executing action action_3 ...
2024-10-29 15:59:33,859 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:34,176 - INFO - Executing action action_3 ...
2024-10-29 15:59:34,404 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:34,752 - INFO - Executing action action_3 ...
2024-10-29 15:59:34,965 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:35,277 - INFO - Executing action action_3 ...
2024-10-29 15:59:35,390 - ERROR - Error during intention 13 execution. Intention 13 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-10-29 15:59:35,496 - INFO - Action action_3 executed. Events received: []
2024-10-29 15:59:35,496 - INFO - Belief set thread terminated.
2024-10-29 15:59:35,765 - INFO - Plan thread terminated.
2024-10-29 15:59:35,813 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 220}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 220}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 220}}], [], [], [], [], [], [], [], [], [], [], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [], [], [], [], [], [], [], [], [], [], [], []]
2024-10-29 15:59:35,832 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 220}}, 'parcels': {12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 13: {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:59:43,533 - INFO - Invalidating intention 13 ...
2024-10-29 15:59:52,032 - INFO - Testing intention 
def function():
    global belief_set
    max_iterations = 1000
    iteration = 0
    while True:
        if iteration > max_iterations:
            break
        agent_coordinates = belief_set['agent'][1]['coordinates']
        parcel_coordinates = belief_set['parcels'][12]['coordinates']
        delivery_coordinates = [1, 3]
        if agent_coordinates == parcel_coordinates:
            function_5()
        elif agent_coordinates == delivery_coordinates:
            function_6()
            break
        else:
            function_11()
        iteration += 1
2024-10-29 15:59:52,032 - INFO - The intention is valid.
2024-10-29 15:59:52,039 - INFO - Intention added to desire 4
2024-10-29 15:59:52,058 - INFO - Running intention 14 ...
2024-10-29 15:59:52,184 - INFO - Belief set thread started ...
2024-10-29 15:59:52,209 - INFO - Plan thread started ...
2024-10-29 15:59:52,216 - INFO - Started subprocess...
2024-10-29 15:59:52,228 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 220}}, 'parcels': {12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 13: {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 15:59:52,484 - INFO - Executing action action_5 ...
2024-10-29 15:59:52,707 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}]
2024-10-29 15:59:52,992 - INFO - Executing action action_5 ...
2024-10-29 15:59:53,247 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:53,617 - INFO - Executing action action_5 ...
2024-10-29 15:59:53,841 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:54,161 - INFO - Executing action action_5 ...
2024-10-29 15:59:54,366 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:54,740 - INFO - Executing action action_5 ...
2024-10-29 15:59:54,982 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:55,287 - INFO - Executing action action_5 ...
2024-10-29 15:59:55,525 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:55,813 - INFO - Executing action action_5 ...
2024-10-29 15:59:56,025 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:56,376 - INFO - Executing action action_5 ...
2024-10-29 15:59:56,595 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:56,978 - INFO - Executing action action_5 ...
2024-10-29 15:59:57,216 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:57,635 - INFO - Executing action action_5 ...
2024-10-29 15:59:57,853 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:58,169 - INFO - Executing action action_5 ...
2024-10-29 15:59:58,402 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:58,756 - INFO - Executing action action_5 ...
2024-10-29 15:59:59,010 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:59,328 - INFO - Executing action action_5 ...
2024-10-29 15:59:59,545 - INFO - Action action_5 executed. Events received: []
2024-10-29 15:59:59,888 - INFO - Executing action action_5 ...
2024-10-29 16:00:00,119 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:00,448 - INFO - Executing action action_5 ...
2024-10-29 16:00:00,692 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:01,013 - INFO - Executing action action_5 ...
2024-10-29 16:00:01,244 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:01,594 - INFO - Executing action action_5 ...
2024-10-29 16:00:01,812 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:02,105 - INFO - Executing action action_5 ...
2024-10-29 16:00:02,341 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:02,687 - INFO - Executing action action_5 ...
2024-10-29 16:00:02,918 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:03,242 - INFO - Executing action action_5 ...
2024-10-29 16:00:03,460 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:03,795 - INFO - Executing action action_5 ...
2024-10-29 16:00:04,024 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:04,323 - INFO - Executing action action_5 ...
2024-10-29 16:00:04,554 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:04,877 - INFO - Executing action action_5 ...
2024-10-29 16:00:05,082 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:05,442 - INFO - Executing action action_5 ...
2024-10-29 16:00:05,666 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:06,016 - INFO - Executing action action_5 ...
2024-10-29 16:00:06,265 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:06,607 - INFO - Executing action action_5 ...
2024-10-29 16:00:06,831 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:07,160 - INFO - Executing action action_5 ...
2024-10-29 16:00:07,241 - ERROR - Error during intention 14 execution. Intention 14 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-10-29 16:00:07,290 - INFO - Belief set thread terminated.
2024-10-29 16:00:07,410 - INFO - Action action_5 executed. Events received: []
2024-10-29 16:00:07,709 - INFO - Plan thread terminated.
2024-10-29 16:00:07,740 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-10-29 16:00:07,753 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}, 'parcels': {12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 13: {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}}
2024-10-29 16:00:15,533 - INFO - Invalidating intention 14 ...
2024-10-29 16:00:27,704 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent'][1]['coordinates']
    delivery_coordinates = [1, 3]
    iteration_counter = 0
    while agent_coordinates != delivery_coordinates and iteration_counter < 100:
        if agent_coordinates[0] < delivery_coordinates[0]:
            function_2()
        elif agent_coordinates[0] > delivery_coordinates[0]:
            function_1()
        if agent_coordinates[1] < delivery_coordinates[1]:
            function_4()
        elif agent_coordinates[1] > delivery_coordinates[1]:
            function_3()
        iteration_counter += 1
        if iteration_counter == 99:
            break
    function_5()
    while agent_coordinates != delivery_coordinates and iteration_counter < 200:
        if agent_coordinates[0] < delivery_coordinates[0]:
            function_2()
        elif agent_coordinates[0] > delivery_coordinates[0]:
            function_1()
        if agent_coordinates[1] < delivery_coordinates[1]:
            function_4()
        elif agent_coordinates[1] > delivery_coordinates[1]:
            function_3()
        iteration_counter += 1
        if iteration_counter == 199:
            break
    function_6()
2024-10-29 16:00:27,711 - INFO - The intention is valid.
2024-10-29 16:00:27,724 - INFO - Intention added to desire 4
2024-10-29 16:00:27,725 - INFO - Running intention 15 ...
2024-10-29 16:00:27,954 - INFO - Belief set thread started ...
2024-10-29 16:00:27,973 - INFO - Plan thread started ...
2024-10-29 16:00:27,990 - INFO - Started subprocess...
2024-10-29 16:00:28,153 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}, 'parcels': {12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 13: {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 16:00:28,418 - INFO - Executing action action_2 ...
2024-10-29 16:00:28,654 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}]
2024-10-29 16:00:29,039 - INFO - Executing action action_4 ...
2024-10-29 16:00:29,246 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}]
2024-10-29 16:00:29,553 - INFO - Executing action action_2 ...
2024-10-29 16:00:29,821 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:30,120 - INFO - Executing action action_4 ...
2024-10-29 16:00:30,355 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}]
2024-10-29 16:00:30,759 - INFO - Executing action action_2 ...
2024-10-29 16:00:31,022 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:31,328 - INFO - Executing action action_4 ...
2024-10-29 16:00:31,596 - INFO - Action action_4 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}]
2024-10-29 16:00:31,919 - INFO - Executing action action_2 ...
2024-10-29 16:00:32,156 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:32,505 - INFO - Executing action action_4 ...
2024-10-29 16:00:32,728 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:33,062 - INFO - Executing action action_2 ...
2024-10-29 16:00:33,311 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:33,671 - INFO - Executing action action_4 ...
2024-10-29 16:00:33,902 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:34,225 - INFO - Executing action action_2 ...
2024-10-29 16:00:34,437 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:34,786 - INFO - Executing action action_4 ...
2024-10-29 16:00:35,011 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:35,291 - INFO - Executing action action_2 ...
2024-10-29 16:00:35,523 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:35,861 - INFO - Executing action action_4 ...
2024-10-29 16:00:36,087 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:36,436 - INFO - Executing action action_2 ...
2024-10-29 16:00:36,656 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:36,980 - INFO - Executing action action_4 ...
2024-10-29 16:00:37,210 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:37,523 - INFO - Executing action action_2 ...
2024-10-29 16:00:37,748 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:38,046 - INFO - Executing action action_4 ...
2024-10-29 16:00:38,258 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:38,595 - INFO - Executing action action_2 ...
2024-10-29 16:00:38,809 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:39,188 - INFO - Executing action action_4 ...
2024-10-29 16:00:39,411 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:39,738 - INFO - Executing action action_2 ...
2024-10-29 16:00:39,961 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:40,284 - INFO - Executing action action_4 ...
2024-10-29 16:00:40,495 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:40,813 - INFO - Executing action action_2 ...
2024-10-29 16:00:41,040 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:41,397 - INFO - Executing action action_4 ...
2024-10-29 16:00:41,652 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:41,955 - INFO - Executing action action_2 ...
2024-10-29 16:00:42,211 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:42,553 - INFO - Executing action action_4 ...
2024-10-29 16:00:42,795 - INFO - Action action_4 executed. Events received: []
2024-10-29 16:00:43,139 - INFO - Executing action action_2 ...
2024-10-29 16:00:43,171 - ERROR - Error during intention 15 execution. Intention 15 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-10-29 16:00:43,209 - INFO - Belief set thread terminated.
2024-10-29 16:00:43,347 - INFO - Action action_2 executed. Events received: []
2024-10-29 16:00:43,660 - INFO - Plan thread terminated.
2024-10-29 16:00:43,704 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2', 'action_4', 'action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}], [], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-10-29 16:00:43,717 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [12, 13, 14], 'score': 220}}, 'parcels': {12: {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 13: {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 14: {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}, 15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-10-29 16:00:50,090 - INFO - Invalidating intention 15 ...
2024-10-29 16:00:50,090 - INFO - Invalidating intention 1 ...
2024-10-29 16:00:50,090 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-10-29 16:00:50,090 - INFO - Invalidating intention 2 ...
2024-10-29 16:00:50,090 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-10-29 16:00:50,090 - INFO - Invalidating intention 3 ...
2024-10-29 16:00:50,090 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-10-29 16:00:50,090 - INFO - Invalidating intention 4 ...
2024-10-29 16:00:50,090 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-10-29 16:00:50,090 - INFO - Invalidating intention 5 ...
2024-10-29 16:00:50,090 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-10-29 16:00:50,090 - INFO - Invalidating intention 6 ...
2024-10-29 16:00:50,090 - INFO - Intention 6 is a base action. It cannot be invalidated.
