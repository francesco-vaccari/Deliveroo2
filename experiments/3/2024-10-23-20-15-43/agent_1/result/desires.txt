
Desire 1: The agent's long term goal is to collect all keys and parcels present in the environment, open all the doors, and deliver the parcels to the designated cells to maximize the score.
    Intention ID: [7]
    Executable: False
    Description: The agent's short term goal is to move towards and pick up the nearest parcel or key, given its current location.
                def function_7():
                    global belief_set
                    agent_x, agent_y = belief_set['agent']['coordinates']
                    shortest_distance = float('inf')
                    target_object = None
                    for parcel in belief_set['parcels'].values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            distance = abs(agent_x - parcel_x) + abs(agent_y - parcel_y)
                            if distance < shortest_distance:
                                shortest_distance = distance
                                target_object = parcel
                    for key in belief_set['keys'].values():
                        if key['carried_by_id'] is None:
                            key_x, key_y = key['coordinates']
                            distance = abs(agent_x - key_x) + abs(agent_y - key_y)
                            if distance < shortest_distance:
                                shortest_distance = distance
                                target_object = key
                    if target_object is not None:
                        target_x, target_y = target_object['coordinates']
                        if agent_x > target_x:
                            function_1()
                        elif agent_x < target_x:
                            function_2()
                        elif agent_y > target_y:
                            function_3()
                        elif agent_y < target_y:
                            function_4()
                        else:
                            function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to move the agent to the cell that contains the nearest parcel and pick it up.
                def function_8():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcels']
                    parcel_coordinates = min(parcels.values(), key=lambda x: abs(x[
                        'coordinates'][0] - agent['coordinates'][0]) + abs(x['coordinates']
                        [1] - agent['coordinates'][1]))['coordinates']
                    while agent['coordinates'] != parcel_coordinates:
                        if agent['coordinates'][0] < parcel_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coordinates[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coordinates[1]:
                            function_3()
                    function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The agent's short term goal is to move to the cell containing the nearest parcel and pick it up, provided there are no obstacles in the path and the parcel is reachable.
                def function_9():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    nearest_parcel_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates != nearest_parcel_coordinates:
                        if agent_coordinates[0] < nearest_parcel_coordinates[0]:
                            function_2()
                            if belief_set['agent']['coordinates'] == agent_coordinates:
                                break
                        elif agent_coordinates[0] > nearest_parcel_coordinates[0]:
                            function_1()
                            if belief_set['agent']['coordinates'] == agent_coordinates:
                                break
                        elif agent_coordinates[1] < nearest_parcel_coordinates[1]:
                            function_4()
                            if belief_set['agent']['coordinates'] == agent_coordinates:
                                break
                        elif agent_coordinates[1] > nearest_parcel_coordinates[1]:
                            function_3()
                            if belief_set['agent']['coordinates'] == agent_coordinates:
                                break
                        agent_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
    Intention ID: [10]
    Executable: True
    Description: The agent's short term goal is to move towards the nearest key and pick it up, provided there are no obstacles in the path and the key is reachable.
                def function_10():
                    global belief_set
                    key_positions = [key['coordinates'] for key in belief_set['keys'].
                        values() if key['carried_by_id'] is None]
                    agent_position = belief_set['agent']['coordinates']
                    nearest_key_position = min(key_positions, key=lambda pos: abs(pos[0] -
                        agent_position[0]) + abs(pos[1] - agent_position[1]))
                    while agent_position != nearest_key_position:
                        if agent_position[0] < nearest_key_position[0]:
                            function_2()
                        elif agent_position[0] > nearest_key_position[0]:
                            function_1()
                        elif agent_position[1] < nearest_key_position[1]:
                            function_4()
                        elif agent_position[1] > nearest_key_position[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                    function_5()
                
    Intention ID: [11]
    Executable: False
    Description: The agent's short term goal is to deliver the parcel it is carrying to the nearest delivery cell.
                def function_11():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if 'delivery' in cell['cell_type']]
                    nearest_delivery_cell = min(delivery_cells, key=lambda x: abs(x[0] -
                        agent_position[0]) + abs(x[1] - agent_position[1]))
                    while agent_position != nearest_delivery_cell:
                        if nearest_delivery_cell[0] < agent_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        elif nearest_delivery_cell[0] > agent_position[0]:
                            function_2()
                            agent_position[0] += 1
                        elif nearest_delivery_cell[1] < agent_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        elif nearest_delivery_cell[1] > agent_position[1]:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to move to the nearest key and pick it up.
                def function_12():
                    global belief_set
                    if 'keys' in belief_set and belief_set['keys']:
                        function_10()
                    else:
                        function_9()
                
    Intention ID: [13]
    Executable: False
    Description: The short term goal is to navigate the environment. If the agent has a key, it will proceed to the nearest door. If not, it will go to the nearest key. If there are parcels on the ground, the agent will pick them up. If the agent is carrying a parcel, it will go to the nearest delivery cell.
                def function_13():
                    global belief_set
                    if belief_set['agent']['has_key']:
                        for door in belief_set['doors'].values():
                            if belief_set['agent']['coordinates'] == door['coordinates']:
                                function_5()
                    else:
                        function_10()
                    for parcel in belief_set['parcels'].values():
                        if belief_set['agent']['coordinates'] == parcel['coordinates']:
                            function_5()
                    if belief_set['agent']['parcels_carried_ids']:
                        function_11()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up if possible, and then proceed to the nearest delivery cell to drop off the parcel.
                def function_14():
                    global belief_set
                    if belief_set['agent']['parcels_carried_ids']:
                        function_11()
                    else:
                        function_9()
                    if belief_set['agent']['parcels_carried_ids']:
                        function_11()
                    else:
                        function_9()
                
    Intention ID: [15]
    Executable: False
    Description: The short term goal is to move towards a parcel, pick up the parcel if it is not carrying any, and then proceed to the nearest delivery cell to deliver the parcel.
                def function_15():
                    global belief_set
                    if belief_set['agent']['parcels_carried_ids'] == []:
                        function_9()
                    else:
                        function_11()
                    return
                
Executable: False
Trigger function:
None


