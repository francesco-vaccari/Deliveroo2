2024-11-08 10:51:43,034 - INFO - Loading actions from agent_dir/actions.json ...
2024-11-08 10:51:43,072 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-11-08 10:52:24,222 - INFO - Desire added: 1. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
Executable: False
Trigger function:
None



2024-11-08 10:52:31,683 - INFO - Testing intention 
def function():
    global belief_set
    agent_coords = belief_set['agent'][1]['coordinates']
    parcel_coords = belief_set['parcels'][1]['coordinates']
    while agent_coords[0] < parcel_coords[0]:
        function_2()
        agent_coords[0] += 1
    while agent_coords[1] < parcel_coords[1]:
        function_4()
        agent_coords[1] += 1
    function_5()
    while agent_coords[0] > 0:
        function_1()
        agent_coords[0] -= 1
    while agent_coords[1] > 0:
        function_3()
        agent_coords[1] -= 1
    function_6()
2024-11-08 10:52:31,683 - INFO - The intention is valid.
2024-11-08 10:52:31,703 - INFO - Intention added to desire 1
2024-11-08 10:52:31,727 - INFO - Running intention 7 ...
2024-11-08 10:52:31,891 - INFO - Belief set thread started ...
2024-11-08 10:52:31,904 - INFO - Plan thread started ...
2024-11-08 10:52:31,910 - INFO - Started subprocess...
2024-11-08 10:52:31,911 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'parcels': {1: {'id': 1, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}}
2024-11-08 10:52:32,194 - INFO - Executing action action_2 ...
2024-11-08 10:52:32,437 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}]
2024-11-08 10:52:32,711 - INFO - Executing action action_2 ...
2024-11-08 10:52:32,968 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-08 10:52:33,307 - INFO - Executing action action_4 ...
2024-11-08 10:52:33,518 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 97}}]
2024-11-08 10:52:33,798 - INFO - Executing action action_4 ...
2024-11-08 10:52:34,023 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}]
2024-11-08 10:52:34,354 - INFO - Executing action action_4 ...
2024-11-08 10:52:34,572 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 95}}]
2024-11-08 10:52:34,929 - INFO - Executing action action_5 ...
2024-11-08 10:52:35,153 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 94}}]
2024-11-08 10:52:35,440 - INFO - Executing action action_1 ...
2024-11-08 10:52:35,657 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 93}}]
2024-11-08 10:52:35,948 - INFO - Executing action action_1 ...
2024-11-08 10:52:36,230 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 92}}]
2024-11-08 10:52:36,573 - INFO - Executing action action_3 ...
2024-11-08 10:52:36,855 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 91}}]
2024-11-08 10:52:37,173 - INFO - Executing action action_3 ...
2024-11-08 10:52:37,410 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 90}}]
2024-11-08 10:52:37,720 - INFO - Executing action action_3 ...
2024-11-08 10:52:37,945 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 89}}]
2024-11-08 10:52:38,281 - INFO - Executing action action_6 ...
2024-11-08 10:52:38,495 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 88}}]
2024-11-08 10:52:38,820 - INFO - Plan thread terminated.
2024-11-08 10:52:38,889 - INFO - Belief set thread terminated.
2024-11-08 10:52:38,906 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_5', 'action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 97}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 95}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 94}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 93}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 92}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 91}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 89}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 88}}]]
2024-11-08 10:52:38,925 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 88}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': None}}}
2024-11-08 10:52:43,558 - INFO - Invalidating intention 7 ...
2024-11-08 10:52:55,835 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    map = belief_set['map']['grid']
    delivery_point = [cell for cell in map if cell['cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
    for parcel_id, parcel in parcels.items():
        if parcel['carried_by_id'] is None:
            if agent['coordinates'] == parcel['coordinates']:
                function_5()
            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                function_2()
            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                function_1()
            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                function_4()
            else:
                function_3()
        elif parcel['carried_by_id'] == agent['id']:
            if agent['coordinates'] == delivery_point:
                function_6()
            elif agent['coordinates'][0] < delivery_point[0]:
                function_2()
            elif agent['coordinates'][0] > delivery_point[0]:
                function_1()
            elif agent['coordinates'][1] < delivery_point[1]:
                function_4()
            else:
                function_3()
2024-11-08 10:52:55,872 - INFO - The intention is valid.
2024-11-08 10:52:55,886 - INFO - Intention added to desire 1
2024-11-08 10:52:55,905 - INFO - Running intention 8 ...
2024-11-08 10:52:56,142 - INFO - Belief set thread started ...
2024-11-08 10:52:56,155 - INFO - Plan thread started ...
2024-11-08 10:52:56,155 - INFO - Started subprocess...
2024-11-08 10:52:56,155 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 88}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': None}}}
2024-11-08 10:52:56,457 - INFO - Executing action action_5 ...
2024-11-08 10:52:56,706 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 87}}]
2024-11-08 10:52:57,013 - INFO - Executing action action_5 ...
2024-11-08 10:52:57,232 - INFO - Action action_5 executed. Events received: []
2024-11-08 10:52:57,625 - INFO - Plan thread terminated.
2024-11-08 10:52:57,719 - INFO - Belief set thread terminated.
2024-11-08 10:52:57,751 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 87}}], []]
2024-11-08 10:52:57,770 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 87}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:53:02,184 - INFO - Invalidating intention 8 ...
2024-11-08 10:53:10,299 - INFO - Testing intention 
def function():
    global belief_set
    parcel_spawn_location = None
    for cell in belief_set['map']['grid']:
        if cell['cell_type'] == 'parcels_spawn':
            parcel_spawn_location = cell['cell_coordinates']
            break
    if parcel_spawn_location is not None:
        agent_location = belief_set['agent'][1]['coordinates']
        if agent_location[0] < parcel_spawn_location[0]:
            function_2()
        elif agent_location[0] > parcel_spawn_location[0]:
            function_1()
        elif agent_location[1] < parcel_spawn_location[1]:
            function_4()
        elif agent_location[1] > parcel_spawn_location[1]:
            function_3()
        if belief_set['agent'][1]['energy'] < 20:
            belief_set['agent'][1]['energy'] += 20

2024-11-08 10:53:10,318 - INFO - The intention is valid.
2024-11-08 10:53:10,319 - INFO - Intention added to desire 1
2024-11-08 10:53:10,325 - INFO - Running intention 9 ...
2024-11-08 10:53:10,489 - INFO - Belief set thread started ...
2024-11-08 10:53:10,501 - INFO - Plan thread started ...
2024-11-08 10:53:10,508 - INFO - Started subprocess...
2024-11-08 10:53:10,545 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 87}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:53:10,844 - INFO - Executing action action_2 ...
2024-11-08 10:53:11,049 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 86}}]
2024-11-08 10:53:11,416 - INFO - Plan thread terminated.
2024-11-08 10:53:11,422 - INFO - Belief set thread terminated.
2024-11-08 10:53:11,454 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 86}}]]
2024-11-08 10:53:11,454 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 86}}, 'parcels': {1: {'id': 1, 'coordinates': [1, 0], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [1, 0], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:53:17,187 - INFO - Invalidating intention 9 ...
2024-11-08 10:53:17,187 - INFO - Invalidating intention 1 ...
2024-11-08 10:53:17,187 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 10:53:17,187 - INFO - Invalidating intention 2 ...
2024-11-08 10:53:17,199 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-08 10:53:17,199 - INFO - Invalidating intention 3 ...
2024-11-08 10:53:17,199 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 10:53:17,199 - INFO - Invalidating intention 4 ...
2024-11-08 10:53:17,205 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 10:53:39,022 - INFO - Desire added: 2. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
Executable: False
Trigger function:
None



2024-11-08 10:53:44,475 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell']
    for cell in delivery_cells:
        if agent['coordinates'][0] > cell[0]:
            function_1()
        elif agent['coordinates'][0] < cell[0]:
            function_2()
        elif agent['coordinates'][1] > cell[1]:
            function_3()
        elif agent['coordinates'][1] < cell[1]:
            function_4()
2024-11-08 10:53:44,500 - INFO - The intention is valid.
2024-11-08 10:53:44,501 - INFO - Intention added to desire 2
2024-11-08 10:53:44,506 - INFO - Running intention 10 ...
2024-11-08 10:53:44,675 - INFO - Belief set thread started ...
2024-11-08 10:53:44,688 - INFO - Plan thread started ...
2024-11-08 10:53:44,694 - INFO - Started subprocess...
2024-11-08 10:53:44,776 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 86}}, 'parcels': {1: {'id': 1, 'coordinates': [1, 0], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [1, 0], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:53:45,056 - INFO - Executing action action_1 ...
2024-11-08 10:53:45,274 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 85}}]
2024-11-08 10:53:45,579 - INFO - Plan thread terminated.
2024-11-08 10:53:45,617 - INFO - Belief set thread terminated.
2024-11-08 10:53:45,648 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 85}}]]
2024-11-08 10:53:45,686 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 85}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:53:49,153 - INFO - Invalidating intention 10 ...
2024-11-08 10:53:55,681 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
        function_1()
    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
        function_2()
    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
        function_3()
    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
        function_4()
    else:
        function_6()
2024-11-08 10:53:55,682 - INFO - The intention is valid.
2024-11-08 10:53:55,701 - INFO - Intention added to desire 2
2024-11-08 10:53:55,701 - INFO - Running intention 11 ...
2024-11-08 10:53:55,801 - INFO - Belief set thread started ...
2024-11-08 10:53:55,807 - INFO - Plan thread started ...
2024-11-08 10:53:55,807 - INFO - Started subprocess...
2024-11-08 10:53:55,807 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 85}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:53:56,109 - INFO - Executing action action_4 ...
2024-11-08 10:53:56,366 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}]
2024-11-08 10:53:56,695 - INFO - Belief set thread terminated.
2024-11-08 10:53:56,720 - INFO - Plan thread terminated.
2024-11-08 10:53:56,745 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}]]
2024-11-08 10:53:56,745 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:54:09,875 - INFO - Testing intention 
def function():
    global belief_set
    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell']
    agent_position = belief_set['agent'][1]['coordinates']
    agent_energy = belief_set['agent'][1]['energy']
    if agent_energy >= 5: # assuming each move costs 5 energy units
        for cell in delivery_cells:
            if cell[0] < agent_position[0] and belief_set['map']['grid'][agent_position[0]-1][agent_position[1]]['cell_type'] == 'walkable':
                function_1()
                break
            elif cell[0] > agent_position[0] and belief_set['map']['grid'][agent_position[0]+1][agent_position[1]]['cell_type'] == 'walkable':
                function_2()
                break
            elif cell[1] < agent_position[1] and belief_set['map']['grid'][agent_position[0]][agent_position[1]-1]['cell_type'] == 'walkable':
                function_3()
                break
            elif cell[1] > agent_position[1] and belief_set['map']['grid'][agent_position[0]][agent_position[1]+1]['cell_type'] == 'walkable':
                function_4()
                break
2024-11-08 10:54:09,888 - INFO - The intention is valid.
2024-11-08 10:54:09,895 - INFO - Intention added to desire 2
2024-11-08 10:54:09,902 - INFO - Running intention 12 ...
2024-11-08 10:54:10,121 - INFO - Belief set thread started ...
2024-11-08 10:54:10,134 - INFO - Plan thread started ...
2024-11-08 10:54:10,153 - INFO - Started subprocess...
2024-11-08 10:54:10,159 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:54:25,189 - ERROR - Error during intention 12 execution. Intention 12 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 10:54:25,226 - INFO - Plan thread terminated.
2024-11-08 10:54:25,289 - INFO - Belief set thread terminated.
2024-11-08 10:54:25,363 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 10:54:25,376 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:54:33,171 - INFO - Invalidating intention 12 ...
2024-11-08 10:54:58,520 - INFO - Testing intention 
def function():
    global belief_set
    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell']
    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'][0]) + abs(x['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
    for cell in delivery_cells:
        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'][0]
        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]
        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
            function_1()
            break
        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
            function_2()
            break
        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
            function_3()
            break
        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
            function_4()
            break
2024-11-08 10:54:58,534 - INFO - The intention is valid.
2024-11-08 10:54:58,535 - INFO - Intention added to desire 2
2024-11-08 10:54:58,541 - INFO - Running intention 13 ...
2024-11-08 10:54:58,678 - INFO - Belief set thread started ...
2024-11-08 10:54:58,684 - INFO - Plan thread started ...
2024-11-08 10:54:58,715 - INFO - Started subprocess...
2024-11-08 10:54:58,715 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:54:58,991 - INFO - Executing action action_4 ...
2024-11-08 10:54:59,241 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]
2024-11-08 10:54:59,559 - INFO - Belief set thread terminated.
2024-11-08 10:54:59,565 - INFO - Plan thread terminated.
2024-11-08 10:54:59,621 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: ['action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]]
2024-11-08 10:54:59,621 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 83}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:55:06,358 - INFO - Testing intention 
def function():
    global belief_set
    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell']
    agent = belief_set['agent'][1]
    if agent['coordinates'] in [cell['cell_coordinates'] for cell in delivery_cells]:
        function_6()
    else:
        function_13()
2024-11-08 10:55:06,358 - INFO - The intention is valid.
2024-11-08 10:55:06,359 - INFO - Intention added to desire 2
2024-11-08 10:55:06,359 - INFO - Running intention 14 ...
2024-11-08 10:55:06,434 - INFO - Belief set thread started ...
2024-11-08 10:55:06,453 - INFO - Plan thread started ...
2024-11-08 10:55:06,472 - INFO - Started subprocess...
2024-11-08 10:55:06,472 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 83}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 10:55:06,804 - INFO - Executing action action_6 ...
2024-11-08 10:55:07,011 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 82}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]
2024-11-08 10:55:07,395 - INFO - Plan thread terminated.
2024-11-08 10:55:07,454 - INFO - Belief set thread terminated.
2024-11-08 10:55:07,461 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 82}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]]
2024-11-08 10:55:07,461 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 82}}, 'parcels': {}}
2024-11-08 10:55:11,851 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False
2024-11-08 10:55:11,851 - INFO - The trigger function is valid.
2024-11-08 10:55:11,851 - INFO - Trigger function added to desire 2.
2024-11-08 10:55:32,552 - INFO - Desire added: 3. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
Executable: False
Trigger function:
None



2024-11-08 10:55:41,487 - INFO - Testing intention 
def function():
    global belief_set
    # Get the coordinates of the agent and the battery spawn location
    agent_coordinates = belief_set['agent'][1]['coordinates']
    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
    # Calculate the difference in coordinates between the agent and the battery spawn location
    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
    # Move the agent towards the battery spawn location
    if x_diff > 0:
        function_2()
    elif x_diff < 0:
        function_1()
    elif y_diff > 0:
        function_4()
    elif y_diff < 0:
        function_3()
    # If the agent is at the battery spawn location, pick up the battery
    if agent_coordinates == battery_spawn_coordinates:
        function_5()
2024-11-08 10:55:41,500 - INFO - The intention is valid.
2024-11-08 10:55:41,519 - INFO - Intention added to desire 3
2024-11-08 10:55:41,544 - INFO - Running intention 15 ...
2024-11-08 10:55:41,731 - INFO - Belief set thread started ...
2024-11-08 10:55:41,768 - INFO - Plan thread started ...
2024-11-08 10:55:41,792 - INFO - Started subprocess...
2024-11-08 10:55:41,792 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 82}}, 'parcels': {}, 'batteries': {1: {'coordinates': [2, 2]}}}
2024-11-08 10:55:42,101 - INFO - Executing action action_2 ...
2024-11-08 10:55:42,333 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 81}}]
2024-11-08 10:55:42,711 - INFO - Plan thread terminated.
2024-11-08 10:55:42,711 - INFO - Belief set thread terminated.
2024-11-08 10:55:42,785 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 81}}]]
2024-11-08 10:55:42,798 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 81}}, 'parcels': {}, 'batteries': {1: {'coordinates': [2, 2]}}}
2024-11-08 10:55:46,259 - INFO - Invalidating intention 15 ...
2024-11-08 10:55:53,163 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    battery_location = belief_set['batteries'][1]['coordinates']
    while agent['coordinates'] != battery_location:
        if agent['coordinates'][0] < battery_location[0]:
            function_2()
            agent['coordinates'][0] += 1
        elif agent['coordinates'][0] > battery_location[0]:
            function_1()
            agent['coordinates'][0] -= 1
        if agent['coordinates'][1] < battery_location[1]:
            function_4()
            agent['coordinates'][1] += 1
        elif agent['coordinates'][1] > battery_location[1]:
            function_3()
            agent['coordinates'][1] -= 1
    function_5()
2024-11-08 10:55:53,164 - INFO - The intention is valid.
2024-11-08 10:55:53,177 - INFO - Intention added to desire 3
2024-11-08 10:55:53,177 - INFO - Running intention 16 ...
2024-11-08 10:55:53,328 - INFO - Belief set thread started ...
2024-11-08 10:55:53,334 - INFO - Plan thread started ...
2024-11-08 10:55:53,346 - INFO - Started subprocess...
2024-11-08 10:55:53,401 - INFO - Belief set before intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 81}}, 'parcels': {}, 'batteries': {1: {'coordinates': [2, 2]}}}
2024-11-08 10:55:53,658 - INFO - Executing action action_2 ...
2024-11-08 10:55:53,863 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 80}}]
2024-11-08 10:55:54,158 - INFO - Executing action action_5 ...
2024-11-08 10:55:54,370 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [2, 2]}}]
2024-11-08 10:55:54,724 - INFO - Plan thread terminated.
2024-11-08 10:55:54,755 - INFO - Belief set thread terminated.
2024-11-08 10:55:54,774 - INFO - Intention 16 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 80}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [2, 2]}}]]
2024-11-08 10:55:54,774 - INFO - Belief set after intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 100}}, 'parcels': {}, 'batteries': {}}
2024-11-08 10:55:59,539 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent_energy = belief_set['agent'][1]['energy']
    battery_cells = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn']
    if agent_energy < 50 and battery_cells:
        return True
    else:
        return False
2024-11-08 10:55:59,540 - ERROR - Trigger function does not return the boolean True for the prior belief set.
2024-11-08 10:56:16,224 - INFO - Desire added: 4. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
Executable: False
Trigger function:
None



2024-11-08 10:56:24,034 - INFO - Testing intention 
def function():
    global belief_set
    agent_coords = belief_set['agent'][1]['coordinates']
    key_coords = belief_set['keys'][1]['coordinates']
    has_key = belief_set['agent'][1]['has_key']
    if not has_key:
        if agent_coords[0] > key_coords[0]:
            function_1()
        elif agent_coords[0] < key_coords[0]:
            function_2()
        elif agent_coords[1] > key_coords[1]:
            function_3()
        elif agent_coords[1] < key_coords[1]:
            function_4()
        if agent_coords == key_coords:
            function_5()
    else:
        pass
2024-11-08 10:56:24,047 - INFO - The intention is valid.
2024-11-08 10:56:24,060 - INFO - Intention added to desire 4
2024-11-08 10:56:24,079 - INFO - Running intention 17 ...
2024-11-08 10:56:24,230 - INFO - Belief set thread started ...
2024-11-08 10:56:24,268 - INFO - Plan thread started ...
2024-11-08 10:56:24,286 - INFO - Started subprocess...
2024-11-08 10:56:24,286 - INFO - Belief set before intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 100}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': None}}}
2024-11-08 10:56:24,583 - INFO - Executing action action_1 ...
2024-11-08 10:56:24,803 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 99}}]
2024-11-08 10:56:25,113 - INFO - Plan thread terminated.
2024-11-08 10:56:25,126 - INFO - Belief set thread terminated.
2024-11-08 10:56:25,189 - INFO - Intention 17 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 99}}]]
2024-11-08 10:56:25,189 - INFO - Belief set after intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 99}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': None}}}
2024-11-08 10:56:29,155 - INFO - Invalidating intention 17 ...
2024-11-08 10:56:37,242 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    key = belief_set['keys'][1]
    if agent['coordinates'] == key['coordinates']:
        function_5()
    else:
        if agent['coordinates'][0] > key['coordinates'][0]:
            function_1()
        elif agent['coordinates'][0] < key['coordinates'][0]:
            function_2()
        elif agent['coordinates'][1] > key['coordinates'][1]:
            function_3()
        else:
            function_4()

2024-11-08 10:56:37,267 - INFO - The intention is valid.
2024-11-08 10:56:37,280 - INFO - Intention added to desire 4
2024-11-08 10:56:37,305 - INFO - Running intention 18 ...
2024-11-08 10:56:37,480 - INFO - Belief set thread started ...
2024-11-08 10:56:37,499 - INFO - Plan thread started ...
2024-11-08 10:56:37,530 - INFO - Started subprocess...
2024-11-08 10:56:37,530 - INFO - Belief set before intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 99}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': None}}}
2024-11-08 10:56:37,802 - INFO - Executing action action_3 ...
2024-11-08 10:56:38,034 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 98}}]
2024-11-08 10:56:38,378 - INFO - Plan thread terminated.
2024-11-08 10:56:38,450 - INFO - Belief set thread terminated.
2024-11-08 10:56:38,487 - INFO - Intention 18 execution has finished. Threads and subprocess terminated. Plan: ['action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 98}}]]
2024-11-08 10:56:38,488 - INFO - Belief set after intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 98}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': None}}}
2024-11-08 10:56:42,249 - INFO - Invalidating intention 18 ...
2024-11-08 10:56:50,265 - INFO - Testing intention 
def function():
    global belief_set
    key_coordinates = belief_set['keys'][1]['coordinates']
    agent_coordinates = belief_set['agent'][1]['coordinates']
    while agent_coordinates[0] > key_coordinates[0]:
        function_1()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    while agent_coordinates[0] < key_coordinates[0]:
        function_2()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    while agent_coordinates[1] > key_coordinates[1]:
        function_3()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    while agent_coordinates[1] < key_coordinates[1]:
        function_4()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    function_5()
    function_4()
2024-11-08 10:56:50,265 - INFO - The intention is valid.
2024-11-08 10:56:50,266 - INFO - Intention added to desire 4
2024-11-08 10:56:50,272 - INFO - Running intention 19 ...
2024-11-08 10:56:50,435 - INFO - Belief set thread started ...
2024-11-08 10:56:50,485 - INFO - Plan thread started ...
2024-11-08 10:56:50,497 - INFO - Started subprocess...
2024-11-08 10:56:50,497 - INFO - Belief set before intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 98}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': None}}}
2024-11-08 10:56:50,802 - INFO - Executing action action_3 ...
2024-11-08 10:56:51,008 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 97}}]
2024-11-08 10:56:51,401 - INFO - Executing action action_5 ...
2024-11-08 10:56:51,706 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 96}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-08 10:56:52,077 - INFO - Executing action action_4 ...
2024-11-08 10:56:52,319 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 95}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-08 10:56:52,631 - INFO - Plan thread terminated.
2024-11-08 10:56:52,680 - INFO - Belief set thread terminated.
2024-11-08 10:56:52,737 - INFO - Intention 19 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_5', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 97}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 96}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 95}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]]
2024-11-08 10:56:52,737 - INFO - Belief set after intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 95}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}}
2024-11-08 10:56:58,123 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False
2024-11-08 10:56:58,205 - INFO - The trigger function is valid.
2024-11-08 10:56:58,218 - INFO - Trigger function added to desire 4.
2024-11-08 10:57:16,291 - INFO - Desire added: 5. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: True
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
Executable: False
Trigger function:
None



2024-11-08 10:57:25,815 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    door = belief_set['doors'][1]
    if agent['has_key']:
        if agent['coordinates'][0] < door['coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > door['coordinates'][0]:
            function_1()
        if agent['coordinates'][1] < door['coordinates'][1]:
            function_4()
        elif agent['coordinates'][1] > door['coordinates'][1]:
            function_3()

2024-11-08 10:57:25,828 - INFO - The intention is valid.
2024-11-08 10:57:25,841 - INFO - Intention added to desire 5
2024-11-08 10:57:25,853 - INFO - Running intention 20 ...
2024-11-08 10:57:26,021 - INFO - Belief set thread started ...
2024-11-08 10:57:26,059 - INFO - Plan thread started ...
2024-11-08 10:57:26,059 - INFO - Started subprocess...
2024-11-08 10:57:26,103 - INFO - Belief set before intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 95}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 10:57:26,425 - INFO - Executing action action_2 ...
2024-11-08 10:57:26,667 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [2, 1], 'carried_by_id': 1}}]
2024-11-08 10:57:27,064 - INFO - Executing action action_4 ...
2024-11-08 10:57:27,290 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 93}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [2, 2], 'carried_by_id': 1}}]
2024-11-08 10:57:27,628 - INFO - Plan thread terminated.
2024-11-08 10:57:27,659 - INFO - Belief set thread terminated.
2024-11-08 10:57:27,678 - INFO - Intention 20 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [2, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 93}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [2, 2], 'carried_by_id': 1}}]]
2024-11-08 10:57:27,678 - INFO - Belief set after intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 93}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [2, 2], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 10:57:32,996 - INFO - Invalidating intention 20 ...
2024-11-08 10:57:42,123 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['has_key']:
        door_coordinates = belief_set['doors'][1]['coordinates']
        if agent['coordinates'][0] < door_coordinates[0]:
            function_2()
        elif agent['coordinates'][0] > door_coordinates[0]:
            function_1()
        elif agent['coordinates'][1] < door_coordinates[1]:
            function_4()
        else:
            function_3()
    else:
        key_coordinates = belief_set['keys'][1]['coordinates']
        if agent['coordinates'][0] < key_coordinates[0]:
            function_2()
        elif agent['coordinates'][0] > key_coordinates[0]:
            function_1()
        elif agent['coordinates'][1] < key_coordinates[1]:
            function_4()
        else:
            function_3()
        function_5()

2024-11-08 10:57:42,123 - INFO - The intention is valid.
2024-11-08 10:57:42,130 - INFO - Intention added to desire 5
2024-11-08 10:57:42,136 - INFO - Running intention 21 ...
2024-11-08 10:57:42,309 - INFO - Belief set thread started ...
2024-11-08 10:57:42,328 - INFO - Plan thread started ...
2024-11-08 10:57:42,334 - INFO - Started subprocess...
2024-11-08 10:57:42,334 - INFO - Belief set before intention 21 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 93}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [2, 2], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 10:57:42,580 - INFO - Executing action action_2 ...
2024-11-08 10:57:42,823 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [3, 2], 'carried_by_id': 1}}]
2024-11-08 10:57:43,130 - INFO - Plan thread terminated.
2024-11-08 10:57:43,143 - INFO - Belief set thread terminated.
2024-11-08 10:57:43,175 - INFO - Intention 21 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [3, 2], 'carried_by_id': 1}}]]
2024-11-08 10:57:43,175 - INFO - Belief set after intention 21 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [3, 2], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 10:57:46,279 - INFO - Invalidating intention 21 ...
2024-11-08 10:57:52,420 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 10:
        door = belief_set['doors'][1]
        if agent['coordinates'][0] > door['coordinates'][0]:
            function_1()
        elif agent['coordinates'][0] < door['coordinates'][0]:
            function_2()
        elif agent['coordinates'][1] > door['coordinates'][1]:
            function_3()
        elif agent['coordinates'][1] < door['coordinates'][1]:
            function_4()
    elif agent['energy'] <= 10:
        function_16()

2024-11-08 10:57:52,433 - INFO - The intention is valid.
2024-11-08 10:57:52,447 - INFO - Intention added to desire 5
2024-11-08 10:57:52,482 - INFO - Running intention 22 ...
2024-11-08 10:57:52,700 - INFO - Belief set thread started ...
2024-11-08 10:57:52,707 - INFO - Plan thread started ...
2024-11-08 10:57:52,713 - INFO - Started subprocess...
2024-11-08 10:57:52,713 - INFO - Belief set before intention 22 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [3, 2], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 10:57:53,034 - INFO - Plan thread terminated.
2024-11-08 10:57:53,078 - INFO - Belief set thread terminated.
2024-11-08 10:57:53,096 - INFO - Intention 22 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 10:57:53,096 - INFO - Belief set after intention 22 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [3, 2], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 10:57:57,011 - INFO - Invalidating intention 22 ...
2024-11-08 10:57:57,011 - INFO - Invalidating intention 1 ...
2024-11-08 10:57:57,011 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 10:57:57,018 - INFO - Invalidating intention 2 ...
2024-11-08 10:57:57,024 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-08 10:57:57,024 - INFO - Invalidating intention 3 ...
2024-11-08 10:57:57,030 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 10:57:57,062 - INFO - Invalidating intention 4 ...
2024-11-08 10:57:57,062 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 10:58:37,289 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: True
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None



2024-11-08 10:58:37,302 - INFO - Running trigger function for desire 2 ...
2024-11-08 10:58:37,302 - INFO - Trigger function for desire 2 has been executed. Result: False
2024-11-08 10:58:37,302 - INFO - Running trigger function for desire 4 ...
2024-11-08 10:58:37,302 - INFO - Trigger function for desire 4 has been executed. Result: True
2024-11-08 10:58:37,302 - INFO - Desire 4 could be triggered. Adding it to the list...
2024-11-08 10:58:37,302 - INFO - Desires triggered: [4]. Now randomly choosing which one to run.
2024-11-08 10:58:37,302 - INFO - Desire 4 was randomly chosen. Desire 4 has been triggered.
2024-11-08 10:58:37,302 - INFO - Desire 4 is about to be executed ...
2024-11-08 10:58:37,302 - INFO - Executing all valid intentions for desire 4 ...
2024-11-08 10:58:37,302 - INFO - Executing intention 19 ...
2024-11-08 10:58:37,333 - INFO - Running intention 19 ...
2024-11-08 10:58:37,607 - INFO - Belief set thread started ...
2024-11-08 10:58:37,619 - INFO - Plan thread started ...
2024-11-08 10:58:37,619 - INFO - Started subprocess...
2024-11-08 10:58:37,670 - INFO - Belief set before intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:58:52,739 - ERROR - Error during intention 19 execution. Intention 19 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 10:58:52,776 - INFO - Belief set thread terminated.
2024-11-08 10:58:52,808 - INFO - Plan thread terminated.
2024-11-08 10:58:52,856 - INFO - Intention 19 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 10:58:52,862 - INFO - Belief set after intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:58:52,862 - INFO - Invalidating intention 19 ...
2024-11-08 10:58:52,863 - ERROR - Error during intention 19 execution. Desire 4 is now invalid and intention 19 has been invalidated.
2024-11-08 10:58:54,148 - INFO - Invalidating desire 4 ...
2024-11-08 10:58:57,234 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None



2024-11-08 10:58:57,234 - INFO - Running trigger function for desire 2 ...
2024-11-08 10:58:57,234 - INFO - Trigger function for desire 2 has been executed. Result: False
2024-11-08 10:58:57,234 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-08 10:58:57,234 - INFO - No desire has been triggered.
2024-11-08 10:58:57,234 - INFO - No desire triggered.
2024-11-08 10:58:59,370 - INFO - Desire added: 6. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 6: The agent's long term goal is to efficiently gather all available parcels, batteries, and keys in the environment while navigating through doors and avoiding obstacles, to maximize the score and maintain optimal energy levels.
Executable: False
Trigger function:
None



2024-11-08 10:59:05,571 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['energy'] < 30:
        function_16()
    else:
        function_14()
    if 'parcels' in belief_set and agent['coordinates'] in [parcel['coordinates'] for parcel in belief_set['parcels'].values()]:
        function_5()
    if 'keys' in belief_set and agent['coordinates'] == belief_set['keys'][2]['coordinates']:
        function_5()

2024-11-08 10:59:05,584 - INFO - The intention is valid.
2024-11-08 10:59:05,621 - INFO - Intention added to desire 6
2024-11-08 10:59:05,659 - INFO - Running intention 23 ...
2024-11-08 10:59:05,897 - INFO - Belief set thread started ...
2024-11-08 10:59:05,904 - INFO - Plan thread started ...
2024-11-08 10:59:05,910 - INFO - Started subprocess...
2024-11-08 10:59:05,941 - INFO - Belief set before intention 23 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:59:06,263 - INFO - Executing action action_1 ...
2024-11-08 10:59:06,476 - INFO - Action action_1 executed. Events received: []
2024-11-08 10:59:06,945 - INFO - Plan thread terminated.
2024-11-08 10:59:06,957 - INFO - Belief set thread terminated.
2024-11-08 10:59:07,001 - INFO - Intention 23 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[]]
2024-11-08 10:59:07,002 - INFO - Belief set after intention 23 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:59:14,160 - INFO - Invalidating intention 23 ...
2024-11-08 10:59:24,275 - INFO - Testing intention 
def function():
    global belief_set
    agent_coords = belief_set['agent'][1]['coordinates']
    parcel_coords = [parcel['coordinates'] for parcel in belief_set['parcels'].values() if parcel['carried_by_id'] is None]
    if agent_coords in parcel_coords:
        function_5()
    else:
        min_distance = float('inf')
        for coords in parcel_coords:
            distance = abs(agent_coords[0] - coords[0]) + abs(agent_coords[1] - coords[1])
            if distance < min_distance:
                min_distance = distance
                nearest_parcel = coords
        if agent_coords[0] > nearest_parcel[0]:
            function_1()
        elif agent_coords[0] < nearest_parcel[0]:
            function_2()
        elif agent_coords[1] > nearest_parcel[1]:
            function_3()
        elif agent_coords[1] < nearest_parcel[1]:
            function_4()
2024-11-08 10:59:24,288 - INFO - The intention is valid.
2024-11-08 10:59:24,289 - INFO - Intention added to desire 6
2024-11-08 10:59:24,294 - INFO - Running intention 24 ...
2024-11-08 10:59:24,420 - INFO - Belief set thread started ...
2024-11-08 10:59:24,445 - INFO - Plan thread started ...
2024-11-08 10:59:24,457 - INFO - Started subprocess...
2024-11-08 10:59:24,476 - INFO - Belief set before intention 24 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:59:24,790 - INFO - Executing action action_2 ...
2024-11-08 10:59:25,064 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}]
2024-11-08 10:59:25,400 - INFO - Plan thread terminated.
2024-11-08 10:59:25,449 - INFO - Belief set thread terminated.
2024-11-08 10:59:25,480 - INFO - Intention 24 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}]]
2024-11-08 10:59:25,480 - INFO - Belief set after intention 24 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:59:29,770 - INFO - Invalidating intention 24 ...
2024-11-08 10:59:40,975 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    min_distance = float('inf')
    nearest_parcel = None
    for parcel_id, parcel in parcels.items():
        if parcel['carried_by_id'] is not None:
            continue
        distance = abs(agent['coordinates'][0] - parcel['coordinates'][0]) + abs(agent['coordinates'][1] - parcel['coordinates'][1])
        if distance < min_distance:
            min_distance = distance
            nearest_parcel = parcel
    if nearest_parcel is not None:
        if agent['coordinates'] == nearest_parcel['coordinates']:
            function_5()
        else:
            if agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                function_1()
            elif agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                function_2()
            elif agent['coordinates'][1] > nearest_parcel['coordinates'][1]:
                function_3()
            elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                function_4()
2024-11-08 10:59:40,988 - INFO - The intention is valid.
2024-11-08 10:59:40,995 - INFO - Intention added to desire 6
2024-11-08 10:59:41,019 - INFO - Running intention 25 ...
2024-11-08 10:59:41,126 - INFO - Belief set thread started ...
2024-11-08 10:59:41,158 - INFO - Plan thread started ...
2024-11-08 10:59:41,158 - INFO - Started subprocess...
2024-11-08 10:59:41,158 - INFO - Belief set before intention 25 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:59:41,455 - INFO - Executing action action_4 ...
2024-11-08 10:59:41,683 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-08 10:59:41,980 - INFO - Belief set thread terminated.
2024-11-08 10:59:42,036 - INFO - Plan thread terminated.
2024-11-08 10:59:42,043 - INFO - Intention 25 execution has finished. Threads and subprocess terminated. Plan: ['action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]]
2024-11-08 10:59:42,043 - INFO - Belief set after intention 25 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:59:48,201 - INFO - Invalidating intention 25 ...
2024-11-08 10:59:48,201 - INFO - Invalidating intention 1 ...
2024-11-08 10:59:48,207 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 10:59:48,232 - INFO - Invalidating intention 2 ...
2024-11-08 10:59:48,232 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-08 10:59:48,232 - INFO - Invalidating intention 3 ...
2024-11-08 10:59:48,232 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 10:59:48,232 - INFO - Invalidating intention 4 ...
2024-11-08 10:59:48,232 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 10:59:48,232 - INFO - Invalidating intention 5 ...
2024-11-08 10:59:48,232 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-08 10:59:50,699 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 6: The agent's long term goal is to efficiently gather all available parcels, batteries, and keys in the environment while navigating through doors and avoiding obstacles, to maximize the score and maintain optimal energy levels.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel or key, pick them up if possible, and if the energy level is below a certain threshold, move the agent towards the nearest battery cell to recharge its energy level.
                def function_23():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        function_14()
                    if 'parcels' in belief_set and agent['coordinates'] in [parcel[
                        'coordinates'] for parcel in belief_set['parcels'].values()]:
                        function_5()
                    if 'keys' in belief_set and agent['coordinates'] == belief_set['keys'][2][
                        'coordinates']:
                        function_5()
                
    Intention ID: [24]
    Executable: False
    Description: The short term goal is to move the agent to the nearest parcel while preserving energy, pick up the parcel if the agent is already at the parcel's location.
                def function_24():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    if agent_coords in parcel_coords:
                        function_5()
                    else:
                        min_distance = float('inf')
                        for coords in parcel_coords:
                            distance = abs(agent_coords[0] - coords[0]) + abs(agent_coords[
                                1] - coords[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel = coords
                        if agent_coords[0] > nearest_parcel[0]:
                            function_1()
                        elif agent_coords[0] < nearest_parcel[0]:
                            function_2()
                        elif agent_coords[1] > nearest_parcel[1]:
                            function_3()
                        elif agent_coords[1] < nearest_parcel[1]:
                            function_4()
                
    Intention ID: [25]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it's on the same cell.
                def function_25():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    min_distance = float('inf')
                    nearest_parcel = None
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is not None:
                            continue
                        distance = abs(agent['coordinates'][0] - parcel['coordinates'][0]
                            ) + abs(agent['coordinates'][1] - parcel['coordinates'][1])
                        if distance < min_distance:
                            min_distance = distance
                            nearest_parcel = parcel
                    if nearest_parcel is not None:
                        if agent['coordinates'] == nearest_parcel['coordinates']:
                            function_5()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                
Executable: False
Trigger function:
None



2024-11-08 10:59:50,712 - INFO - Running trigger function for desire 2 ...
2024-11-08 10:59:50,712 - INFO - Trigger function for desire 2 has been executed. Result: False
2024-11-08 10:59:50,712 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-08 10:59:50,731 - INFO - No desire has been triggered.
2024-11-08 10:59:50,731 - INFO - No desire triggered.
2024-11-08 10:59:53,051 - INFO - Desire added: 7. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 6: The agent's long term goal is to efficiently gather all available parcels, batteries, and keys in the environment while navigating through doors and avoiding obstacles, to maximize the score and maintain optimal energy levels.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel or key, pick them up if possible, and if the energy level is below a certain threshold, move the agent towards the nearest battery cell to recharge its energy level.
                def function_23():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        function_14()
                    if 'parcels' in belief_set and agent['coordinates'] in [parcel[
                        'coordinates'] for parcel in belief_set['parcels'].values()]:
                        function_5()
                    if 'keys' in belief_set and agent['coordinates'] == belief_set['keys'][2][
                        'coordinates']:
                        function_5()
                
    Intention ID: [24]
    Executable: False
    Description: The short term goal is to move the agent to the nearest parcel while preserving energy, pick up the parcel if the agent is already at the parcel's location.
                def function_24():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    if agent_coords in parcel_coords:
                        function_5()
                    else:
                        min_distance = float('inf')
                        for coords in parcel_coords:
                            distance = abs(agent_coords[0] - coords[0]) + abs(agent_coords[
                                1] - coords[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel = coords
                        if agent_coords[0] > nearest_parcel[0]:
                            function_1()
                        elif agent_coords[0] < nearest_parcel[0]:
                            function_2()
                        elif agent_coords[1] > nearest_parcel[1]:
                            function_3()
                        elif agent_coords[1] < nearest_parcel[1]:
                            function_4()
                
    Intention ID: [25]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it's on the same cell.
                def function_25():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    min_distance = float('inf')
                    nearest_parcel = None
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is not None:
                            continue
                        distance = abs(agent['coordinates'][0] - parcel['coordinates'][0]
                            ) + abs(agent['coordinates'][1] - parcel['coordinates'][1])
                        if distance < min_distance:
                            min_distance = distance
                            nearest_parcel = parcel
                    if nearest_parcel is not None:
                        if agent['coordinates'] == nearest_parcel['coordinates']:
                            function_5()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                
Executable: False
Trigger function:
None


Desire 7: The agent's long term goal is to efficiently gather all parcels and keys while maintaining sufficient energy by utilizing batteries, and strategically opening doors to optimize navigation through the environment.
Executable: False
Trigger function:
None



2024-11-08 10:59:59,157 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['energy'] < 30:
        function_16()
    else:
        parcels = belief_set['parcels']
        keys = belief_set['keys']
        if parcels or keys:
            function_5()
        else:
            function_11()
2024-11-08 10:59:59,158 - INFO - The intention is valid.
2024-11-08 10:59:59,176 - INFO - Intention added to desire 7
2024-11-08 10:59:59,176 - INFO - Running intention 26 ...
2024-11-08 10:59:59,290 - INFO - Belief set thread started ...
2024-11-08 10:59:59,302 - INFO - Plan thread started ...
2024-11-08 10:59:59,302 - INFO - Started subprocess...
2024-11-08 10:59:59,321 - INFO - Belief set before intention 26 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 10:59:59,580 - INFO - Executing action action_5 ...
2024-11-08 10:59:59,818 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 97}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}]
2024-11-08 11:00:00,147 - INFO - Plan thread terminated.
2024-11-08 11:00:00,179 - INFO - Belief set thread terminated.
2024-11-08 11:00:00,197 - INFO - Intention 26 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 97}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}]]
2024-11-08 11:00:00,198 - INFO - Belief set after intention 26 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 97}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:00:06,450 - INFO - Invalidating intention 26 ...
2024-11-08 11:00:19,245 - INFO - Testing intention 
def function():
    global belief_set
    parcel_location = next((parcel['coordinates'] for parcel in belief_set['parcels'].values() if parcel['carried_by_id'] is None), None)
    if belief_set['agent'][1]['coordinates'] == parcel_location:
        function_5()
    else:
        if belief_set['agent'][1]['coordinates'][0] < parcel_location[0]:
            function_2()
        elif belief_set['agent'][1]['coordinates'][0] > parcel_location[0]:
            function_1()
        elif belief_set['agent'][1]['coordinates'][1] < parcel_location[1]:
            function_4()
        elif belief_set['agent'][1]['coordinates'][1] > parcel_location[1]:
            function_3()
    delivery_cell_location = next((cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'), None)
    if belief_set['agent'][1]['coordinates'] == delivery_cell_location:
        function_6()
    else:
        if belief_set['agent'][1]['coordinates'][0] < delivery_cell_location[0]:
            function_2()
        elif belief_set['agent'][1]['coordinates'][0] > delivery_cell_location[0]:
            function_1()
        elif belief_set['agent'][1]['coordinates'][1] < delivery_cell_location[1]:
            function_4()
        elif belief_set['agent'][1]['coordinates'][1] > delivery_cell_location[1]:
            function_3()

2024-11-08 11:00:19,246 - INFO - The intention is valid.
2024-11-08 11:00:19,247 - INFO - Intention added to desire 7
2024-11-08 11:00:19,266 - INFO - Running intention 27 ...
2024-11-08 11:00:19,384 - INFO - Belief set thread started ...
2024-11-08 11:00:19,422 - INFO - Plan thread started ...
2024-11-08 11:00:19,428 - INFO - Started subprocess...
2024-11-08 11:00:19,446 - INFO - Belief set before intention 27 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 97}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:00:19,747 - INFO - Executing action action_4 ...
2024-11-08 11:00:19,996 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 96}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}]
2024-11-08 11:00:20,321 - INFO - Executing action action_1 ...
2024-11-08 11:00:20,545 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 95}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-08 11:00:20,911 - INFO - Plan thread terminated.
2024-11-08 11:00:20,911 - INFO - Belief set thread terminated.
2024-11-08 11:00:20,974 - INFO - Intention 27 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 96}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 95}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [1, 3], 'carried_by_id': 1}}]]
2024-11-08 11:00:20,993 - INFO - Belief set after intention 27 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 95}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:00:24,931 - INFO - Invalidating intention 27 ...
2024-11-08 11:00:36,180 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcel_coords = [parcel['coordinates'] for parcel in belief_set['parcels'].values() if parcel['carried_by_id'] is None]
    delivery_coords = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    while agent['coordinates'] != parcel_coords[0]:
        if agent['coordinates'][0] < parcel_coords[0][0]:
            function_2()
        elif agent['coordinates'][0] > parcel_coords[0][0]:
            function_1()
        elif agent['coordinates'][1] < parcel_coords[0][1]:
            function_4()
        elif agent['coordinates'][1] > parcel_coords[0][1]:
            function_3()
    function_5()
    while agent['coordinates'] != delivery_coords:
        if agent['coordinates'][0] < delivery_coords[0]:
            function_2()
        elif agent['coordinates'][0] > delivery_coords[0]:
            function_1()
        elif agent['coordinates'][1] < delivery_coords[1]:
            function_4()
        elif agent['coordinates'][1] > delivery_coords[1]:
            function_3()
    function_6()
    if agent['energy'] < 30:
        function_16()
2024-11-08 11:00:36,199 - INFO - The intention is valid.
2024-11-08 11:00:36,201 - INFO - Intention added to desire 7
2024-11-08 11:00:36,207 - INFO - Running intention 28 ...
2024-11-08 11:00:36,354 - INFO - Belief set thread started ...
2024-11-08 11:00:36,373 - INFO - Plan thread started ...
2024-11-08 11:00:36,397 - INFO - Started subprocess...
2024-11-08 11:00:36,397 - INFO - Belief set before intention 28 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 95}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:00:36,667 - INFO - Executing action action_2 ...
2024-11-08 11:00:36,881 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}]
2024-11-08 11:00:37,191 - INFO - Executing action action_2 ...
2024-11-08 11:00:37,439 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [3, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 93}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [3, 3], 'carried_by_id': 1}}]
2024-11-08 11:00:37,721 - INFO - Executing action action_2 ...
2024-11-08 11:00:37,951 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:38,238 - INFO - Executing action action_2 ...
2024-11-08 11:00:38,487 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:38,836 - INFO - Executing action action_2 ...
2024-11-08 11:00:39,072 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:39,372 - INFO - Executing action action_2 ...
2024-11-08 11:00:39,606 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:39,971 - INFO - Executing action action_2 ...
2024-11-08 11:00:40,201 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:40,550 - INFO - Executing action action_2 ...
2024-11-08 11:00:40,775 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:41,120 - INFO - Executing action action_2 ...
2024-11-08 11:00:41,362 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:41,644 - INFO - Executing action action_2 ...
2024-11-08 11:00:41,917 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:42,290 - INFO - Executing action action_2 ...
2024-11-08 11:00:42,522 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:42,913 - INFO - Executing action action_2 ...
2024-11-08 11:00:43,119 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:43,549 - INFO - Executing action action_2 ...
2024-11-08 11:00:43,767 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:44,067 - INFO - Executing action action_2 ...
2024-11-08 11:00:44,293 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:44,599 - INFO - Executing action action_2 ...
2024-11-08 11:00:44,818 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:45,147 - INFO - Executing action action_2 ...
2024-11-08 11:00:45,415 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:45,763 - INFO - Executing action action_2 ...
2024-11-08 11:00:46,001 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:46,288 - INFO - Executing action action_2 ...
2024-11-08 11:00:46,519 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:46,823 - INFO - Executing action action_2 ...
2024-11-08 11:00:47,067 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:47,333 - INFO - Executing action action_2 ...
2024-11-08 11:00:47,568 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:47,944 - INFO - Executing action action_2 ...
2024-11-08 11:00:48,188 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:48,507 - INFO - Executing action action_2 ...
2024-11-08 11:00:48,720 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:49,059 - INFO - Executing action action_2 ...
2024-11-08 11:00:49,314 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:49,656 - INFO - Executing action action_2 ...
2024-11-08 11:00:49,868 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:50,198 - INFO - Executing action action_2 ...
2024-11-08 11:00:50,441 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:50,834 - INFO - Executing action action_2 ...
2024-11-08 11:00:51,058 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:51,372 - INFO - Executing action action_2 ...
2024-11-08 11:00:51,435 - ERROR - Error during intention 28 execution. Intention 28 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 11:00:51,516 - INFO - Belief set thread terminated.
2024-11-08 11:00:51,601 - INFO - Action action_2 executed. Events received: []
2024-11-08 11:00:51,869 - INFO - Plan thread terminated.
2024-11-08 11:00:51,920 - INFO - Intention 28 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [3, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 93}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [3, 3], 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-08 11:00:51,920 - INFO - Belief set after intention 28 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [3, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 93}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [3, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:00:59,440 - INFO - Invalidating intention 28 ...
2024-11-08 11:00:59,452 - INFO - Invalidating intention 1 ...
2024-11-08 11:00:59,452 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 11:00:59,453 - INFO - Invalidating intention 2 ...
2024-11-08 11:00:59,459 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-08 11:00:59,459 - INFO - Invalidating intention 3 ...
2024-11-08 11:00:59,459 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 11:00:59,459 - INFO - Invalidating intention 4 ...
2024-11-08 11:00:59,459 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 11:00:59,459 - INFO - Invalidating intention 5 ...
2024-11-08 11:00:59,459 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-08 11:00:59,459 - INFO - Invalidating intention 6 ...
2024-11-08 11:00:59,459 - INFO - Intention 6 is a base action. It cannot be invalidated.
2024-11-08 11:01:02,349 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 6: The agent's long term goal is to efficiently gather all available parcels, batteries, and keys in the environment while navigating through doors and avoiding obstacles, to maximize the score and maintain optimal energy levels.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel or key, pick them up if possible, and if the energy level is below a certain threshold, move the agent towards the nearest battery cell to recharge its energy level.
                def function_23():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        function_14()
                    if 'parcels' in belief_set and agent['coordinates'] in [parcel[
                        'coordinates'] for parcel in belief_set['parcels'].values()]:
                        function_5()
                    if 'keys' in belief_set and agent['coordinates'] == belief_set['keys'][2][
                        'coordinates']:
                        function_5()
                
    Intention ID: [24]
    Executable: False
    Description: The short term goal is to move the agent to the nearest parcel while preserving energy, pick up the parcel if the agent is already at the parcel's location.
                def function_24():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    if agent_coords in parcel_coords:
                        function_5()
                    else:
                        min_distance = float('inf')
                        for coords in parcel_coords:
                            distance = abs(agent_coords[0] - coords[0]) + abs(agent_coords[
                                1] - coords[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel = coords
                        if agent_coords[0] > nearest_parcel[0]:
                            function_1()
                        elif agent_coords[0] < nearest_parcel[0]:
                            function_2()
                        elif agent_coords[1] > nearest_parcel[1]:
                            function_3()
                        elif agent_coords[1] < nearest_parcel[1]:
                            function_4()
                
    Intention ID: [25]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it's on the same cell.
                def function_25():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    min_distance = float('inf')
                    nearest_parcel = None
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is not None:
                            continue
                        distance = abs(agent['coordinates'][0] - parcel['coordinates'][0]
                            ) + abs(agent['coordinates'][1] - parcel['coordinates'][1])
                        if distance < min_distance:
                            min_distance = distance
                            nearest_parcel = parcel
                    if nearest_parcel is not None:
                        if agent['coordinates'] == nearest_parcel['coordinates']:
                            function_5()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                
Executable: False
Trigger function:
None


Desire 7: The agent's long term goal is to efficiently gather all parcels and keys while maintaining sufficient energy by utilizing batteries, and strategically opening doors to optimize navigation through the environment.
    Intention ID: [26]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or key to pick it up, preserving energy by moving towards the nearest battery if energy is low.
                def function_26():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        parcels = belief_set['parcels']
                        keys = belief_set['keys']
                        if parcels or keys:
                            function_5()
                        else:
                            function_11()
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is to move the agent to a cell containing parcels, pick up the parcels, and then move to the nearest delivery cell to drop off the parcels.
                def function_27():
                    global belief_set
                    parcel_location = next((parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None), None)
                    if belief_set['agent'][1]['coordinates'] == parcel_location:
                        function_5()
                    elif belief_set['agent'][1]['coordinates'][0] < parcel_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > parcel_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < parcel_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > parcel_location[1]:
                        function_3()
                    delivery_cell_location = next((cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'),
                        None)
                    if belief_set['agent'][1]['coordinates'] == delivery_cell_location:
                        function_6()
                    elif belief_set['agent'][1]['coordinates'][0] < delivery_cell_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > delivery_cell_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < delivery_cell_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > delivery_cell_location[1]:
                        function_3()
                
    Intention ID: [28]
    Executable: False
    Description: The short term goal is to move towards the nearest parcel, pick it up and then head to the nearest delivery cell to drop it off, while ensuring the agent has enough energy.
                def function_28():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    delivery_coords = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent['coordinates'] != parcel_coords[0]:
                        if agent['coordinates'][0] < parcel_coords[0][0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coords[0][0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coords[0][1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coords[0][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != delivery_coords:
                        if agent['coordinates'][0] < delivery_coords[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_coords[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_coords[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_coords[1]:
                            function_3()
                    function_6()
                    if agent['energy'] < 30:
                        function_16()
                
Executable: False
Trigger function:
None



2024-11-08 11:01:02,349 - INFO - Running trigger function for desire 2 ...
2024-11-08 11:01:02,349 - INFO - Trigger function for desire 2 has been executed. Result: False
2024-11-08 11:01:02,349 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-08 11:01:02,349 - INFO - No desire has been triggered.
2024-11-08 11:01:02,349 - INFO - No desire triggered.
2024-11-08 11:01:04,038 - INFO - Desire added: 8. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 6: The agent's long term goal is to efficiently gather all available parcels, batteries, and keys in the environment while navigating through doors and avoiding obstacles, to maximize the score and maintain optimal energy levels.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel or key, pick them up if possible, and if the energy level is below a certain threshold, move the agent towards the nearest battery cell to recharge its energy level.
                def function_23():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        function_14()
                    if 'parcels' in belief_set and agent['coordinates'] in [parcel[
                        'coordinates'] for parcel in belief_set['parcels'].values()]:
                        function_5()
                    if 'keys' in belief_set and agent['coordinates'] == belief_set['keys'][2][
                        'coordinates']:
                        function_5()
                
    Intention ID: [24]
    Executable: False
    Description: The short term goal is to move the agent to the nearest parcel while preserving energy, pick up the parcel if the agent is already at the parcel's location.
                def function_24():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    if agent_coords in parcel_coords:
                        function_5()
                    else:
                        min_distance = float('inf')
                        for coords in parcel_coords:
                            distance = abs(agent_coords[0] - coords[0]) + abs(agent_coords[
                                1] - coords[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel = coords
                        if agent_coords[0] > nearest_parcel[0]:
                            function_1()
                        elif agent_coords[0] < nearest_parcel[0]:
                            function_2()
                        elif agent_coords[1] > nearest_parcel[1]:
                            function_3()
                        elif agent_coords[1] < nearest_parcel[1]:
                            function_4()
                
    Intention ID: [25]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it's on the same cell.
                def function_25():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    min_distance = float('inf')
                    nearest_parcel = None
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is not None:
                            continue
                        distance = abs(agent['coordinates'][0] - parcel['coordinates'][0]
                            ) + abs(agent['coordinates'][1] - parcel['coordinates'][1])
                        if distance < min_distance:
                            min_distance = distance
                            nearest_parcel = parcel
                    if nearest_parcel is not None:
                        if agent['coordinates'] == nearest_parcel['coordinates']:
                            function_5()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                
Executable: False
Trigger function:
None


Desire 7: The agent's long term goal is to efficiently gather all parcels and keys while maintaining sufficient energy by utilizing batteries, and strategically opening doors to optimize navigation through the environment.
    Intention ID: [26]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or key to pick it up, preserving energy by moving towards the nearest battery if energy is low.
                def function_26():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        parcels = belief_set['parcels']
                        keys = belief_set['keys']
                        if parcels or keys:
                            function_5()
                        else:
                            function_11()
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is to move the agent to a cell containing parcels, pick up the parcels, and then move to the nearest delivery cell to drop off the parcels.
                def function_27():
                    global belief_set
                    parcel_location = next((parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None), None)
                    if belief_set['agent'][1]['coordinates'] == parcel_location:
                        function_5()
                    elif belief_set['agent'][1]['coordinates'][0] < parcel_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > parcel_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < parcel_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > parcel_location[1]:
                        function_3()
                    delivery_cell_location = next((cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'),
                        None)
                    if belief_set['agent'][1]['coordinates'] == delivery_cell_location:
                        function_6()
                    elif belief_set['agent'][1]['coordinates'][0] < delivery_cell_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > delivery_cell_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < delivery_cell_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > delivery_cell_location[1]:
                        function_3()
                
    Intention ID: [28]
    Executable: False
    Description: The short term goal is to move towards the nearest parcel, pick it up and then head to the nearest delivery cell to drop it off, while ensuring the agent has enough energy.
                def function_28():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    delivery_coords = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent['coordinates'] != parcel_coords[0]:
                        if agent['coordinates'][0] < parcel_coords[0][0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coords[0][0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coords[0][1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coords[0][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != delivery_coords:
                        if agent['coordinates'][0] < delivery_coords[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_coords[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_coords[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_coords[1]:
                            function_3()
                    function_6()
                    if agent['energy'] < 30:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 8: The agent's long term goal is to acquire all available keys, unlock the doors, and ensure the efficient collection of all parcels, while maintaining energy levels by utilizing available batteries in the environment.
Executable: False
Trigger function:
None



2024-11-08 11:01:13,755 - INFO - Testing intention 
def function():
    global belief_set
    parcels = belief_set['parcels']
    agent = belief_set['agent'][1]
    min_distance = float('inf')
    nearest_parcel_coordinates = None
    for parcel_id, parcel_info in parcels.items():
        if parcel_info['carried_by_id'] is None:
            parcel_coordinates = parcel_info['coordinates']
            distance = abs(agent['coordinates'][0] - parcel_coordinates[0]) + abs(agent['coordinates'][1] - parcel_coordinates[1])
            if distance < min_distance:
                min_distance = distance
                nearest_parcel_coordinates = parcel_coordinates
    if nearest_parcel_coordinates is not None:
        if agent['coordinates'][0] > nearest_parcel_coordinates[0]:
            function_1()
        elif agent['coordinates'][0] < nearest_parcel_coordinates[0]:
            function_2()
        elif agent['coordinates'][1] > nearest_parcel_coordinates[1]:
            function_3()
        elif agent['coordinates'][1] < nearest_parcel_coordinates[1]:
            function_4()
        elif agent['coordinates'] == nearest_parcel_coordinates:
            function_5()
    else:
        function_16()
2024-11-08 11:01:13,780 - INFO - The intention is valid.
2024-11-08 11:01:13,811 - INFO - Intention added to desire 8
2024-11-08 11:01:13,867 - INFO - Running intention 29 ...
2024-11-08 11:01:14,096 - INFO - Belief set thread started ...
2024-11-08 11:01:14,145 - INFO - Plan thread started ...
2024-11-08 11:01:14,152 - INFO - Started subprocess...
2024-11-08 11:01:14,152 - INFO - Belief set before intention 29 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [3, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 93}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [3, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:14,461 - INFO - Executing action action_1 ...
2024-11-08 11:01:14,704 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}]
2024-11-08 11:01:15,095 - INFO - Belief set thread terminated.
2024-11-08 11:01:15,120 - INFO - Plan thread terminated.
2024-11-08 11:01:15,152 - INFO - Intention 29 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}]]
2024-11-08 11:01:15,169 - INFO - Belief set after intention 29 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 92}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:19,279 - INFO - Invalidating intention 29 ...
2024-11-08 11:01:31,137 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    batteries = belief_set['batteries']
    if agent['energy'] < 30:
        function_16()
    else:
        if len(agent['parcels_carried_ids']) == 0:
            nearest_parcel = min(parcels, key=lambda x: abs(agent['coordinates'][0] - parcels[x]['coordinates'][0]) + abs(agent['coordinates'][1] - parcels[x]['coordinates'][1]))
            parcel_coordinates = parcels[nearest_parcel]['coordinates']
            if agent['coordinates'][0] < parcel_coordinates[0]:
                function_2()
            elif agent['coordinates'][0] > parcel_coordinates[0]:
                function_1()
            elif agent['coordinates'][1] < parcel_coordinates[1]:
                function_4()
            elif agent['coordinates'][1] > parcel_coordinates[1]:
                function_3()
            function_5()
        else:
            function_14()
            function_6()
2024-11-08 11:01:31,149 - INFO - The intention is valid.
2024-11-08 11:01:31,175 - INFO - Intention added to desire 8
2024-11-08 11:01:31,180 - INFO - Running intention 30 ...
2024-11-08 11:01:31,359 - INFO - Belief set thread started ...
2024-11-08 11:01:31,372 - INFO - Plan thread started ...
2024-11-08 11:01:31,384 - INFO - Started subprocess...
2024-11-08 11:01:31,384 - INFO - Belief set before intention 30 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 92}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:31,679 - INFO - Executing action action_5 ...
2024-11-08 11:01:31,905 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 91}}]
2024-11-08 11:01:32,218 - INFO - Belief set thread terminated.
2024-11-08 11:01:32,249 - INFO - Plan thread terminated.
2024-11-08 11:01:32,287 - INFO - Intention 30 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 91}}]]
2024-11-08 11:01:32,319 - INFO - Belief set after intention 30 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 91}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:39,444 - INFO - Invalidating intention 30 ...
2024-11-08 11:01:45,011 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent'][1]['energy'] < 50:
        function_16()
    else:
        if belief_set['agent'][1]['coordinates'] in [i['cell_coordinates'] for i in belief_set['map']['grid'] if i['cell_type'] == 'delivery_cell']:
            function_6()
        else:
            function_13()
2024-11-08 11:01:45,011 - INFO - The intention is valid.
2024-11-08 11:01:45,018 - INFO - Intention added to desire 8
2024-11-08 11:01:45,024 - INFO - Running intention 31 ...
2024-11-08 11:01:45,142 - INFO - Belief set thread started ...
2024-11-08 11:01:45,173 - INFO - Plan thread started ...
2024-11-08 11:01:45,179 - INFO - Started subprocess...
2024-11-08 11:01:45,179 - INFO - Belief set before intention 31 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 91}}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:45,451 - INFO - Executing action action_1 ...
2024-11-08 11:01:45,675 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}}]
2024-11-08 11:01:45,994 - INFO - Plan thread terminated.
2024-11-08 11:01:46,026 - INFO - Belief set thread terminated.
2024-11-08 11:01:46,051 - INFO - Intention 31 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}}]]
2024-11-08 11:01:46,051 - INFO - Belief set after intention 31 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 90}}, 'parcels': {3: {'id': 3, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [1, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:51,580 - INFO - Invalidating intention 31 ...
2024-11-08 11:01:51,598 - INFO - Invalidating intention 1 ...
2024-11-08 11:01:51,599 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 11:01:51,611 - INFO - Invalidating intention 2 ...
2024-11-08 11:01:51,611 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-08 11:01:51,630 - INFO - Invalidating intention 3 ...
2024-11-08 11:01:51,630 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 11:01:51,630 - INFO - Invalidating intention 4 ...
2024-11-08 11:01:51,630 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 11:01:51,630 - INFO - Invalidating intention 5 ...
2024-11-08 11:01:51,630 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-08 11:01:51,636 - INFO - Invalidating intention 16 ...
2024-11-08 11:01:51,636 - INFO - Invalidating intention 22 ...
2024-11-08 11:01:51,649 - INFO - Invalidating intention 23 ...
2024-11-08 11:01:51,649 - INFO - Invalidating intention 26 ...
2024-11-08 11:01:51,649 - INFO - Invalidating intention 28 ...
2024-11-08 11:01:51,649 - INFO - Invalidating intention 29 ...
2024-11-08 11:01:51,649 - INFO - Invalidating intention 30 ...
2024-11-08 11:01:51,649 - INFO - Invalidating intention 31 ...
2024-11-08 11:01:53,479 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 6: The agent's long term goal is to efficiently gather all available parcels, batteries, and keys in the environment while navigating through doors and avoiding obstacles, to maximize the score and maintain optimal energy levels.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel or key, pick them up if possible, and if the energy level is below a certain threshold, move the agent towards the nearest battery cell to recharge its energy level.
                def function_23():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        function_14()
                    if 'parcels' in belief_set and agent['coordinates'] in [parcel[
                        'coordinates'] for parcel in belief_set['parcels'].values()]:
                        function_5()
                    if 'keys' in belief_set and agent['coordinates'] == belief_set['keys'][2][
                        'coordinates']:
                        function_5()
                
    Intention ID: [24]
    Executable: False
    Description: The short term goal is to move the agent to the nearest parcel while preserving energy, pick up the parcel if the agent is already at the parcel's location.
                def function_24():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    if agent_coords in parcel_coords:
                        function_5()
                    else:
                        min_distance = float('inf')
                        for coords in parcel_coords:
                            distance = abs(agent_coords[0] - coords[0]) + abs(agent_coords[
                                1] - coords[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel = coords
                        if agent_coords[0] > nearest_parcel[0]:
                            function_1()
                        elif agent_coords[0] < nearest_parcel[0]:
                            function_2()
                        elif agent_coords[1] > nearest_parcel[1]:
                            function_3()
                        elif agent_coords[1] < nearest_parcel[1]:
                            function_4()
                
    Intention ID: [25]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it's on the same cell.
                def function_25():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    min_distance = float('inf')
                    nearest_parcel = None
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is not None:
                            continue
                        distance = abs(agent['coordinates'][0] - parcel['coordinates'][0]
                            ) + abs(agent['coordinates'][1] - parcel['coordinates'][1])
                        if distance < min_distance:
                            min_distance = distance
                            nearest_parcel = parcel
                    if nearest_parcel is not None:
                        if agent['coordinates'] == nearest_parcel['coordinates']:
                            function_5()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                
Executable: False
Trigger function:
None


Desire 7: The agent's long term goal is to efficiently gather all parcels and keys while maintaining sufficient energy by utilizing batteries, and strategically opening doors to optimize navigation through the environment.
    Intention ID: [26]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or key to pick it up, preserving energy by moving towards the nearest battery if energy is low.
                def function_26():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        parcels = belief_set['parcels']
                        keys = belief_set['keys']
                        if parcels or keys:
                            function_5()
                        else:
                            function_11()
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is to move the agent to a cell containing parcels, pick up the parcels, and then move to the nearest delivery cell to drop off the parcels.
                def function_27():
                    global belief_set
                    parcel_location = next((parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None), None)
                    if belief_set['agent'][1]['coordinates'] == parcel_location:
                        function_5()
                    elif belief_set['agent'][1]['coordinates'][0] < parcel_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > parcel_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < parcel_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > parcel_location[1]:
                        function_3()
                    delivery_cell_location = next((cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'),
                        None)
                    if belief_set['agent'][1]['coordinates'] == delivery_cell_location:
                        function_6()
                    elif belief_set['agent'][1]['coordinates'][0] < delivery_cell_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > delivery_cell_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < delivery_cell_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > delivery_cell_location[1]:
                        function_3()
                
    Intention ID: [28]
    Executable: False
    Description: The short term goal is to move towards the nearest parcel, pick it up and then head to the nearest delivery cell to drop it off, while ensuring the agent has enough energy.
                def function_28():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    delivery_coords = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent['coordinates'] != parcel_coords[0]:
                        if agent['coordinates'][0] < parcel_coords[0][0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coords[0][0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coords[0][1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coords[0][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != delivery_coords:
                        if agent['coordinates'][0] < delivery_coords[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_coords[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_coords[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_coords[1]:
                            function_3()
                    function_6()
                    if agent['energy'] < 30:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 8: The agent's long term goal is to acquire all available keys, unlock the doors, and ensure the efficient collection of all parcels, while maintaining energy levels by utilizing available batteries in the environment.
    Intention ID: [29]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it is in the same cell, ensuring energy is preserved during movement.
                def function_29():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    min_distance = float('inf')
                    nearest_parcel_coordinates = None
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['carried_by_id'] is None:
                            parcel_coordinates = parcel_info['coordinates']
                            distance = abs(agent['coordinates'][0] - parcel_coordinates[0]
                                ) + abs(agent['coordinates'][1] - parcel_coordinates[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel_coordinates = parcel_coordinates
                    if nearest_parcel_coordinates is not None:
                        if agent['coordinates'][0] > nearest_parcel_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel_coordinates[1]:
                            function_4()
                        elif agent['coordinates'] == nearest_parcel_coordinates:
                            function_5()
                    else:
                        function_16()
                
    Intention ID: [30]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the nearest delivery cell to drop the parcel. If the agent's energy is low, it should move towards the nearest battery cell to recharge its energy level.
                def function_30():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    batteries = belief_set['batteries']
                    if agent['energy'] < 30:
                        function_16()
                    elif len(agent['parcels_carried_ids']) == 0:
                        nearest_parcel = min(parcels, key=lambda x: abs(agent['coordinates'
                            ][0] - parcels[x]['coordinates'][0]) + abs(agent['coordinates']
                            [1] - parcels[x]['coordinates'][1]))
                        parcel_coordinates = parcels[nearest_parcel]['coordinates']
                        if agent['coordinates'][0] < parcel_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coordinates[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coordinates[1]:
                            function_3()
                        function_5()
                    else:
                        function_14()
                        function_6()
                
    Intention ID: [31]
    Executable: False
    Description: The short term goal is to move the agent to the nearest battery to recharge its energy level, if the energy level is below a certain threshold. If the agent's energy level is above the threshold, the agent will move towards the nearest delivery cell. If the agent reaches a delivery cell, it will drop all the parcels it's carrying.
                def function_31():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_16()
                    elif belief_set['agent'][1]['coordinates'] in [i['cell_coordinates'] for
                        i in belief_set['map']['grid'] if i['cell_type'] == 'delivery_cell']:
                        function_6()
                    else:
                        function_13()
                
Executable: False
Trigger function:
None



2024-11-08 11:01:53,492 - INFO - Running trigger function for desire 2 ...
2024-11-08 11:01:53,492 - INFO - Trigger function for desire 2 has been executed. Result: True
2024-11-08 11:01:53,492 - INFO - Desire 2 could be triggered. Adding it to the list...
2024-11-08 11:01:53,492 - INFO - Desires triggered: [2]. Now randomly choosing which one to run.
2024-11-08 11:01:53,492 - INFO - Desire 2 was randomly chosen. Desire 2 has been triggered.
2024-11-08 11:01:53,492 - INFO - Desire 2 is about to be executed ...
2024-11-08 11:01:53,492 - INFO - Executing all valid intentions for desire 2 ...
2024-11-08 11:01:53,492 - INFO - Executing intention 11 ...
2024-11-08 11:01:53,511 - INFO - Running intention 11 ...
2024-11-08 11:01:53,667 - INFO - Belief set thread started ...
2024-11-08 11:01:53,722 - INFO - Plan thread started ...
2024-11-08 11:01:53,729 - INFO - Started subprocess...
2024-11-08 11:01:53,729 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 90}}, 'parcels': {3: {'id': 3, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [1, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:53,993 - INFO - Executing action action_1 ...
2024-11-08 11:01:54,224 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 89}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-08 11:01:54,592 - INFO - Plan thread terminated.
2024-11-08 11:01:54,628 - INFO - Belief set thread terminated.
2024-11-08 11:01:54,672 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 89}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 3], 'carried_by_id': 1}}]]
2024-11-08 11:01:54,672 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 89}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:54,672 - INFO - Intention 11 has been executed with plan ['action_1'] and events [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 89}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 3], 'carried_by_id': 1}}]].
2024-11-08 11:01:54,672 - INFO - Executing intention 13 ...
2024-11-08 11:01:54,672 - INFO - Running intention 13 ...
2024-11-08 11:01:54,867 - INFO - Belief set thread started ...
2024-11-08 11:01:54,880 - INFO - Plan thread started ...
2024-11-08 11:01:54,892 - INFO - Started subprocess...
2024-11-08 11:01:54,892 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 89}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:55,149 - INFO - Executing action action_3 ...
2024-11-08 11:01:55,356 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]
2024-11-08 11:01:55,631 - INFO - Plan thread terminated.
2024-11-08 11:01:55,675 - INFO - Belief set thread terminated.
2024-11-08 11:01:55,700 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: ['action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]]
2024-11-08 11:01:55,700 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 88}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:55,700 - INFO - Intention 13 has been executed with plan ['action_3'] and events [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]].
2024-11-08 11:01:55,700 - INFO - Executing intention 14 ...
2024-11-08 11:01:55,700 - INFO - Running intention 14 ...
2024-11-08 11:01:55,888 - INFO - Belief set thread started ...
2024-11-08 11:01:55,901 - INFO - Plan thread started ...
2024-11-08 11:01:55,926 - INFO - Started subprocess...
2024-11-08 11:01:55,926 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 88}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:56,196 - INFO - Executing action action_3 ...
2024-11-08 11:01:56,403 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 87}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-08 11:01:56,775 - INFO - Plan thread terminated.
2024-11-08 11:01:56,832 - INFO - Belief set thread terminated.
2024-11-08 11:01:56,862 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 87}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}]]
2024-11-08 11:01:56,862 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 87}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:01:56,862 - INFO - Intention 14 has been executed with plan ['action_3'] and events [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 87}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}]].
2024-11-08 11:01:57,886 - INFO - Invalidating desire 2 ...
2024-11-08 11:02:02,453 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 6: The agent's long term goal is to efficiently gather all available parcels, batteries, and keys in the environment while navigating through doors and avoiding obstacles, to maximize the score and maintain optimal energy levels.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel or key, pick them up if possible, and if the energy level is below a certain threshold, move the agent towards the nearest battery cell to recharge its energy level.
                def function_23():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        function_14()
                    if 'parcels' in belief_set and agent['coordinates'] in [parcel[
                        'coordinates'] for parcel in belief_set['parcels'].values()]:
                        function_5()
                    if 'keys' in belief_set and agent['coordinates'] == belief_set['keys'][2][
                        'coordinates']:
                        function_5()
                
    Intention ID: [24]
    Executable: False
    Description: The short term goal is to move the agent to the nearest parcel while preserving energy, pick up the parcel if the agent is already at the parcel's location.
                def function_24():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    if agent_coords in parcel_coords:
                        function_5()
                    else:
                        min_distance = float('inf')
                        for coords in parcel_coords:
                            distance = abs(agent_coords[0] - coords[0]) + abs(agent_coords[
                                1] - coords[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel = coords
                        if agent_coords[0] > nearest_parcel[0]:
                            function_1()
                        elif agent_coords[0] < nearest_parcel[0]:
                            function_2()
                        elif agent_coords[1] > nearest_parcel[1]:
                            function_3()
                        elif agent_coords[1] < nearest_parcel[1]:
                            function_4()
                
    Intention ID: [25]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it's on the same cell.
                def function_25():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    min_distance = float('inf')
                    nearest_parcel = None
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is not None:
                            continue
                        distance = abs(agent['coordinates'][0] - parcel['coordinates'][0]
                            ) + abs(agent['coordinates'][1] - parcel['coordinates'][1])
                        if distance < min_distance:
                            min_distance = distance
                            nearest_parcel = parcel
                    if nearest_parcel is not None:
                        if agent['coordinates'] == nearest_parcel['coordinates']:
                            function_5()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                
Executable: False
Trigger function:
None


Desire 7: The agent's long term goal is to efficiently gather all parcels and keys while maintaining sufficient energy by utilizing batteries, and strategically opening doors to optimize navigation through the environment.
    Intention ID: [26]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or key to pick it up, preserving energy by moving towards the nearest battery if energy is low.
                def function_26():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        parcels = belief_set['parcels']
                        keys = belief_set['keys']
                        if parcels or keys:
                            function_5()
                        else:
                            function_11()
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is to move the agent to a cell containing parcels, pick up the parcels, and then move to the nearest delivery cell to drop off the parcels.
                def function_27():
                    global belief_set
                    parcel_location = next((parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None), None)
                    if belief_set['agent'][1]['coordinates'] == parcel_location:
                        function_5()
                    elif belief_set['agent'][1]['coordinates'][0] < parcel_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > parcel_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < parcel_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > parcel_location[1]:
                        function_3()
                    delivery_cell_location = next((cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'),
                        None)
                    if belief_set['agent'][1]['coordinates'] == delivery_cell_location:
                        function_6()
                    elif belief_set['agent'][1]['coordinates'][0] < delivery_cell_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > delivery_cell_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < delivery_cell_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > delivery_cell_location[1]:
                        function_3()
                
    Intention ID: [28]
    Executable: False
    Description: The short term goal is to move towards the nearest parcel, pick it up and then head to the nearest delivery cell to drop it off, while ensuring the agent has enough energy.
                def function_28():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    delivery_coords = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent['coordinates'] != parcel_coords[0]:
                        if agent['coordinates'][0] < parcel_coords[0][0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coords[0][0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coords[0][1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coords[0][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != delivery_coords:
                        if agent['coordinates'][0] < delivery_coords[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_coords[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_coords[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_coords[1]:
                            function_3()
                    function_6()
                    if agent['energy'] < 30:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 8: The agent's long term goal is to acquire all available keys, unlock the doors, and ensure the efficient collection of all parcels, while maintaining energy levels by utilizing available batteries in the environment.
    Intention ID: [29]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it is in the same cell, ensuring energy is preserved during movement.
                def function_29():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    min_distance = float('inf')
                    nearest_parcel_coordinates = None
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['carried_by_id'] is None:
                            parcel_coordinates = parcel_info['coordinates']
                            distance = abs(agent['coordinates'][0] - parcel_coordinates[0]
                                ) + abs(agent['coordinates'][1] - parcel_coordinates[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel_coordinates = parcel_coordinates
                    if nearest_parcel_coordinates is not None:
                        if agent['coordinates'][0] > nearest_parcel_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel_coordinates[1]:
                            function_4()
                        elif agent['coordinates'] == nearest_parcel_coordinates:
                            function_5()
                    else:
                        function_16()
                
    Intention ID: [30]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the nearest delivery cell to drop the parcel. If the agent's energy is low, it should move towards the nearest battery cell to recharge its energy level.
                def function_30():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    batteries = belief_set['batteries']
                    if agent['energy'] < 30:
                        function_16()
                    elif len(agent['parcels_carried_ids']) == 0:
                        nearest_parcel = min(parcels, key=lambda x: abs(agent['coordinates'
                            ][0] - parcels[x]['coordinates'][0]) + abs(agent['coordinates']
                            [1] - parcels[x]['coordinates'][1]))
                        parcel_coordinates = parcels[nearest_parcel]['coordinates']
                        if agent['coordinates'][0] < parcel_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coordinates[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coordinates[1]:
                            function_3()
                        function_5()
                    else:
                        function_14()
                        function_6()
                
    Intention ID: [31]
    Executable: False
    Description: The short term goal is to move the agent to the nearest battery to recharge its energy level, if the energy level is below a certain threshold. If the agent's energy level is above the threshold, the agent will move towards the nearest delivery cell. If the agent reaches a delivery cell, it will drop all the parcels it's carrying.
                def function_31():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_16()
                    elif belief_set['agent'][1]['coordinates'] in [i['cell_coordinates'] for
                        i in belief_set['map']['grid'] if i['cell_type'] == 'delivery_cell']:
                        function_6()
                    else:
                        function_13()
                
Executable: False
Trigger function:
None



2024-11-08 11:02:02,478 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-08 11:02:02,485 - INFO - No desire has been triggered.
2024-11-08 11:02:02,485 - INFO - No desire triggered.
2024-11-08 11:02:04,329 - INFO - Desire added: 9. Desires:
Desire 1: The agent should aim to optimize its path in order to collect and deliver as many parcels as possible, while also managing its energy levels efficiently.
    Intention ID: [7]
    Executable: False
    Description: The agent should move towards the nearest parcel, pick it up and deliver it to a specified location
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords[0] < parcel_coords[0]:
                        function_2()
                        agent_coords[0] += 1
                    while agent_coords[1] < parcel_coords[1]:
                        function_4()
                        agent_coords[1] += 1
                    function_5()
                    while agent_coords[0] > 0:
                        function_1()
                        agent_coords[0] -= 1
                    while agent_coords[1] > 0:
                        function_3()
                        agent_coords[1] -= 1
                    function_6()
                
    Intention ID: [8]
    Executable: False
    Description: The agent should aim to move towards the parcels, pick them up, and then move towards the delivery point
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map = belief_set['map']['grid']
                    delivery_point = [cell for cell in map if cell['cell_type'] ==
                        'parcels_spawn'][0]['cell_coordinates']
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is None:
                            if agent['coordinates'] == parcel['coordinates']:
                                function_5()
                            elif agent['coordinates'][0] < parcel['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > parcel['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < parcel['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        elif parcel['carried_by_id'] == agent['id']:
                            if agent['coordinates'] == delivery_point:
                                function_6()
                            elif agent['coordinates'][0] < delivery_point[0]:
                                function_2()
                            elif agent['coordinates'][0] > delivery_point[0]:
                                function_1()
                            elif agent['coordinates'][1] < delivery_point[1]:
                                function_4()
                            else:
                                function_3()
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the parcel spawn location, ensuring it doesn't run out of energy.
                def function_9():
                    global belief_set
                    parcel_spawn_location = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_location = cell['cell_coordinates']
                            break
                    if parcel_spawn_location is not None:
                        agent_location = belief_set['agent'][1]['coordinates']
                        if agent_location[0] < parcel_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcel_spawn_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_spawn_location[1]:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 20:
                            belief_set['agent'][1]['energy'] += 20
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to optimize its path and energy usage in order to deliver all the carried parcels to the designated delivery cells within the environment.
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards the delivery cell while preserving energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    for cell in delivery_cells:
                        if agent['coordinates'][0] > cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < cell[1]:
                            function_4()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the delivery cell while preserving energy.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1]:
                        function_3()
                    elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                        function_4()
                    else:
                        function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent to a cell that is one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_12():
                    global belief_set
                    delivery_cells = [cell['cell_coordinates'] for cell in belief_set['map'
                        ]['grid'] if cell['cell_type'] == 'delivery_cell']
                    agent_position = belief_set['agent'][1]['coordinates']
                    agent_energy = belief_set['agent'][1]['energy']
                    if agent_energy >= 5:
                        for cell in delivery_cells:
                            if cell[0] < agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] - 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_1()
                                break
                            elif cell[0] > agent_position[0] and belief_set['map']['grid'][
                                agent_position[0] + 1][agent_position[1]]['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                            elif cell[1] < agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] - 1]['cell_type'
                                ] == 'walkable':
                                function_3()
                                break
                            elif cell[1] > agent_position[1] and belief_set['map']['grid'][
                                agent_position[0]][agent_position[1] + 1]['cell_type'
                                ] == 'walkable':
                                function_4()
                                break
                
    Intention ID: [13]
    Executable: True
    Description: The short term goal is to move the agent one step closer to the nearest delivery cell, if such a cell is walkable and the agent has enough energy to make the move.
                def function_13():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    delivery_cells.sort(key=lambda x: abs(x['cell_coordinates'][0] -
                        belief_set['agent'][1]['coordinates'][0]) + abs(x[
                        'cell_coordinates'][1] - belief_set['agent'][1]['coordinates'][1]))
                    for cell in delivery_cells:
                        dx = cell['cell_coordinates'][0] - belief_set['agent'][1]['coordinates'
                            ][0]
                        dy = cell['cell_coordinates'][1] - belief_set['agent'][1]['coordinates'
                            ][1]
                        if dx < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_1()
                            break
                        elif dx > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_2()
                            break
                        elif dy < 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_3()
                            break
                        elif dy > 0 and belief_set['agent'][1]['energy'] >= 5:
                            function_4()
                            break
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to move the agent towards the nearest delivery cell while preserving energy. If the agent is already at a delivery cell, it should drop all the parcels it's carrying.
                def function_14():
                    global belief_set
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    if agent['coordinates'] in [cell['cell_coordinates'] for cell in
                        delivery_cells]:
                        function_6()
                    else:
                        function_13()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to strategically locate batteries and plan its route such that it always maintains a high energy level, ensuring its ability to continuously operate and respond to new tasks in the environment.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the battery spawn location in order to recharge its energy levels.
                def function_15():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_spawn_coordinates = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    x_diff = battery_spawn_coordinates[0] - agent_coordinates[0]
                    y_diff = battery_spawn_coordinates[1] - agent_coordinates[1]
                    if x_diff > 0:
                        function_2()
                    elif x_diff < 0:
                        function_1()
                    elif y_diff > 0:
                        function_4()
                    elif y_diff < 0:
                        function_3()
                    if agent_coordinates == battery_spawn_coordinates:
                        function_5()
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is to move the agent to the nearest battery cell to recharge its energy level.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_location = belief_set['batteries'][1]['coordinates']
                    while agent['coordinates'] != battery_location:
                        if agent['coordinates'][0] < battery_location[0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > battery_location[0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < battery_location[1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to strategically explore the environment to locate and acquire keys, which can be used to unlock special cells or items that enhance its performance and overall score.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest key, pick it up if it's in the same cell, and if the agent already has a key, to keep it.
                def function_17():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    key_coords = belief_set['keys'][1]['coordinates']
                    has_key = belief_set['agent'][1]['has_key']
                    if not has_key:
                        if agent_coords[0] > key_coords[0]:
                            function_1()
                        elif agent_coords[0] < key_coords[0]:
                            function_2()
                        elif agent_coords[1] > key_coords[1]:
                            function_3()
                        elif agent_coords[1] < key_coords[1]:
                            function_4()
                        if agent_coords == key_coords:
                            function_5()
                    else:
                        pass
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to guide the agent to move towards the nearest key while maintaining its energy. If the agent is already at a key, it should pick it up.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][1]
                    if agent['coordinates'] == key['coordinates']:
                        function_5()
                    elif agent['coordinates'][0] > key['coordinates'][0]:
                        function_1()
                    elif agent['coordinates'][0] < key['coordinates'][0]:
                        function_2()
                    elif agent['coordinates'][1] > key['coordinates'][1]:
                        function_3()
                    else:
                        function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the key, pick up the key, and then move down one cell.
                def function_19():
                    global belief_set
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] > key_coordinates[0]:
                        function_1()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[0] < key_coordinates[0]:
                        function_2()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] > key_coordinates[1]:
                        function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates[1] < key_coordinates[1]:
                        function_4()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    function_4()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    keys = belief_set['keys']
    for key in keys.values():
        if key['carried_by_id'] is None:
            return True
    if not agent['has_key']:
        return True
    return False



Desire 5: The agent's long term goal is to maintain its energy levels by locating and acquiring batteries, and to use the keys it carries to unlock doors, therefore accessing new areas of the environment for further exploration and parcel delivery.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to move towards the door by adjusting its coordinates in the environment, if the agent already has a key, it should attempt to unlock the door to access new areas.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    door = belief_set['doors'][1]
                    if agent['has_key']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        if agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to move the agent to the nearest door and attempt to open it if the agent has a key. If the agent does not have a key, it should then move towards the nearest key.
                def function_21():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key']:
                        door_coordinates = belief_set['doors'][1]['coordinates']
                        if agent['coordinates'][0] < door_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > door_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < door_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                    else:
                        key_coordinates = belief_set['keys'][1]['coordinates']
                        if agent['coordinates'][0] < key_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > key_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < key_coordinates[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if it possesses a key and has enough energy.
                def function_22():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['has_key'] and agent['energy'] > 10:
                        door = belief_set['doors'][1]
                        if agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                    elif agent['energy'] <= 10:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 6: The agent's long term goal is to efficiently gather all available parcels, batteries, and keys in the environment while navigating through doors and avoiding obstacles, to maximize the score and maintain optimal energy levels.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel or key, pick them up if possible, and if the energy level is below a certain threshold, move the agent towards the nearest battery cell to recharge its energy level.
                def function_23():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        function_14()
                    if 'parcels' in belief_set and agent['coordinates'] in [parcel[
                        'coordinates'] for parcel in belief_set['parcels'].values()]:
                        function_5()
                    if 'keys' in belief_set and agent['coordinates'] == belief_set['keys'][2][
                        'coordinates']:
                        function_5()
                
    Intention ID: [24]
    Executable: False
    Description: The short term goal is to move the agent to the nearest parcel while preserving energy, pick up the parcel if the agent is already at the parcel's location.
                def function_24():
                    global belief_set
                    agent_coords = belief_set['agent'][1]['coordinates']
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    if agent_coords in parcel_coords:
                        function_5()
                    else:
                        min_distance = float('inf')
                        for coords in parcel_coords:
                            distance = abs(agent_coords[0] - coords[0]) + abs(agent_coords[
                                1] - coords[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel = coords
                        if agent_coords[0] > nearest_parcel[0]:
                            function_1()
                        elif agent_coords[0] < nearest_parcel[0]:
                            function_2()
                        elif agent_coords[1] > nearest_parcel[1]:
                            function_3()
                        elif agent_coords[1] < nearest_parcel[1]:
                            function_4()
                
    Intention ID: [25]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it's on the same cell.
                def function_25():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    min_distance = float('inf')
                    nearest_parcel = None
                    for parcel_id, parcel in parcels.items():
                        if parcel['carried_by_id'] is not None:
                            continue
                        distance = abs(agent['coordinates'][0] - parcel['coordinates'][0]
                            ) + abs(agent['coordinates'][1] - parcel['coordinates'][1])
                        if distance < min_distance:
                            min_distance = distance
                            nearest_parcel = parcel
                    if nearest_parcel is not None:
                        if agent['coordinates'] == nearest_parcel['coordinates']:
                            function_5()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel['coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                
Executable: False
Trigger function:
None


Desire 7: The agent's long term goal is to efficiently gather all parcels and keys while maintaining sufficient energy by utilizing batteries, and strategically opening doors to optimize navigation through the environment.
    Intention ID: [26]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or key to pick it up, preserving energy by moving towards the nearest battery if energy is low.
                def function_26():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        function_16()
                    else:
                        parcels = belief_set['parcels']
                        keys = belief_set['keys']
                        if parcels or keys:
                            function_5()
                        else:
                            function_11()
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is to move the agent to a cell containing parcels, pick up the parcels, and then move to the nearest delivery cell to drop off the parcels.
                def function_27():
                    global belief_set
                    parcel_location = next((parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None), None)
                    if belief_set['agent'][1]['coordinates'] == parcel_location:
                        function_5()
                    elif belief_set['agent'][1]['coordinates'][0] < parcel_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > parcel_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < parcel_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > parcel_location[1]:
                        function_3()
                    delivery_cell_location = next((cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'),
                        None)
                    if belief_set['agent'][1]['coordinates'] == delivery_cell_location:
                        function_6()
                    elif belief_set['agent'][1]['coordinates'][0] < delivery_cell_location[0]:
                        function_2()
                    elif belief_set['agent'][1]['coordinates'][0] > delivery_cell_location[0]:
                        function_1()
                    elif belief_set['agent'][1]['coordinates'][1] < delivery_cell_location[1]:
                        function_4()
                    elif belief_set['agent'][1]['coordinates'][1] > delivery_cell_location[1]:
                        function_3()
                
    Intention ID: [28]
    Executable: False
    Description: The short term goal is to move towards the nearest parcel, pick it up and then head to the nearest delivery cell to drop it off, while ensuring the agent has enough energy.
                def function_28():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcel_coords = [parcel['coordinates'] for parcel in belief_set[
                        'parcels'].values() if parcel['carried_by_id'] is None]
                    delivery_coords = [cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent['coordinates'] != parcel_coords[0]:
                        if agent['coordinates'][0] < parcel_coords[0][0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coords[0][0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coords[0][1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coords[0][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != delivery_coords:
                        if agent['coordinates'][0] < delivery_coords[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_coords[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_coords[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_coords[1]:
                            function_3()
                    function_6()
                    if agent['energy'] < 30:
                        function_16()
                
Executable: False
Trigger function:
None


Desire 8: The agent's long term goal is to acquire all available keys, unlock the doors, and ensure the efficient collection of all parcels, while maintaining energy levels by utilizing available batteries in the environment.
    Intention ID: [29]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel and pick it up if it is in the same cell, ensuring energy is preserved during movement.
                def function_29():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    min_distance = float('inf')
                    nearest_parcel_coordinates = None
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['carried_by_id'] is None:
                            parcel_coordinates = parcel_info['coordinates']
                            distance = abs(agent['coordinates'][0] - parcel_coordinates[0]
                                ) + abs(agent['coordinates'][1] - parcel_coordinates[1])
                            if distance < min_distance:
                                min_distance = distance
                                nearest_parcel_coordinates = parcel_coordinates
                    if nearest_parcel_coordinates is not None:
                        if agent['coordinates'][0] > nearest_parcel_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < nearest_parcel_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > nearest_parcel_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < nearest_parcel_coordinates[1]:
                            function_4()
                        elif agent['coordinates'] == nearest_parcel_coordinates:
                            function_5()
                    else:
                        function_16()
                
    Intention ID: [30]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest parcel, pick it up and then move towards the nearest delivery cell to drop the parcel. If the agent's energy is low, it should move towards the nearest battery cell to recharge its energy level.
                def function_30():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    batteries = belief_set['batteries']
                    if agent['energy'] < 30:
                        function_16()
                    elif len(agent['parcels_carried_ids']) == 0:
                        nearest_parcel = min(parcels, key=lambda x: abs(agent['coordinates'
                            ][0] - parcels[x]['coordinates'][0]) + abs(agent['coordinates']
                            [1] - parcels[x]['coordinates'][1]))
                        parcel_coordinates = parcels[nearest_parcel]['coordinates']
                        if agent['coordinates'][0] < parcel_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coordinates[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coordinates[1]:
                            function_3()
                        function_5()
                    else:
                        function_14()
                        function_6()
                
    Intention ID: [31]
    Executable: False
    Description: The short term goal is to move the agent to the nearest battery to recharge its energy level, if the energy level is below a certain threshold. If the agent's energy level is above the threshold, the agent will move towards the nearest delivery cell. If the agent reaches a delivery cell, it will drop all the parcels it's carrying.
                def function_31():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_16()
                    elif belief_set['agent'][1]['coordinates'] in [i['cell_coordinates'] for
                        i in belief_set['map']['grid'] if i['cell_type'] == 'delivery_cell']:
                        function_6()
                    else:
                        function_13()
                
Executable: False
Trigger function:
None


Desire 9: The agent should aim to gather as many parcels as possible, deliver them to the designated delivery cell, while maintaining its energy level by picking up batteries when needed and using keys to unlock doors that block its path.
Executable: False
Trigger function:
None



2024-11-08 11:02:15,068 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    if agent['coordinates'] == delivery_cell['cell_coordinates']:
        function_6()
    elif agent['energy'] < 20:
        battery = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
        if agent['coordinates'][0] < battery['cell_coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > battery['cell_coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < battery['cell_coordinates'][1]:
            function_4()
        else:
            function_3()
    else:
        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
            function_4()
        else:
            function_3()
2024-11-08 11:02:15,094 - INFO - The intention is valid.
2024-11-08 11:02:15,113 - INFO - Intention added to desire 9
2024-11-08 11:02:15,137 - INFO - Running intention 32 ...
2024-11-08 11:02:15,319 - INFO - Belief set thread started ...
2024-11-08 11:02:15,326 - INFO - Plan thread started ...
2024-11-08 11:02:15,332 - INFO - Started subprocess...
2024-11-08 11:02:15,370 - INFO - Belief set before intention 32 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 87}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:02:15,677 - INFO - Executing action action_3 ...
2024-11-08 11:02:15,921 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 86}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-08 11:02:16,245 - INFO - Belief set thread terminated.
2024-11-08 11:02:16,289 - INFO - Plan thread terminated.
2024-11-08 11:02:16,289 - INFO - Intention 32 execution has finished. Threads and subprocess terminated. Plan: ['action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 86}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}]]
2024-11-08 11:02:16,289 - INFO - Belief set after intention 32 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 86}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:02:22,026 - INFO - Invalidating intention 32 ...
2024-11-08 11:02:26,611 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent'][1]['coordinates'] == [0, 0]:
        function_6()
    elif belief_set['agent'][1]['energy'] < 20:
        function_14()
    else:
        function_13()
2024-11-08 11:02:26,611 - INFO - The intention is valid.
2024-11-08 11:02:26,611 - INFO - Intention added to desire 9
2024-11-08 11:02:26,624 - INFO - Running intention 33 ...
2024-11-08 11:02:26,793 - INFO - Belief set thread started ...
2024-11-08 11:02:26,812 - INFO - Plan thread started ...
2024-11-08 11:02:26,856 - INFO - Started subprocess...
2024-11-08 11:02:26,881 - INFO - Belief set before intention 33 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 86}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:02:27,140 - INFO - Executing action action_6 ...
2024-11-08 11:02:27,354 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}]
2024-11-08 11:02:27,726 - INFO - Belief set thread terminated.
2024-11-08 11:02:27,739 - INFO - Plan thread terminated.
2024-11-08 11:02:27,764 - INFO - Intention 33 execution has finished. Threads and subprocess terminated. Plan: ['action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}]]
2024-11-08 11:02:27,764 - INFO - Belief set after intention 33 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}}, 'parcels': {}, 'batteries': {2: {'coordinates': [3, 2]}}, 'keys': {2: {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 11:02:32,087 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent'][1]
    if len(agent['parcels_carried_ids']) > 0 or agent['has_key'] or agent['energy'] > 50:
        return True
    return False
2024-11-08 11:02:32,100 - INFO - The trigger function is valid.
2024-11-08 11:02:32,100 - INFO - Trigger function added to desire 9.
