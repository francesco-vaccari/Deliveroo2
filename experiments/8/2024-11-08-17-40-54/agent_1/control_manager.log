2024-11-08 17:40:58,588 - INFO - Loading actions from agent_dir/actions.json ...
2024-11-08 17:40:58,642 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-11-08 17:41:40,699 - INFO - Desire added: 1. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
Executable: False
Trigger function:
None



2024-11-08 17:41:47,491 - INFO - Testing intention 
def function():
    global belief_set
    spawn_point = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
    while belief_set['agent']['coordinates'] != spawn_point:
        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
            function_2()
        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
            function_1()
        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
            function_4()
        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
            function_3()
    function_5()
2024-11-08 17:41:47,491 - INFO - The intention is valid.
2024-11-08 17:41:47,497 - INFO - Intention added to desire 1
2024-11-08 17:41:47,504 - INFO - Running intention 7 ...
2024-11-08 17:41:47,666 - INFO - Belief set thread started ...
2024-11-08 17:41:47,673 - INFO - Plan thread started ...
2024-11-08 17:41:47,679 - INFO - Started subprocess...
2024-11-08 17:41:47,679 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}, 'parcels': {1: {'id': 1, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}}
2024-11-08 17:41:47,949 - INFO - Executing action action_2 ...
2024-11-08 17:41:48,181 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}]
2024-11-08 17:41:48,474 - INFO - Executing action action_2 ...
2024-11-08 17:41:48,702 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-08 17:41:49,066 - INFO - Executing action action_4 ...
2024-11-08 17:41:49,307 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 97}}]
2024-11-08 17:41:49,638 - INFO - Executing action action_4 ...
2024-11-08 17:41:49,851 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}]
2024-11-08 17:41:50,227 - INFO - Executing action action_4 ...
2024-11-08 17:41:50,523 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 95}}]
2024-11-08 17:41:50,860 - INFO - Executing action action_5 ...
2024-11-08 17:41:51,092 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 94}}]
2024-11-08 17:41:51,401 - INFO - Plan thread terminated.
2024-11-08 17:41:51,432 - INFO - Belief set thread terminated.
2024-11-08 17:41:51,469 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 97}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 95}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 94}}]]
2024-11-08 17:41:51,469 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 94}, 'parcels': {1: {'id': 1, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 17:41:56,599 - INFO - Testing trigger function 
def should_pursue_goal(belief_set): 
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent']['parcels_carried_ids']) < 5: 
        for parcel in belief_set['parcels'].values(): 
            if parcel['carried_by_id'] is None: 
                return True 
    return False
2024-11-08 17:41:56,599 - INFO - The trigger function is valid.
2024-11-08 17:41:56,600 - INFO - Trigger function added to desire 1.
2024-11-08 17:42:07,041 - INFO - Desire added: 2. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
Executable: False
Trigger function:
None



2024-11-08 17:42:16,977 - INFO - Testing intention 
def function():
    global belief_set
    current_cell = belief_set['agent']['coordinates']
    # Check the cell above
    if {'cell_coordinates': [current_cell[0]-1, current_cell[1]], 'cell_type': 'walkable'} in belief_set['map']['grid']:
        function_1()
    # Check the cell below
    elif {'cell_coordinates': [current_cell[0]+1, current_cell[1]], 'cell_type': 'walkable'} in belief_set['map']['grid']:
        function_2()
    # Check the cell to the left
    elif {'cell_coordinates': [current_cell[0], current_cell[1]-1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
        function_3()
    # Check the cell to the right
    elif {'cell_coordinates': [current_cell[0], current_cell[1]+1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
        function_4()
    # Check for parcels in the new cell
    for parcel in belief_set['parcels'].values():
        if parcel['coordinates'] == belief_set['agent']['coordinates']:
            function_5()
2024-11-08 17:42:16,984 - INFO - The intention is valid.
2024-11-08 17:42:16,991 - INFO - Intention added to desire 2
2024-11-08 17:42:16,997 - INFO - Running intention 8 ...
2024-11-08 17:42:17,127 - INFO - Belief set thread started ...
2024-11-08 17:42:17,133 - INFO - Plan thread started ...
2024-11-08 17:42:17,139 - INFO - Started subprocess...
2024-11-08 17:42:17,164 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 94}, 'parcels': {1: {'id': 1, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 17:42:17,476 - INFO - Executing action action_1 ...
2024-11-08 17:42:17,732 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 93}}]
2024-11-08 17:42:18,066 - INFO - Executing action action_5 ...
2024-11-08 17:42:18,292 - INFO - Action action_5 executed. Events received: []
2024-11-08 17:42:18,587 - INFO - Executing action action_5 ...
2024-11-08 17:42:18,830 - INFO - Action action_5 executed. Events received: []
2024-11-08 17:42:19,246 - INFO - Plan thread terminated.
2024-11-08 17:42:19,258 - INFO - Belief set thread terminated.
2024-11-08 17:42:19,277 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 93}}], [], []]
2024-11-08 17:42:19,277 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 93}, 'parcels': {1: {'id': 1, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [1, 3], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 17:42:23,759 - INFO - Invalidating intention 8 ...
2024-11-08 17:42:29,294 - INFO - Testing intention 
def function():
    global belief_set
    current_coords = belief_set['agent']['coordinates']
    new_coords = [current_coords[0]-1, current_coords[1]]
    for cell in belief_set['map']['grid']:
        if cell['cell_coordinates'] == new_coords and cell['cell_type'] == 'walkable':
            if belief_set['agent']['energy'] > 10:
                function_1()
                break
2024-11-08 17:42:29,319 - INFO - The intention is valid.
2024-11-08 17:42:29,332 - INFO - Intention added to desire 2
2024-11-08 17:42:29,344 - INFO - Running intention 9 ...
2024-11-08 17:42:29,473 - INFO - Belief set thread started ...
2024-11-08 17:42:29,491 - INFO - Plan thread started ...
2024-11-08 17:42:29,535 - INFO - Started subprocess...
2024-11-08 17:42:29,535 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 93}, 'parcels': {1: {'id': 1, 'coordinates': [1, 3], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [1, 3], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 17:42:29,913 - INFO - Executing action action_1 ...
2024-11-08 17:42:30,180 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 92}}]
2024-11-08 17:42:30,500 - INFO - Belief set thread terminated.
2024-11-08 17:42:30,543 - INFO - Plan thread terminated.
2024-11-08 17:42:30,556 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 92}}]]
2024-11-08 17:42:30,556 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 92}, 'parcels': {1: {'id': 1, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 17:42:43,228 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    map_grid = belief_set['map']['grid']
    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] == 'delivery_cell'), None)
    if not delivery_cell:
        return
    delivery_coordinates = delivery_cell['cell_coordinates']
    while agent['coordinates'] != delivery_coordinates and agent['energy'] > 10:
        if agent['coordinates'][0] > delivery_coordinates[0]:
            function_1()
        elif agent['coordinates'][0] < delivery_coordinates[0]:
            function_2()
        elif agent['coordinates'][1] > delivery_coordinates[1]:
            function_3()
        elif agent['coordinates'][1] < delivery_coordinates[1]:
            function_4()
    if agent['coordinates'] == delivery_coordinates and agent['parcels_carried_ids']:
        function_6()

2024-11-08 17:42:43,228 - INFO - The intention is valid.
2024-11-08 17:42:43,229 - INFO - Intention added to desire 2
2024-11-08 17:42:43,242 - INFO - Running intention 10 ...
2024-11-08 17:42:43,348 - INFO - Belief set thread started ...
2024-11-08 17:42:43,348 - INFO - Plan thread started ...
2024-11-08 17:42:43,353 - INFO - Started subprocess...
2024-11-08 17:42:43,353 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 92}, 'parcels': {1: {'id': 1, 'coordinates': [0, 3], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 3], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 17:42:43,655 - INFO - Executing action action_3 ...
2024-11-08 17:42:43,877 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 91}}]
2024-11-08 17:42:44,151 - INFO - Executing action action_3 ...
2024-11-08 17:42:44,369 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 90}}]
2024-11-08 17:42:44,769 - INFO - Executing action action_3 ...
2024-11-08 17:42:45,034 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 89}}]
2024-11-08 17:42:45,322 - INFO - Executing action action_3 ...
2024-11-08 17:42:45,554 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:45,841 - INFO - Executing action action_3 ...
2024-11-08 17:42:46,129 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:46,499 - INFO - Executing action action_3 ...
2024-11-08 17:42:46,710 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:47,017 - INFO - Executing action action_3 ...
2024-11-08 17:42:47,247 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:47,656 - INFO - Executing action action_3 ...
2024-11-08 17:42:47,890 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:48,225 - INFO - Executing action action_3 ...
2024-11-08 17:42:48,439 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:48,753 - INFO - Executing action action_3 ...
2024-11-08 17:42:48,965 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:49,375 - INFO - Executing action action_3 ...
2024-11-08 17:42:49,588 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:49,874 - INFO - Executing action action_3 ...
2024-11-08 17:42:50,080 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:50,409 - INFO - Executing action action_3 ...
2024-11-08 17:42:50,656 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:51,010 - INFO - Executing action action_3 ...
2024-11-08 17:42:51,214 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:51,559 - INFO - Executing action action_3 ...
2024-11-08 17:42:51,770 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:52,146 - INFO - Executing action action_3 ...
2024-11-08 17:42:52,377 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:52,738 - INFO - Executing action action_3 ...
2024-11-08 17:42:52,981 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:53,327 - INFO - Executing action action_3 ...
2024-11-08 17:42:53,595 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:53,931 - INFO - Executing action action_3 ...
2024-11-08 17:42:54,163 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:54,479 - INFO - Executing action action_3 ...
2024-11-08 17:42:54,709 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:55,042 - INFO - Executing action action_3 ...
2024-11-08 17:42:55,284 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:55,632 - INFO - Executing action action_3 ...
2024-11-08 17:42:55,851 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:56,149 - INFO - Executing action action_3 ...
2024-11-08 17:42:56,404 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:56,728 - INFO - Executing action action_3 ...
2024-11-08 17:42:56,945 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:57,292 - INFO - Executing action action_3 ...
2024-11-08 17:42:57,502 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:57,915 - INFO - Executing action action_3 ...
2024-11-08 17:42:58,175 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:42:58,386 - ERROR - Error during intention 10 execution. Intention 10 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 17:42:58,386 - INFO - Belief set thread terminated.
2024-11-08 17:42:58,526 - INFO - Plan thread terminated.
2024-11-08 17:42:58,545 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 91}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 89}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-08 17:42:58,551 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 89}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 17:43:04,948 - INFO - Invalidating intention 10 ...
2024-11-08 17:43:19,759 - INFO - Testing intention 
def function():
    global belief_set
    max_actions = 10
    actions_taken = 0
    while actions_taken < max_actions:
        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set['agent']['parcels_carried_ids']) > 0:
            for cell in belief_set['map']['grid']:
                if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'] == belief_set['agent']['coordinates']:
                    function_6()
                    return
        for cell in belief_set['map']['grid']:
            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'][0] > belief_set['agent']['coordinates'][0] and belief_set['agent']['energy'] > 10:
                function_2()
                actions_taken += 1
            elif cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'][0] < belief_set['agent']['coordinates'][0] and belief_set['agent']['energy'] > 10:
                function_1()
                actions_taken += 1
            elif cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'][1] > belief_set['agent']['coordinates'][1] and belief_set['agent']['energy'] > 10:
                function_4()
                actions_taken += 1
            elif cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'][1] < belief_set['agent']['coordinates'][1] and belief_set['agent']['energy'] > 10:
                function_3()
                actions_taken += 1
        actions_taken += 1
    return
2024-11-08 17:43:19,778 - INFO - The intention is valid.
2024-11-08 17:43:19,791 - INFO - Intention added to desire 2
2024-11-08 17:43:19,804 - INFO - Running intention 11 ...
2024-11-08 17:43:19,948 - INFO - Belief set thread started ...
2024-11-08 17:43:19,973 - INFO - Plan thread started ...
2024-11-08 17:43:20,017 - INFO - Started subprocess...
2024-11-08 17:43:20,067 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 89}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}}
2024-11-08 17:43:20,366 - INFO - Executing action action_4 ...
2024-11-08 17:43:20,640 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 88}}]
2024-11-08 17:43:20,934 - INFO - Executing action action_4 ...
2024-11-08 17:43:21,166 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 87}}]
2024-11-08 17:43:21,468 - INFO - Executing action action_6 ...
2024-11-08 17:43:21,703 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 86}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]
2024-11-08 17:43:22,045 - INFO - Plan thread terminated.
2024-11-08 17:43:22,070 - INFO - Belief set thread terminated.
2024-11-08 17:43:22,096 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 88}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 87}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 86}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}]]
2024-11-08 17:43:22,096 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 86}, 'parcels': {}}
2024-11-08 17:43:27,091 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    map_size = belief_set['map']['width'] * belief_set['map']['height']
    explored_cells = len(belief_set['map']['grid'])
    agent_energy = belief_set['agent']['energy']
    if explored_cells < map_size and agent_energy > 0:
        return True
    else:
        return False
2024-11-08 17:43:27,091 - ERROR - Trigger function does not return the boolean True for the prior belief set.
2024-11-08 17:43:43,291 - INFO - Desire added: 3. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
Executable: False
Trigger function:
None



2024-11-08 17:43:48,898 - INFO - Testing intention 
def function():
    global belief_set
    agent_coords = belief_set['agent']['coordinates']
    battery_coords = list(belief_set['batteries'].values())[0]
    if agent_coords[0] < battery_coords[0]:
        function_2()
    elif agent_coords[0] > battery_coords[0]:
        function_1()
    elif agent_coords[1] < battery_coords[1]:
        function_4()
    elif agent_coords[1] > battery_coords[1]:
        function_3()
    else:
        function_5()

2024-11-08 17:43:48,911 - INFO - The intention is valid.
2024-11-08 17:43:48,935 - INFO - Intention added to desire 3
2024-11-08 17:43:48,966 - INFO - Running intention 12 ...
2024-11-08 17:43:49,091 - INFO - Belief set thread started ...
2024-11-08 17:43:49,104 - INFO - Plan thread started ...
2024-11-08 17:43:49,104 - INFO - Started subprocess...
2024-11-08 17:43:49,129 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 86}, 'parcels': {}, 'batteries': {1: [2, 2]}}
2024-11-08 17:43:49,392 - INFO - Executing action action_2 ...
2024-11-08 17:43:49,608 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 85}}]
2024-11-08 17:43:49,974 - INFO - Plan thread terminated.
2024-11-08 17:43:49,974 - INFO - Belief set thread terminated.
2024-11-08 17:43:50,018 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 85}}]]
2024-11-08 17:43:50,018 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 85}, 'parcels': {}, 'batteries': {1: [2, 2]}}
2024-11-08 17:43:54,575 - INFO - Invalidating intention 12 ...
2024-11-08 17:44:00,209 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    batteries = belief_set['batteries']
    for battery in batteries.values():
        while agent['coordinates'] != battery:
            if agent['coordinates'][0] < battery[0]:
                function_2()
            elif agent['coordinates'][0] > battery[0]:
                function_1()
            if agent['coordinates'][1] < battery[1]:
                function_4()
            elif agent['coordinates'][1] > battery[1]:
                function_3()
        function_5()
2024-11-08 17:44:00,222 - INFO - The intention is valid.
2024-11-08 17:44:00,229 - INFO - Intention added to desire 3
2024-11-08 17:44:00,248 - INFO - Running intention 13 ...
2024-11-08 17:44:00,505 - INFO - Belief set thread started ...
2024-11-08 17:44:00,511 - INFO - Plan thread started ...
2024-11-08 17:44:00,518 - INFO - Started subprocess...
2024-11-08 17:44:00,530 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 85}, 'parcels': {}, 'batteries': {1: [2, 2]}}
2024-11-08 17:44:00,813 - INFO - Executing action action_2 ...
2024-11-08 17:44:01,055 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 84}}]
2024-11-08 17:44:01,473 - INFO - Executing action action_2 ...
2024-11-08 17:44:01,727 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 83}}]
2024-11-08 17:44:02,009 - INFO - Executing action action_2 ...
2024-11-08 17:44:02,233 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:02,574 - INFO - Executing action action_2 ...
2024-11-08 17:44:02,782 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:03,056 - INFO - Executing action action_2 ...
2024-11-08 17:44:03,267 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:03,547 - INFO - Executing action action_2 ...
2024-11-08 17:44:03,766 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:04,104 - INFO - Executing action action_2 ...
2024-11-08 17:44:04,354 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:04,740 - INFO - Executing action action_2 ...
2024-11-08 17:44:04,958 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:05,316 - INFO - Executing action action_2 ...
2024-11-08 17:44:05,519 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:05,806 - INFO - Executing action action_2 ...
2024-11-08 17:44:06,013 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:06,423 - INFO - Executing action action_2 ...
2024-11-08 17:44:06,659 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:07,008 - INFO - Executing action action_2 ...
2024-11-08 17:44:07,233 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:07,594 - INFO - Executing action action_2 ...
2024-11-08 17:44:07,812 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:08,135 - INFO - Executing action action_2 ...
2024-11-08 17:44:08,376 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:08,701 - INFO - Executing action action_2 ...
2024-11-08 17:44:08,936 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:09,229 - INFO - Executing action action_2 ...
2024-11-08 17:44:09,459 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:09,792 - INFO - Executing action action_2 ...
2024-11-08 17:44:10,022 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:10,340 - INFO - Executing action action_2 ...
2024-11-08 17:44:10,599 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:10,891 - INFO - Executing action action_2 ...
2024-11-08 17:44:11,109 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:11,442 - INFO - Executing action action_2 ...
2024-11-08 17:44:11,679 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:12,036 - INFO - Executing action action_2 ...
2024-11-08 17:44:12,253 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:12,549 - INFO - Executing action action_2 ...
2024-11-08 17:44:12,802 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:13,142 - INFO - Executing action action_2 ...
2024-11-08 17:44:13,367 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:13,660 - INFO - Executing action action_2 ...
2024-11-08 17:44:13,885 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:14,273 - INFO - Executing action action_2 ...
2024-11-08 17:44:14,497 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:14,876 - INFO - Executing action action_2 ...
2024-11-08 17:44:15,107 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:15,438 - INFO - Executing action action_2 ...
2024-11-08 17:44:15,581 - ERROR - Error during intention 13 execution. Intention 13 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 17:44:15,600 - INFO - Belief set thread terminated.
2024-11-08 17:44:15,668 - INFO - Action action_2 executed. Events received: []
2024-11-08 17:44:15,980 - INFO - Plan thread terminated.
2024-11-08 17:44:15,992 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 84}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 83}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-08 17:44:15,992 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 83}, 'parcels': {}, 'batteries': {1: [2, 2]}}
2024-11-08 17:44:20,568 - INFO - Invalidating intention 13 ...
2024-11-08 17:44:28,065 - INFO - Testing intention 
def function():
    global belief_set
    safety_counter = 0
    while belief_set['agent']['coordinates'] != belief_set['batteries'][1] and safety_counter < 100:
        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0]:
            function_1()
        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1][0]:
            function_2()
        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1][1]:
            function_3()
        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1][1]:
            function_4()
        safety_counter += 1
    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
        function_5()
2024-11-08 17:44:28,065 - INFO - The intention is valid.
2024-11-08 17:44:28,066 - INFO - Intention added to desire 3
2024-11-08 17:44:28,078 - INFO - Running intention 14 ...
2024-11-08 17:44:28,189 - INFO - Belief set thread started ...
2024-11-08 17:44:28,246 - INFO - Plan thread started ...
2024-11-08 17:44:28,258 - INFO - Started subprocess...
2024-11-08 17:44:28,258 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [3, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 83}, 'parcels': {}, 'batteries': {1: [2, 2]}}
2024-11-08 17:44:28,540 - INFO - Executing action action_1 ...
2024-11-08 17:44:28,754 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 82}}]
2024-11-08 17:44:29,095 - INFO - Executing action action_5 ...
2024-11-08 17:44:29,304 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [2, 2]}}]
2024-11-08 17:44:29,660 - INFO - Plan thread terminated.
2024-11-08 17:44:29,660 - INFO - Belief set thread terminated.
2024-11-08 17:44:29,692 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 82}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [2, 2]}}]]
2024-11-08 17:44:29,692 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 100}, 'parcels': {}, 'batteries': {}}
2024-11-08 17:44:36,485 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    # If energy level is above 70%, no need to pursue the goal
    if belief_set['agent']['energy'] > 70:
        return False
    # If there are no batteries in the environment, cannot pursue the goal
    if not belief_set['batteries']:
        return False
    # If agent is on a cell where batteries can spawn, pursue the goal
    for cell in belief_set['map']['grid']:
        if cell['cell_coordinates'] == belief_set['agent']['coordinates'] and cell['cell_type'] == 'batteries_spawn':
            return True
    return False
2024-11-08 17:44:36,491 - ERROR - Trigger function does not return the boolean True for the prior belief set.
2024-11-08 17:44:54,401 - INFO - Desire added: 4. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
Executable: False
Trigger function:
None



2024-11-08 17:45:00,438 - INFO - Testing intention 
def function():
    global belief_set
    key_position = belief_set['keys'][1]['coordinates']
    agent_position = belief_set['agent']['coordinates']
    while agent_position != key_position:
        if key_position[0] < agent_position[0]:
            function_1()
        elif key_position[0] > agent_position[0]:
            function_2()
        if key_position[1] < agent_position[1]:
            function_3()
        elif key_position[1] > agent_position[1]:
            function_4()
    function_5()
2024-11-08 17:45:00,438 - INFO - The intention is valid.
2024-11-08 17:45:00,438 - INFO - Intention added to desire 4
2024-11-08 17:45:00,445 - INFO - Running intention 15 ...
2024-11-08 17:45:00,612 - INFO - Belief set thread started ...
2024-11-08 17:45:00,630 - INFO - Plan thread started ...
2024-11-08 17:45:00,654 - INFO - Started subprocess...
2024-11-08 17:45:00,654 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 100}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': None}}}
2024-11-08 17:45:00,942 - INFO - Executing action action_1 ...
2024-11-08 17:45:01,171 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 99}}]
2024-11-08 17:45:01,476 - INFO - Executing action action_3 ...
2024-11-08 17:45:01,724 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 98}}]
2024-11-08 17:45:02,062 - INFO - Executing action action_1 ...
2024-11-08 17:45:02,267 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 97}}]
2024-11-08 17:45:02,549 - INFO - Executing action action_3 ...
2024-11-08 17:45:02,813 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 96}}]
2024-11-08 17:45:03,114 - INFO - Executing action action_1 ...
2024-11-08 17:45:03,369 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:03,698 - INFO - Executing action action_3 ...
2024-11-08 17:45:03,941 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:04,225 - INFO - Executing action action_1 ...
2024-11-08 17:45:04,460 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:04,818 - INFO - Executing action action_3 ...
2024-11-08 17:45:05,129 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:05,439 - INFO - Executing action action_1 ...
2024-11-08 17:45:05,659 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:05,991 - INFO - Executing action action_3 ...
2024-11-08 17:45:06,217 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:06,546 - INFO - Executing action action_1 ...
2024-11-08 17:45:06,765 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:07,170 - INFO - Executing action action_3 ...
2024-11-08 17:45:07,388 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:07,723 - INFO - Executing action action_1 ...
2024-11-08 17:45:07,966 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:08,272 - INFO - Executing action action_3 ...
2024-11-08 17:45:08,483 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:08,817 - INFO - Executing action action_1 ...
2024-11-08 17:45:09,049 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:09,395 - INFO - Executing action action_3 ...
2024-11-08 17:45:09,647 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:10,005 - INFO - Executing action action_1 ...
2024-11-08 17:45:10,248 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:10,552 - INFO - Executing action action_3 ...
2024-11-08 17:45:10,795 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:11,181 - INFO - Executing action action_1 ...
2024-11-08 17:45:11,397 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:11,704 - INFO - Executing action action_3 ...
2024-11-08 17:45:11,929 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:12,341 - INFO - Executing action action_1 ...
2024-11-08 17:45:12,570 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:12,865 - INFO - Executing action action_3 ...
2024-11-08 17:45:13,084 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:13,459 - INFO - Executing action action_1 ...
2024-11-08 17:45:13,695 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:14,006 - INFO - Executing action action_3 ...
2024-11-08 17:45:14,280 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:14,625 - INFO - Executing action action_1 ...
2024-11-08 17:45:14,837 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:15,124 - INFO - Executing action action_3 ...
2024-11-08 17:45:15,344 - INFO - Action action_3 executed. Events received: []
2024-11-08 17:45:15,650 - INFO - Executing action action_1 ...
2024-11-08 17:45:15,675 - ERROR - Error during intention 15 execution. Intention 15 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 17:45:15,713 - INFO - Belief set thread terminated.
2024-11-08 17:45:15,913 - INFO - Action action_1 executed. Events received: []
2024-11-08 17:45:16,232 - INFO - Plan thread terminated.
2024-11-08 17:45:16,239 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 99}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 97}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 96}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-08 17:45:16,239 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 96}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': None}}}
2024-11-08 17:45:21,953 - INFO - Invalidating intention 15 ...
2024-11-08 17:45:30,442 - INFO - Testing intention 
def function():
    global belief_set
    key_coord = belief_set['keys'][1]['coordinates']
    while belief_set['agent']['coordinates'] != key_coord and belief_set['agent']['energy'] > 10:
        if belief_set['agent']['coordinates'][0] < key_coord[0]:
            function_2()
        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
            function_1()
        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
            function_4()
        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
            function_3()
        belief_set['agent']['coordinates'] = key_coord
    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent']['energy'] > 10:
        function_5()
2024-11-08 17:45:30,455 - INFO - The intention is valid.
2024-11-08 17:45:30,493 - INFO - Intention added to desire 4
2024-11-08 17:45:30,493 - INFO - Running intention 16 ...
2024-11-08 17:45:30,661 - INFO - Belief set thread started ...
2024-11-08 17:45:30,673 - INFO - Plan thread started ...
2024-11-08 17:45:30,686 - INFO - Started subprocess...
2024-11-08 17:45:30,692 - INFO - Belief set before intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 96}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': None}}}
2024-11-08 17:45:30,986 - INFO - Executing action action_2 ...
2024-11-08 17:45:31,318 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 95}}]
2024-11-08 17:45:31,630 - INFO - Executing action action_5 ...
2024-11-08 17:45:31,847 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-08 17:45:32,172 - INFO - Belief set thread terminated.
2024-11-08 17:45:32,178 - INFO - Plan thread terminated.
2024-11-08 17:45:32,222 - INFO - Intention 16 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 57, 'energy': 95}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]]
2024-11-08 17:45:32,222 - INFO - Belief set after intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 94}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}}
2024-11-08 17:45:36,346 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'] and len(belief_set['keys']) > 0:
        return True
    return False
2024-11-08 17:45:36,353 - INFO - The trigger function is valid.
2024-11-08 17:45:36,353 - INFO - Trigger function added to desire 4.
2024-11-08 17:45:49,486 - INFO - Desire added: 5. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
Executable: False
Trigger function:
None



2024-11-08 17:45:58,084 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent']['coordinates']
    map_grid = belief_set['map']['grid']
    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] == 'walkable' and cell['cell_coordinates'] not in belief_set['agent']['visited_cells']]
    if belief_set['agent']['energy'] > 10:
        if unexplored_cells:
            next_cell = unexplored_cells[0]
            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                function_1()
            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                function_2()
            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                function_3()
            else:
                function_4()
        else:
            function_5()
    else:
        function_14()
2024-11-08 17:45:58,090 - INFO - The intention is valid.
2024-11-08 17:45:58,141 - INFO - Intention added to desire 5
2024-11-08 17:45:58,154 - INFO - Running intention 17 ...
2024-11-08 17:45:58,283 - INFO - Belief set thread started ...
2024-11-08 17:45:58,302 - INFO - Plan thread started ...
2024-11-08 17:45:58,302 - INFO - Started subprocess...
2024-11-08 17:45:58,314 - INFO - Belief set before intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 94}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:46:13,335 - ERROR - Error during intention 17 execution. Intention 17 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 17:46:13,385 - INFO - Belief set thread terminated.
2024-11-08 17:46:13,435 - INFO - Plan thread terminated.
2024-11-08 17:46:13,454 - INFO - Intention 17 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 17:46:13,461 - INFO - Belief set after intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 94}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:46:19,698 - INFO - Invalidating intention 17 ...
2024-11-08 17:46:24,563 - INFO - Testing intention 
def function():
    global belief_set
    energy_threshold = 30
    energy = belief_set['agent']['energy']
    if energy < energy_threshold:
        function_14() # Navigate towards and collect batteries.
    else:
        function_1() if belief_set['agent']['coordinates'][0] > 0 else function_2()
        function_3() if belief_set['agent']['coordinates'][1] > 0 else function_4()

2024-11-08 17:46:24,564 - INFO - The intention is valid.
2024-11-08 17:46:24,577 - INFO - Intention added to desire 5
2024-11-08 17:46:24,596 - INFO - Running intention 18 ...
2024-11-08 17:46:24,733 - INFO - Belief set thread started ...
2024-11-08 17:46:24,739 - INFO - Plan thread started ...
2024-11-08 17:46:24,739 - INFO - Started subprocess...
2024-11-08 17:46:24,746 - INFO - Belief set before intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 94}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:46:25,103 - INFO - Executing action action_1 ...
2024-11-08 17:46:25,327 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 93}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-08 17:46:25,657 - INFO - Executing action action_4 ...
2024-11-08 17:46:25,883 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-08 17:46:26,188 - INFO - Belief set thread terminated.
2024-11-08 17:46:26,300 - INFO - Plan thread terminated.
2024-11-08 17:46:26,312 - INFO - Intention 18 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 93}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]]
2024-11-08 17:46:26,313 - INFO - Belief set after intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:46:30,310 - INFO - Invalidating intention 18 ...
2024-11-08 17:46:39,924 - INFO - Testing intention 
def function():
    global belief_set
    agent_coords = belief_set['agent']['coordinates']
    if belief_set['agent']['energy'] > 50:
        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0] - 1][agent_coords[1]]['cell_type'] == 'walkable':
            function_1()
        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set['map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'] == 'walkable':
            function_2()
        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]][agent_coords[1] - 1]['cell_type'] == 'walkable':
            function_3()
        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set['map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'] == 'walkable':
            function_4()
    else:
        pass
2024-11-08 17:46:39,944 - INFO - The intention is valid.
2024-11-08 17:46:39,951 - INFO - Intention added to desire 5
2024-11-08 17:46:39,957 - INFO - Running intention 19 ...
2024-11-08 17:46:40,158 - INFO - Belief set thread started ...
2024-11-08 17:46:40,189 - INFO - Plan thread started ...
2024-11-08 17:46:40,208 - INFO - Started subprocess...
2024-11-08 17:46:40,208 - INFO - Belief set before intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:46:55,229 - ERROR - Error during intention 19 execution. Intention 19 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 17:46:55,236 - INFO - Plan thread terminated.
2024-11-08 17:46:55,249 - INFO - Belief set thread terminated.
2024-11-08 17:46:55,280 - INFO - Intention 19 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 17:46:55,293 - INFO - Belief set after intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:47:00,972 - INFO - Invalidating intention 19 ...
2024-11-08 17:47:01,016 - INFO - Invalidating intention 1 ...
2024-11-08 17:47:01,016 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 17:47:01,016 - INFO - Invalidating intention 2 ...
2024-11-08 17:47:01,016 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-08 17:47:01,016 - INFO - Invalidating intention 3 ...
2024-11-08 17:47:01,022 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 17:47:01,022 - INFO - Invalidating intention 4 ...
2024-11-08 17:47:01,022 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 17:47:05,754 - INFO - Desire added: 6. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: True
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
    Intention ID: [17]
    Executable: False
    Description: The agent should move towards the unexplored part of the map, by choosing the next walkable cell, while ensuring it has enough energy to perform the movement. If the agent's energy is below a certain threshold, it should navigate towards the nearest battery to recharge.
                def function_17():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] ==
                        'walkable' and cell['cell_coordinates'] not in belief_set['agent'][
                        'visited_cells']]
                    if belief_set['agent']['energy'] > 10:
                        if unexplored_cells:
                            next_cell = unexplored_cells[0]
                            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                                function_1()
                            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                                function_2()
                            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                                function_3()
                            else:
                                function_4()
                        else:
                            function_5()
                    else:
                        function_14()
                
    Intention ID: [18]
    Executable: False
    Description: The agent's short term goal is to move to the next unexplored cell in the map. If the agent's energy level is below a threshold, the agent should move towards the nearest battery to recharge.
                def function_18():
                    global belief_set
                    energy_threshold = 30
                    energy = belief_set['agent']['energy']
                    if energy < energy_threshold:
                        function_14()
                    else:
                        function_1() if belief_set['agent']['coordinates'][0
                            ] > 0 else function_2()
                        function_3() if belief_set['agent']['coordinates'][1
                            ] > 0 else function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to an adjacent cell, if it's a walkable cell and the agent's energy is above a certain threshold. If the agent's energy goes below this threshold, the agent will stop moving to conserve energy.
                def function_19():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0
                            ] - 1][agent_coords[1]]['cell_type'] == 'walkable':
                            function_1()
                        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'
                            ] == 'walkable':
                            function_2()
                        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]
                            ][agent_coords[1] - 1]['cell_type'] == 'walkable':
                            function_3()
                        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'
                            ] == 'walkable':
                            function_4()
                    else:
                        pass
                
Executable: False
Trigger function:
None


Desire 6: The agent should endeavor to explore the entire map, identifying the locations of all items, while maintaining a high energy level and avoiding any hazards.
Executable: False
Trigger function:
None



2024-11-08 17:47:10,137 - INFO - Testing intention 
def function():
    global belief_set
    while belief_set['agent']['energy'] > 30:
        function_4()
    if belief_set['agent']['energy'] <= 30:
        function_14()
2024-11-08 17:47:10,150 - INFO - The intention is valid.
2024-11-08 17:47:10,175 - INFO - Intention added to desire 6
2024-11-08 17:47:10,200 - INFO - Running intention 20 ...
2024-11-08 17:47:10,509 - INFO - Belief set thread started ...
2024-11-08 17:47:10,509 - INFO - Plan thread started ...
2024-11-08 17:47:10,551 - INFO - Started subprocess...
2024-11-08 17:47:10,570 - INFO - Belief set before intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 92}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:47:10,844 - INFO - Executing action action_4 ...
2024-11-08 17:47:11,114 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 91}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-08 17:47:11,425 - INFO - Executing action action_4 ...
2024-11-08 17:47:11,644 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-08 17:47:11,942 - INFO - Executing action action_4 ...
2024-11-08 17:47:12,177 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:12,497 - INFO - Executing action action_4 ...
2024-11-08 17:47:12,719 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:13,041 - INFO - Executing action action_4 ...
2024-11-08 17:47:13,285 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:13,578 - INFO - Executing action action_4 ...
2024-11-08 17:47:13,802 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:14,133 - INFO - Executing action action_4 ...
2024-11-08 17:47:14,400 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:14,726 - INFO - Executing action action_4 ...
2024-11-08 17:47:14,927 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:15,265 - INFO - Executing action action_4 ...
2024-11-08 17:47:15,494 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:15,842 - INFO - Executing action action_4 ...
2024-11-08 17:47:16,071 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:16,367 - INFO - Executing action action_4 ...
2024-11-08 17:47:16,617 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:16,953 - INFO - Executing action action_4 ...
2024-11-08 17:47:17,221 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:17,556 - INFO - Executing action action_4 ...
2024-11-08 17:47:17,803 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:18,101 - INFO - Executing action action_4 ...
2024-11-08 17:47:18,336 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:18,617 - INFO - Executing action action_4 ...
2024-11-08 17:47:18,834 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:19,159 - INFO - Executing action action_4 ...
2024-11-08 17:47:19,383 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:19,697 - INFO - Executing action action_4 ...
2024-11-08 17:47:19,927 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:20,264 - INFO - Executing action action_4 ...
2024-11-08 17:47:20,474 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:20,800 - INFO - Executing action action_4 ...
2024-11-08 17:47:21,091 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:21,416 - INFO - Executing action action_4 ...
2024-11-08 17:47:21,657 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:21,964 - INFO - Executing action action_4 ...
2024-11-08 17:47:22,188 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:22,502 - INFO - Executing action action_4 ...
2024-11-08 17:47:22,760 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:23,160 - INFO - Executing action action_4 ...
2024-11-08 17:47:23,398 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:23,758 - INFO - Executing action action_4 ...
2024-11-08 17:47:23,987 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:24,378 - INFO - Executing action action_4 ...
2024-11-08 17:47:24,589 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:24,851 - INFO - Executing action action_4 ...
2024-11-08 17:47:25,068 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:25,404 - INFO - Executing action action_4 ...
2024-11-08 17:47:25,604 - ERROR - Error during intention 20 execution. Intention 20 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 17:47:25,617 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:47:25,642 - INFO - Belief set thread terminated.
2024-11-08 17:47:25,903 - INFO - Plan thread terminated.
2024-11-08 17:47:25,916 - INFO - Intention 20 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 91}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-08 17:47:25,950 - INFO - Belief set after intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:47:31,590 - INFO - Invalidating intention 20 ...
2024-11-08 17:47:36,337 - INFO - Testing intention 
def function():
    global belief_set
    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'] - 1 and belief_set['agent']['energy'] > 30:
        function_4()
    if belief_set['agent']['energy'] <= 30:
        function_14()
2024-11-08 17:47:36,337 - INFO - The intention is valid.
2024-11-08 17:47:36,337 - INFO - Intention added to desire 6
2024-11-08 17:47:36,337 - INFO - Running intention 21 ...
2024-11-08 17:47:36,457 - INFO - Belief set thread started ...
2024-11-08 17:47:36,476 - INFO - Plan thread started ...
2024-11-08 17:47:36,494 - INFO - Started subprocess...
2024-11-08 17:47:36,520 - INFO - Belief set before intention 21 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:47:36,804 - INFO - Belief set thread terminated.
2024-11-08 17:47:36,823 - INFO - Plan thread terminated.
2024-11-08 17:47:36,829 - INFO - Intention 21 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 17:47:36,836 - INFO - Belief set after intention 21 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:47:42,886 - INFO - Invalidating intention 21 ...
2024-11-08 17:47:47,686 - INFO - Testing intention 
def function():
    global belief_set
    while belief_set['agent']['coordinates'][1] < belief_set['map']['height']-1 and belief_set['agent']['energy'] >= 30:
        function_4()
    if belief_set['agent']['energy'] < 30:
        function_14()
2024-11-08 17:47:47,698 - INFO - The intention is valid.
2024-11-08 17:47:47,711 - INFO - Intention added to desire 6
2024-11-08 17:47:47,717 - INFO - Running intention 22 ...
2024-11-08 17:47:47,874 - INFO - Belief set thread started ...
2024-11-08 17:47:47,880 - INFO - Plan thread started ...
2024-11-08 17:47:47,886 - INFO - Started subprocess...
2024-11-08 17:47:47,918 - INFO - Belief set before intention 22 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:47:48,240 - INFO - Plan thread terminated.
2024-11-08 17:47:48,264 - INFO - Belief set thread terminated.
2024-11-08 17:47:48,322 - INFO - Intention 22 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 17:47:48,322 - INFO - Belief set after intention 22 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:47:53,355 - INFO - Invalidating intention 22 ...
2024-11-08 17:47:53,355 - INFO - Invalidating intention 1 ...
2024-11-08 17:47:53,355 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 17:47:53,355 - INFO - Invalidating intention 2 ...
2024-11-08 17:47:53,355 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-08 17:47:53,355 - INFO - Invalidating intention 3 ...
2024-11-08 17:47:53,356 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 17:47:53,356 - INFO - Invalidating intention 4 ...
2024-11-08 17:47:53,356 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 17:47:53,356 - INFO - Invalidating intention 5 ...
2024-11-08 17:47:53,356 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-08 17:47:53,356 - INFO - Invalidating intention 14 ...
2024-11-08 17:47:53,356 - INFO - Invalidating intention 17 ...
2024-11-08 17:47:53,356 - INFO - Invalidating intention 18 ...
2024-11-08 17:47:53,356 - INFO - Invalidating intention 20 ...
2024-11-08 17:47:53,356 - INFO - Invalidating intention 21 ...
2024-11-08 17:47:53,361 - INFO - Invalidating intention 22 ...
2024-11-08 17:48:09,103 - INFO - Desire added: 7. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
    Intention ID: [17]
    Executable: False
    Description: The agent should move towards the unexplored part of the map, by choosing the next walkable cell, while ensuring it has enough energy to perform the movement. If the agent's energy is below a certain threshold, it should navigate towards the nearest battery to recharge.
                def function_17():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] ==
                        'walkable' and cell['cell_coordinates'] not in belief_set['agent'][
                        'visited_cells']]
                    if belief_set['agent']['energy'] > 10:
                        if unexplored_cells:
                            next_cell = unexplored_cells[0]
                            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                                function_1()
                            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                                function_2()
                            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                                function_3()
                            else:
                                function_4()
                        else:
                            function_5()
                    else:
                        function_14()
                
    Intention ID: [18]
    Executable: False
    Description: The agent's short term goal is to move to the next unexplored cell in the map. If the agent's energy level is below a threshold, the agent should move towards the nearest battery to recharge.
                def function_18():
                    global belief_set
                    energy_threshold = 30
                    energy = belief_set['agent']['energy']
                    if energy < energy_threshold:
                        function_14()
                    else:
                        function_1() if belief_set['agent']['coordinates'][0
                            ] > 0 else function_2()
                        function_3() if belief_set['agent']['coordinates'][1
                            ] > 0 else function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to an adjacent cell, if it's a walkable cell and the agent's energy is above a certain threshold. If the agent's energy goes below this threshold, the agent will stop moving to conserve energy.
                def function_19():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0
                            ] - 1][agent_coords[1]]['cell_type'] == 'walkable':
                            function_1()
                        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'
                            ] == 'walkable':
                            function_2()
                        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]
                            ][agent_coords[1] - 1]['cell_type'] == 'walkable':
                            function_3()
                        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'
                            ] == 'walkable':
                            function_4()
                    else:
                        pass
                
Executable: False
Trigger function:
None


Desire 6: The agent should endeavor to explore the entire map, identifying the locations of all items, while maintaining a high energy level and avoiding any hazards.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate while maintaining a high energy level. The agent will move from cell to cell using function_4 and if its energy level drops below 30, it will use function_14 to navigate towards the battery to recharge.
                def function_20():
                    global belief_set
                    while belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [21]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent will navigate towards the nearest battery to recharge.
                def function_21():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent should navigate towards the nearest battery to recharge.
                def function_22():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] >= 30:
                        function_4()
                    if belief_set['agent']['energy'] < 30:
                        function_14()
                
Executable: False
Trigger function:
None


Desire 7: The agent should aim to explore the entire map, identifying all walkable cells, while maintaining a high level of energy and collecting any objects of interest it encounters along the way.
Executable: False
Trigger function:
None



2024-11-08 17:48:12,847 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent']['energy'] > 20:
        function_4()
2024-11-08 17:48:12,897 - INFO - The intention is valid.
2024-11-08 17:48:12,910 - INFO - Intention added to desire 7
2024-11-08 17:48:12,922 - INFO - Running intention 23 ...
2024-11-08 17:48:13,054 - INFO - Belief set thread started ...
2024-11-08 17:48:13,060 - INFO - Plan thread started ...
2024-11-08 17:48:13,060 - INFO - Started subprocess...
2024-11-08 17:48:13,079 - INFO - Belief set before intention 23 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:48:13,416 - INFO - Executing action action_4 ...
2024-11-08 17:48:13,640 - INFO - Action action_4 executed. Events received: []
2024-11-08 17:48:14,024 - INFO - Plan thread terminated.
2024-11-08 17:48:14,062 - INFO - Belief set thread terminated.
2024-11-08 17:48:14,093 - INFO - Intention 23 execution has finished. Threads and subprocess terminated. Plan: ['action_4']. Events: [[]]
2024-11-08 17:48:14,093 - INFO - Belief set after intention 23 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:48:20,269 - INFO - Invalidating intention 23 ...
2024-11-08 17:48:26,662 - INFO - Testing intention 
def function():
    global belief_set
    # Check if the agent's energy is sufficient
    if belief_set['agent']['energy'] > 50:
        # Calculate the coordinates of the cell below the agent
        new_coordinates = [belief_set['agent']['coordinates'][0] + 1, belief_set['agent']['coordinates'][1]]
        # Check if the cell below is walkable
        for cell in belief_set['map']['grid']:
            if cell['cell_coordinates'] == new_coordinates and cell['cell_type'] == 'walkable':
                # Move the agent one cell down
                function_2()
                break
2024-11-08 17:48:26,712 - INFO - The intention is valid.
2024-11-08 17:48:26,719 - INFO - Intention added to desire 7
2024-11-08 17:48:26,744 - INFO - Running intention 24 ...
2024-11-08 17:48:26,907 - INFO - Belief set thread started ...
2024-11-08 17:48:26,932 - INFO - Plan thread started ...
2024-11-08 17:48:26,932 - INFO - Started subprocess...
2024-11-08 17:48:26,933 - INFO - Belief set before intention 24 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 90}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:48:27,277 - INFO - Executing action action_2 ...
2024-11-08 17:48:27,502 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 89}}]
2024-11-08 17:48:27,858 - INFO - Belief set thread terminated.
2024-11-08 17:48:27,876 - INFO - Plan thread terminated.
2024-11-08 17:48:27,895 - INFO - Intention 24 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 89}}]]
2024-11-08 17:48:27,902 - INFO - Belief set after intention 24 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 89}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:48:34,414 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    if agent['energy'] > 50:
        function_1()
        function_2()
        function_3()
        function_4()
        function_5()
    else:
        pass
2024-11-08 17:48:34,426 - INFO - The intention is valid.
2024-11-08 17:48:34,427 - INFO - Intention added to desire 7
2024-11-08 17:48:34,433 - INFO - Running intention 25 ...
2024-11-08 17:48:34,615 - INFO - Belief set thread started ...
2024-11-08 17:48:34,640 - INFO - Plan thread started ...
2024-11-08 17:48:34,672 - INFO - Started subprocess...
2024-11-08 17:48:34,672 - INFO - Belief set before intention 25 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 89}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:48:34,911 - INFO - Executing action action_1 ...
2024-11-08 17:48:35,128 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-08 17:48:35,428 - INFO - Executing action action_2 ...
2024-11-08 17:48:35,676 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 87}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-08 17:48:36,000 - INFO - Executing action action_3 ...
2024-11-08 17:48:36,225 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 86}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-08 17:48:36,489 - INFO - Executing action action_4 ...
2024-11-08 17:48:36,700 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-08 17:48:37,067 - INFO - Executing action action_5 ...
2024-11-08 17:48:37,308 - INFO - Action action_5 executed. Events received: []
2024-11-08 17:48:37,725 - INFO - Plan thread terminated.
2024-11-08 17:48:37,743 - INFO - Belief set thread terminated.
2024-11-08 17:48:37,744 - INFO - Intention 25 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_2', 'action_3', 'action_4', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 87}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 86}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], []]
2024-11-08 17:48:37,744 - INFO - Belief set after intention 25 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:48:42,830 - INFO - Invalidating intention 25 ...
2024-11-08 17:48:48,529 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent']['coordinates']
    agent_energy = belief_set['agent']['energy']
    map_grid = belief_set['map']['grid']
    if agent_energy > 50:
        for cell in map_grid:
            if cell['cell_coordinates'] == [agent_coordinates[0], agent_coordinates[1]+1] and cell['cell_type'] == 'walkable':
                function_4()
                function_5()
                break
2024-11-08 17:48:48,554 - INFO - The intention is valid.
2024-11-08 17:48:48,555 - INFO - Intention added to desire 7
2024-11-08 17:48:48,579 - INFO - Running intention 26 ...
2024-11-08 17:48:48,805 - INFO - Belief set thread started ...
2024-11-08 17:48:48,823 - INFO - Plan thread started ...
2024-11-08 17:48:48,849 - INFO - Started subprocess...
2024-11-08 17:48:48,849 - INFO - Belief set before intention 26 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:48:49,164 - INFO - Belief set thread terminated.
2024-11-08 17:48:49,182 - INFO - Plan thread terminated.
2024-11-08 17:48:49,194 - INFO - Intention 26 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 17:48:49,207 - INFO - Belief set after intention 26 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:48:54,960 - INFO - Invalidating intention 26 ...
2024-11-08 17:49:01,594 - INFO - Testing intention 
def function():
    global belief_set
    x, y = belief_set['agent']['coordinates']
    if belief_set['agent']['energy'] > 50:
        if belief_set['map']['grid'][y][x-1]['cell_type'] == 'walkable':
            function_1()
        if belief_set['map']['grid'][y-1][x]['cell_type'] == 'walkable':
            function_3()
        if belief_set['map']['grid'][y][x+1]['cell_type'] == 'walkable':
            function_2()
        if belief_set['map']['grid'][y+1][x]['cell_type'] == 'walkable':
            function_4()
2024-11-08 17:49:01,594 - INFO - The intention is valid.
2024-11-08 17:49:01,601 - INFO - Intention added to desire 7
2024-11-08 17:49:01,626 - INFO - Running intention 27 ...
2024-11-08 17:49:01,838 - INFO - Belief set thread started ...
2024-11-08 17:49:01,851 - INFO - Plan thread started ...
2024-11-08 17:49:01,851 - INFO - Started subprocess...
2024-11-08 17:49:01,882 - INFO - Belief set before intention 27 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:49:16,915 - ERROR - Error during intention 27 execution. Intention 27 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 17:49:16,988 - INFO - Plan thread terminated.
2024-11-08 17:49:17,019 - INFO - Belief set thread terminated.
2024-11-08 17:49:17,056 - INFO - Intention 27 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 17:49:17,056 - INFO - Belief set after intention 27 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}, 'parcels': {}, 'batteries': {}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [3, 2]}}}
2024-11-08 17:49:25,762 - INFO - Invalidating intention 27 ...
2024-11-08 17:49:25,800 - INFO - Invalidating intention 4 ...
2024-11-08 17:49:25,800 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 17:49:47,267 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
    Intention ID: [17]
    Executable: False
    Description: The agent should move towards the unexplored part of the map, by choosing the next walkable cell, while ensuring it has enough energy to perform the movement. If the agent's energy is below a certain threshold, it should navigate towards the nearest battery to recharge.
                def function_17():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] ==
                        'walkable' and cell['cell_coordinates'] not in belief_set['agent'][
                        'visited_cells']]
                    if belief_set['agent']['energy'] > 10:
                        if unexplored_cells:
                            next_cell = unexplored_cells[0]
                            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                                function_1()
                            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                                function_2()
                            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                                function_3()
                            else:
                                function_4()
                        else:
                            function_5()
                    else:
                        function_14()
                
    Intention ID: [18]
    Executable: False
    Description: The agent's short term goal is to move to the next unexplored cell in the map. If the agent's energy level is below a threshold, the agent should move towards the nearest battery to recharge.
                def function_18():
                    global belief_set
                    energy_threshold = 30
                    energy = belief_set['agent']['energy']
                    if energy < energy_threshold:
                        function_14()
                    else:
                        function_1() if belief_set['agent']['coordinates'][0
                            ] > 0 else function_2()
                        function_3() if belief_set['agent']['coordinates'][1
                            ] > 0 else function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to an adjacent cell, if it's a walkable cell and the agent's energy is above a certain threshold. If the agent's energy goes below this threshold, the agent will stop moving to conserve energy.
                def function_19():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0
                            ] - 1][agent_coords[1]]['cell_type'] == 'walkable':
                            function_1()
                        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'
                            ] == 'walkable':
                            function_2()
                        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]
                            ][agent_coords[1] - 1]['cell_type'] == 'walkable':
                            function_3()
                        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'
                            ] == 'walkable':
                            function_4()
                    else:
                        pass
                
Executable: False
Trigger function:
None


Desire 6: The agent should endeavor to explore the entire map, identifying the locations of all items, while maintaining a high energy level and avoiding any hazards.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate while maintaining a high energy level. The agent will move from cell to cell using function_4 and if its energy level drops below 30, it will use function_14 to navigate towards the battery to recharge.
                def function_20():
                    global belief_set
                    while belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [21]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent will navigate towards the nearest battery to recharge.
                def function_21():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent should navigate towards the nearest battery to recharge.
                def function_22():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] >= 30:
                        function_4()
                    if belief_set['agent']['energy'] < 30:
                        function_14()
                
Executable: False
Trigger function:
None


Desire 7: The agent should aim to explore the entire map, identifying all walkable cells, while maintaining a high level of energy and collecting any objects of interest it encounters along the way.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is for the agent to move one cell to the right, if it's a walkable cell and if the agent's energy level is above a certain threshold, to continue exploring the map and conserving energy.
                def function_23():
                    global belief_set
                    if belief_set['agent']['energy'] > 20:
                        function_4()
                
    Intention ID: [24]
    Executable: True
    Description: The agent's short term goal is to move one cell down on the map if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy.
                def function_24():
                    global belief_set
                    if belief_set['agent']['energy'] > 50:
                        new_coordinates = [belief_set['agent']['coordinates'][0] + 1,
                            belief_set['agent']['coordinates'][1]]
                        for cell in belief_set['map']['grid']:
                            if cell['cell_coordinates'] == new_coordinates and cell['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                
    Intention ID: [25]
    Executable: False
    Description: The short term goal is for the agent to move one cell in each direction (up, down, left, right) if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy. If there is an object in the same cell as the agent, it will pick it up.
                def function_25():
                    global belief_set
                    agent = belief_set['agent']
                    if agent['energy'] > 50:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                        function_5()
                    else:
                        pass
                
    Intention ID: [26]
    Executable: False
    Description: The short term goal is to move the agent one cell to the right on the map if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map, conserving energy and picking up any objects found along the way.
                def function_26():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    agent_energy = belief_set['agent']['energy']
                    map_grid = belief_set['map']['grid']
                    if agent_energy > 50:
                        for cell in map_grid:
                            if cell['cell_coordinates'] == [agent_coordinates[0], 
                                agent_coordinates[1] + 1] and cell['cell_type'] == 'walkable':
                                function_4()
                                function_5()
                                break
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is for the agent to move left, down, right and up successively, provided each direction is a walkable cell and the agent's energy is sufficient. This allows the agent to explore the map while conserving energy.
                def function_27():
                    global belief_set
                    x, y = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if belief_set['map']['grid'][y][x - 1]['cell_type'] == 'walkable':
                            function_1()
                        if belief_set['map']['grid'][y - 1][x]['cell_type'] == 'walkable':
                            function_3()
                        if belief_set['map']['grid'][y][x + 1]['cell_type'] == 'walkable':
                            function_2()
                        if belief_set['map']['grid'][y + 1][x]['cell_type'] == 'walkable':
                            function_4()
                
Executable: False
Trigger function:
None



2024-11-08 17:49:47,280 - INFO - Running trigger function for desire 1 ...
2024-11-08 17:49:47,280 - INFO - Trigger function for desire 1 has been executed. Result: True
2024-11-08 17:49:47,280 - INFO - Desire 1 could be triggered. Adding it to the list...
2024-11-08 17:49:47,280 - INFO - Running trigger function for desire 4 ...
2024-11-08 17:49:47,280 - INFO - Trigger function for desire 4 has been executed. Result: True
2024-11-08 17:49:47,280 - INFO - Desire 4 could be triggered. Adding it to the list...
2024-11-08 17:49:47,280 - INFO - Desires triggered: [1, 4]. Now randomly choosing which one to run.
2024-11-08 17:49:47,280 - INFO - Desire 1 was randomly chosen. Desire 1 has been triggered.
2024-11-08 17:49:47,293 - INFO - Desire 1 is about to be executed ...
2024-11-08 17:49:47,293 - INFO - Executing all valid intentions for desire 1 ...
2024-11-08 17:49:47,293 - INFO - Executing intention 7 ...
2024-11-08 17:49:47,293 - INFO - Running intention 7 ...
2024-11-08 17:49:47,415 - INFO - Belief set thread started ...
2024-11-08 17:49:47,441 - INFO - Plan thread started ...
2024-11-08 17:49:47,449 - INFO - Started subprocess...
2024-11-08 17:49:47,531 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': None}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:49:47,838 - INFO - Executing action action_2 ...
2024-11-08 17:49:48,112 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}]
2024-11-08 17:49:48,475 - INFO - Executing action action_4 ...
2024-11-08 17:49:48,680 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-08 17:49:48,987 - INFO - Executing action action_4 ...
2024-11-08 17:49:49,207 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 97}}]
2024-11-08 17:49:49,519 - INFO - Executing action action_5 ...
2024-11-08 17:49:49,738 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 96}}]
2024-11-08 17:49:50,119 - INFO - Plan thread terminated.
2024-11-08 17:49:50,218 - INFO - Belief set thread terminated.
2024-11-08 17:49:50,249 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_4', 'action_4', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 97}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 96}}]]
2024-11-08 17:49:50,249 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 96}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:49:50,249 - INFO - Intention 7 has been executed with plan ['action_2', 'action_4', 'action_4', 'action_5'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 99}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 97}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 96}}]].
2024-11-08 17:49:51,270 - INFO - Invalidating desire 1 ...
2024-11-08 17:49:53,144 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: True
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
    Intention ID: [17]
    Executable: False
    Description: The agent should move towards the unexplored part of the map, by choosing the next walkable cell, while ensuring it has enough energy to perform the movement. If the agent's energy is below a certain threshold, it should navigate towards the nearest battery to recharge.
                def function_17():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] ==
                        'walkable' and cell['cell_coordinates'] not in belief_set['agent'][
                        'visited_cells']]
                    if belief_set['agent']['energy'] > 10:
                        if unexplored_cells:
                            next_cell = unexplored_cells[0]
                            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                                function_1()
                            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                                function_2()
                            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                                function_3()
                            else:
                                function_4()
                        else:
                            function_5()
                    else:
                        function_14()
                
    Intention ID: [18]
    Executable: False
    Description: The agent's short term goal is to move to the next unexplored cell in the map. If the agent's energy level is below a threshold, the agent should move towards the nearest battery to recharge.
                def function_18():
                    global belief_set
                    energy_threshold = 30
                    energy = belief_set['agent']['energy']
                    if energy < energy_threshold:
                        function_14()
                    else:
                        function_1() if belief_set['agent']['coordinates'][0
                            ] > 0 else function_2()
                        function_3() if belief_set['agent']['coordinates'][1
                            ] > 0 else function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to an adjacent cell, if it's a walkable cell and the agent's energy is above a certain threshold. If the agent's energy goes below this threshold, the agent will stop moving to conserve energy.
                def function_19():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0
                            ] - 1][agent_coords[1]]['cell_type'] == 'walkable':
                            function_1()
                        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'
                            ] == 'walkable':
                            function_2()
                        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]
                            ][agent_coords[1] - 1]['cell_type'] == 'walkable':
                            function_3()
                        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'
                            ] == 'walkable':
                            function_4()
                    else:
                        pass
                
Executable: False
Trigger function:
None


Desire 6: The agent should endeavor to explore the entire map, identifying the locations of all items, while maintaining a high energy level and avoiding any hazards.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate while maintaining a high energy level. The agent will move from cell to cell using function_4 and if its energy level drops below 30, it will use function_14 to navigate towards the battery to recharge.
                def function_20():
                    global belief_set
                    while belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [21]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent will navigate towards the nearest battery to recharge.
                def function_21():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent should navigate towards the nearest battery to recharge.
                def function_22():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] >= 30:
                        function_4()
                    if belief_set['agent']['energy'] < 30:
                        function_14()
                
Executable: False
Trigger function:
None


Desire 7: The agent should aim to explore the entire map, identifying all walkable cells, while maintaining a high level of energy and collecting any objects of interest it encounters along the way.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is for the agent to move one cell to the right, if it's a walkable cell and if the agent's energy level is above a certain threshold, to continue exploring the map and conserving energy.
                def function_23():
                    global belief_set
                    if belief_set['agent']['energy'] > 20:
                        function_4()
                
    Intention ID: [24]
    Executable: True
    Description: The agent's short term goal is to move one cell down on the map if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy.
                def function_24():
                    global belief_set
                    if belief_set['agent']['energy'] > 50:
                        new_coordinates = [belief_set['agent']['coordinates'][0] + 1,
                            belief_set['agent']['coordinates'][1]]
                        for cell in belief_set['map']['grid']:
                            if cell['cell_coordinates'] == new_coordinates and cell['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                
    Intention ID: [25]
    Executable: False
    Description: The short term goal is for the agent to move one cell in each direction (up, down, left, right) if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy. If there is an object in the same cell as the agent, it will pick it up.
                def function_25():
                    global belief_set
                    agent = belief_set['agent']
                    if agent['energy'] > 50:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                        function_5()
                    else:
                        pass
                
    Intention ID: [26]
    Executable: False
    Description: The short term goal is to move the agent one cell to the right on the map if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map, conserving energy and picking up any objects found along the way.
                def function_26():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    agent_energy = belief_set['agent']['energy']
                    map_grid = belief_set['map']['grid']
                    if agent_energy > 50:
                        for cell in map_grid:
                            if cell['cell_coordinates'] == [agent_coordinates[0], 
                                agent_coordinates[1] + 1] and cell['cell_type'] == 'walkable':
                                function_4()
                                function_5()
                                break
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is for the agent to move left, down, right and up successively, provided each direction is a walkable cell and the agent's energy is sufficient. This allows the agent to explore the map while conserving energy.
                def function_27():
                    global belief_set
                    x, y = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if belief_set['map']['grid'][y][x - 1]['cell_type'] == 'walkable':
                            function_1()
                        if belief_set['map']['grid'][y - 1][x]['cell_type'] == 'walkable':
                            function_3()
                        if belief_set['map']['grid'][y][x + 1]['cell_type'] == 'walkable':
                            function_2()
                        if belief_set['map']['grid'][y + 1][x]['cell_type'] == 'walkable':
                            function_4()
                
Executable: False
Trigger function:
None



2024-11-08 17:49:53,157 - INFO - Running trigger function for desire 4 ...
2024-11-08 17:49:53,157 - INFO - Trigger function for desire 4 has been executed. Result: True
2024-11-08 17:49:53,157 - INFO - Desire 4 could be triggered. Adding it to the list...
2024-11-08 17:49:53,157 - INFO - Desires triggered: [4]. Now randomly choosing which one to run.
2024-11-08 17:49:53,157 - INFO - Desire 4 was randomly chosen. Desire 4 has been triggered.
2024-11-08 17:49:53,169 - INFO - Desire 4 is about to be executed ...
2024-11-08 17:49:53,169 - INFO - Executing all valid intentions for desire 4 ...
2024-11-08 17:49:53,182 - INFO - Executing intention 16 ...
2024-11-08 17:49:53,206 - INFO - Running intention 16 ...
2024-11-08 17:49:53,350 - INFO - Belief set thread started ...
2024-11-08 17:49:53,357 - INFO - Plan thread started ...
2024-11-08 17:49:53,400 - INFO - Started subprocess...
2024-11-08 17:49:53,400 - INFO - Belief set before intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 96}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:50:08,425 - ERROR - Error during intention 16 execution. Intention 16 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-08 17:50:08,459 - INFO - Belief set thread terminated.
2024-11-08 17:50:08,501 - INFO - Plan thread terminated.
2024-11-08 17:50:08,520 - INFO - Intention 16 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 17:50:08,527 - INFO - Belief set after intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 96}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:50:08,533 - INFO - Invalidating intention 16 ...
2024-11-08 17:50:08,539 - ERROR - Error during intention 16 execution. Desire 4 is now invalid and intention 16 has been invalidated.
2024-11-08 17:50:09,586 - INFO - Invalidating desire 4 ...
2024-11-08 17:50:27,636 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
    Intention ID: [17]
    Executable: False
    Description: The agent should move towards the unexplored part of the map, by choosing the next walkable cell, while ensuring it has enough energy to perform the movement. If the agent's energy is below a certain threshold, it should navigate towards the nearest battery to recharge.
                def function_17():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] ==
                        'walkable' and cell['cell_coordinates'] not in belief_set['agent'][
                        'visited_cells']]
                    if belief_set['agent']['energy'] > 10:
                        if unexplored_cells:
                            next_cell = unexplored_cells[0]
                            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                                function_1()
                            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                                function_2()
                            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                                function_3()
                            else:
                                function_4()
                        else:
                            function_5()
                    else:
                        function_14()
                
    Intention ID: [18]
    Executable: False
    Description: The agent's short term goal is to move to the next unexplored cell in the map. If the agent's energy level is below a threshold, the agent should move towards the nearest battery to recharge.
                def function_18():
                    global belief_set
                    energy_threshold = 30
                    energy = belief_set['agent']['energy']
                    if energy < energy_threshold:
                        function_14()
                    else:
                        function_1() if belief_set['agent']['coordinates'][0
                            ] > 0 else function_2()
                        function_3() if belief_set['agent']['coordinates'][1
                            ] > 0 else function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to an adjacent cell, if it's a walkable cell and the agent's energy is above a certain threshold. If the agent's energy goes below this threshold, the agent will stop moving to conserve energy.
                def function_19():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0
                            ] - 1][agent_coords[1]]['cell_type'] == 'walkable':
                            function_1()
                        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'
                            ] == 'walkable':
                            function_2()
                        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]
                            ][agent_coords[1] - 1]['cell_type'] == 'walkable':
                            function_3()
                        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'
                            ] == 'walkable':
                            function_4()
                    else:
                        pass
                
Executable: False
Trigger function:
None


Desire 6: The agent should endeavor to explore the entire map, identifying the locations of all items, while maintaining a high energy level and avoiding any hazards.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate while maintaining a high energy level. The agent will move from cell to cell using function_4 and if its energy level drops below 30, it will use function_14 to navigate towards the battery to recharge.
                def function_20():
                    global belief_set
                    while belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [21]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent will navigate towards the nearest battery to recharge.
                def function_21():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent should navigate towards the nearest battery to recharge.
                def function_22():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] >= 30:
                        function_4()
                    if belief_set['agent']['energy'] < 30:
                        function_14()
                
Executable: False
Trigger function:
None


Desire 7: The agent should aim to explore the entire map, identifying all walkable cells, while maintaining a high level of energy and collecting any objects of interest it encounters along the way.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is for the agent to move one cell to the right, if it's a walkable cell and if the agent's energy level is above a certain threshold, to continue exploring the map and conserving energy.
                def function_23():
                    global belief_set
                    if belief_set['agent']['energy'] > 20:
                        function_4()
                
    Intention ID: [24]
    Executable: True
    Description: The agent's short term goal is to move one cell down on the map if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy.
                def function_24():
                    global belief_set
                    if belief_set['agent']['energy'] > 50:
                        new_coordinates = [belief_set['agent']['coordinates'][0] + 1,
                            belief_set['agent']['coordinates'][1]]
                        for cell in belief_set['map']['grid']:
                            if cell['cell_coordinates'] == new_coordinates and cell['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                
    Intention ID: [25]
    Executable: False
    Description: The short term goal is for the agent to move one cell in each direction (up, down, left, right) if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy. If there is an object in the same cell as the agent, it will pick it up.
                def function_25():
                    global belief_set
                    agent = belief_set['agent']
                    if agent['energy'] > 50:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                        function_5()
                    else:
                        pass
                
    Intention ID: [26]
    Executable: False
    Description: The short term goal is to move the agent one cell to the right on the map if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map, conserving energy and picking up any objects found along the way.
                def function_26():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    agent_energy = belief_set['agent']['energy']
                    map_grid = belief_set['map']['grid']
                    if agent_energy > 50:
                        for cell in map_grid:
                            if cell['cell_coordinates'] == [agent_coordinates[0], 
                                agent_coordinates[1] + 1] and cell['cell_type'] == 'walkable':
                                function_4()
                                function_5()
                                break
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is for the agent to move left, down, right and up successively, provided each direction is a walkable cell and the agent's energy is sufficient. This allows the agent to explore the map while conserving energy.
                def function_27():
                    global belief_set
                    x, y = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if belief_set['map']['grid'][y][x - 1]['cell_type'] == 'walkable':
                            function_1()
                        if belief_set['map']['grid'][y - 1][x]['cell_type'] == 'walkable':
                            function_3()
                        if belief_set['map']['grid'][y][x + 1]['cell_type'] == 'walkable':
                            function_2()
                        if belief_set['map']['grid'][y + 1][x]['cell_type'] == 'walkable':
                            function_4()
                
Executable: False
Trigger function:
None



2024-11-08 17:50:27,642 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-08 17:50:27,655 - INFO - No desire has been triggered.
2024-11-08 17:50:27,673 - INFO - No desire triggered.
2024-11-08 17:50:29,331 - INFO - Desire added: 8. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
    Intention ID: [17]
    Executable: False
    Description: The agent should move towards the unexplored part of the map, by choosing the next walkable cell, while ensuring it has enough energy to perform the movement. If the agent's energy is below a certain threshold, it should navigate towards the nearest battery to recharge.
                def function_17():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] ==
                        'walkable' and cell['cell_coordinates'] not in belief_set['agent'][
                        'visited_cells']]
                    if belief_set['agent']['energy'] > 10:
                        if unexplored_cells:
                            next_cell = unexplored_cells[0]
                            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                                function_1()
                            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                                function_2()
                            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                                function_3()
                            else:
                                function_4()
                        else:
                            function_5()
                    else:
                        function_14()
                
    Intention ID: [18]
    Executable: False
    Description: The agent's short term goal is to move to the next unexplored cell in the map. If the agent's energy level is below a threshold, the agent should move towards the nearest battery to recharge.
                def function_18():
                    global belief_set
                    energy_threshold = 30
                    energy = belief_set['agent']['energy']
                    if energy < energy_threshold:
                        function_14()
                    else:
                        function_1() if belief_set['agent']['coordinates'][0
                            ] > 0 else function_2()
                        function_3() if belief_set['agent']['coordinates'][1
                            ] > 0 else function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to an adjacent cell, if it's a walkable cell and the agent's energy is above a certain threshold. If the agent's energy goes below this threshold, the agent will stop moving to conserve energy.
                def function_19():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0
                            ] - 1][agent_coords[1]]['cell_type'] == 'walkable':
                            function_1()
                        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'
                            ] == 'walkable':
                            function_2()
                        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]
                            ][agent_coords[1] - 1]['cell_type'] == 'walkable':
                            function_3()
                        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'
                            ] == 'walkable':
                            function_4()
                    else:
                        pass
                
Executable: False
Trigger function:
None


Desire 6: The agent should endeavor to explore the entire map, identifying the locations of all items, while maintaining a high energy level and avoiding any hazards.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate while maintaining a high energy level. The agent will move from cell to cell using function_4 and if its energy level drops below 30, it will use function_14 to navigate towards the battery to recharge.
                def function_20():
                    global belief_set
                    while belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [21]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent will navigate towards the nearest battery to recharge.
                def function_21():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent should navigate towards the nearest battery to recharge.
                def function_22():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] >= 30:
                        function_4()
                    if belief_set['agent']['energy'] < 30:
                        function_14()
                
Executable: False
Trigger function:
None


Desire 7: The agent should aim to explore the entire map, identifying all walkable cells, while maintaining a high level of energy and collecting any objects of interest it encounters along the way.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is for the agent to move one cell to the right, if it's a walkable cell and if the agent's energy level is above a certain threshold, to continue exploring the map and conserving energy.
                def function_23():
                    global belief_set
                    if belief_set['agent']['energy'] > 20:
                        function_4()
                
    Intention ID: [24]
    Executable: True
    Description: The agent's short term goal is to move one cell down on the map if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy.
                def function_24():
                    global belief_set
                    if belief_set['agent']['energy'] > 50:
                        new_coordinates = [belief_set['agent']['coordinates'][0] + 1,
                            belief_set['agent']['coordinates'][1]]
                        for cell in belief_set['map']['grid']:
                            if cell['cell_coordinates'] == new_coordinates and cell['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                
    Intention ID: [25]
    Executable: False
    Description: The short term goal is for the agent to move one cell in each direction (up, down, left, right) if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy. If there is an object in the same cell as the agent, it will pick it up.
                def function_25():
                    global belief_set
                    agent = belief_set['agent']
                    if agent['energy'] > 50:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                        function_5()
                    else:
                        pass
                
    Intention ID: [26]
    Executable: False
    Description: The short term goal is to move the agent one cell to the right on the map if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map, conserving energy and picking up any objects found along the way.
                def function_26():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    agent_energy = belief_set['agent']['energy']
                    map_grid = belief_set['map']['grid']
                    if agent_energy > 50:
                        for cell in map_grid:
                            if cell['cell_coordinates'] == [agent_coordinates[0], 
                                agent_coordinates[1] + 1] and cell['cell_type'] == 'walkable':
                                function_4()
                                function_5()
                                break
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is for the agent to move left, down, right and up successively, provided each direction is a walkable cell and the agent's energy is sufficient. This allows the agent to explore the map while conserving energy.
                def function_27():
                    global belief_set
                    x, y = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if belief_set['map']['grid'][y][x - 1]['cell_type'] == 'walkable':
                            function_1()
                        if belief_set['map']['grid'][y - 1][x]['cell_type'] == 'walkable':
                            function_3()
                        if belief_set['map']['grid'][y][x + 1]['cell_type'] == 'walkable':
                            function_2()
                        if belief_set['map']['grid'][y + 1][x]['cell_type'] == 'walkable':
                            function_4()
                
Executable: False
Trigger function:
None


Desire 8: The agent should aim to collect all the keys in the environment and use them to unlock all the doors, while maintaining sufficient energy levels by collecting batteries when needed.
Executable: False
Trigger function:
None



2024-11-08 17:50:40,766 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent']['coordinates']
    key_coordinates = [item['coordinates'] for item in belief_set['keys'].values()]
    door_coordinates = [item['coordinates'] for item in belief_set['doors'].values()]
    if belief_set['agent']['has_key'] == False:
        # Move towards the key
        if key_coordinates:
            target_key_coordinates = key_coordinates[0]
            if target_key_coordinates[0] < agent_coordinates[0]:
                function_1()
            elif target_key_coordinates[0] > agent_coordinates[0]:
                function_2()
            elif target_key_coordinates[1] < agent_coordinates[1]:
                function_3()
            elif target_key_coordinates[1] > agent_coordinates[1]:
                function_4()
            else:
                function_5()
    else:
        # Move towards the door
        if door_coordinates:
            target_door_coordinates = door_coordinates[0]
            if target_door_coordinates[0] < agent_coordinates[0]:
                function_1()
            elif target_door_coordinates[0] > agent_coordinates[0]:
                function_2()
            elif target_door_coordinates[1] < agent_coordinates[1]:
                function_3()
            elif target_door_coordinates[1] > agent_coordinates[1]:
                function_4()
2024-11-08 17:50:40,786 - INFO - The intention is valid.
2024-11-08 17:50:40,805 - INFO - Intention added to desire 8
2024-11-08 17:50:40,810 - INFO - Running intention 28 ...
2024-11-08 17:50:40,942 - INFO - Belief set thread started ...
2024-11-08 17:50:40,960 - INFO - Plan thread started ...
2024-11-08 17:50:40,967 - INFO - Started subprocess...
2024-11-08 17:50:40,967 - INFO - Belief set before intention 28 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 96}, 'parcels': {3: {'id': 3, 'coordinates': [2, 3], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:50:41,334 - INFO - Executing action action_3 ...
2024-11-08 17:50:41,552 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 95}}]
2024-11-08 17:50:41,882 - INFO - Belief set thread terminated.
2024-11-08 17:50:41,901 - INFO - Plan thread terminated.
2024-11-08 17:50:41,926 - INFO - Intention 28 execution has finished. Threads and subprocess terminated. Plan: ['action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 95}}]]
2024-11-08 17:50:41,939 - INFO - Belief set after intention 28 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 95}, 'parcels': {3: {'id': 3, 'coordinates': [2, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:50:46,458 - INFO - Invalidating intention 28 ...
2024-11-08 17:50:56,044 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent']['coordinates']
    key_coordinates = belief_set['keys'][2]['coordinates']
    battery_coordinates = belief_set['batteries'][2]
    if belief_set['agent']['energy'] < 30:
        if battery_coordinates[0] > agent_coordinates[0]:
            function_2()
        elif battery_coordinates[0] < agent_coordinates[0]:
            function_1()
        elif battery_coordinates[1] > agent_coordinates[1]:
            function_4()
        elif battery_coordinates[1] < agent_coordinates[1]:
            function_3()
        function_5()
    else:
        if key_coordinates[0] > agent_coordinates[0]:
            function_2()
        elif key_coordinates[0] < agent_coordinates[0]:
            function_1()
        elif key_coordinates[1] > agent_coordinates[1]:
            function_4()
        elif key_coordinates[1] < agent_coordinates[1]:
            function_3()
        function_5()
2024-11-08 17:50:56,070 - INFO - The intention is valid.
2024-11-08 17:50:56,095 - INFO - Intention added to desire 8
2024-11-08 17:50:56,107 - INFO - Running intention 29 ...
2024-11-08 17:50:56,275 - INFO - Belief set thread started ...
2024-11-08 17:50:56,293 - INFO - Plan thread started ...
2024-11-08 17:50:56,306 - INFO - Started subprocess...
2024-11-08 17:50:56,306 - INFO - Belief set before intention 29 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': False, 'score': 0, 'energy': 95}, 'parcels': {3: {'id': 3, 'coordinates': [2, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': None}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:50:56,701 - INFO - Executing action action_5 ...
2024-11-08 17:50:56,965 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}]
2024-11-08 17:50:57,377 - INFO - Plan thread terminated.
2024-11-08 17:50:57,384 - INFO - Belief set thread terminated.
2024-11-08 17:50:57,459 - INFO - Intention 29 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}]]
2024-11-08 17:50:57,459 - INFO - Belief set after intention 29 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 94}, 'parcels': {3: {'id': 3, 'coordinates': [2, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:04,225 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent']['has_key']:
        for door in belief_set['doors'].values():
            if door['coordinates'] == belief_set['agent']['coordinates']:
                function_5()
    else:
        if belief_set['agent']['energy'] < 50:
            function_29()
        else:
            function_24()
2024-11-08 17:51:04,238 - INFO - The intention is valid.
2024-11-08 17:51:04,251 - INFO - Intention added to desire 8
2024-11-08 17:51:04,269 - INFO - Running intention 30 ...
2024-11-08 17:51:04,419 - INFO - Belief set thread started ...
2024-11-08 17:51:04,419 - INFO - Plan thread started ...
2024-11-08 17:51:04,432 - INFO - Started subprocess...
2024-11-08 17:51:04,432 - INFO - Belief set before intention 30 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 94}, 'parcels': {3: {'id': 3, 'coordinates': [2, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:04,739 - INFO - Belief set thread terminated.
2024-11-08 17:51:04,746 - INFO - Plan thread terminated.
2024-11-08 17:51:04,746 - INFO - Intention 30 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-08 17:51:04,746 - INFO - Belief set after intention 30 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 94}, 'parcels': {3: {'id': 3, 'coordinates': [2, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:10,459 - INFO - Invalidating intention 30 ...
2024-11-08 17:51:20,354 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    keys = belief_set['keys']
    doors = belief_set['doors']
    batteries = belief_set['batteries']
    if agent['energy'] < 30:
        function_29()
    elif not agent['has_key'] and keys:
        function_29()
    else:
        nearest_door = min(doors, key=lambda x: abs(doors[x]['coordinates'][0] - agent['coordinates'][0]) + abs(doors[x]['coordinates'][1] - agent['coordinates'][1]))
        door_x, door_y = doors[nearest_door]['coordinates']
        agent_x, agent_y = agent['coordinates']
        if door_x > agent_x:
            function_2()
        elif door_x < agent_x:
            function_1()
        elif door_y > agent_y:
            function_4()
        else:
            function_3()

2024-11-08 17:51:20,354 - INFO - The intention is valid.
2024-11-08 17:51:20,374 - INFO - Intention added to desire 8
2024-11-08 17:51:20,374 - INFO - Running intention 31 ...
2024-11-08 17:51:20,487 - INFO - Belief set thread started ...
2024-11-08 17:51:20,493 - INFO - Plan thread started ...
2024-11-08 17:51:20,505 - INFO - Started subprocess...
2024-11-08 17:51:20,543 - INFO - Belief set before intention 31 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 94}, 'parcels': {3: {'id': 3, 'coordinates': [2, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:20,820 - INFO - Executing action action_1 ...
2024-11-08 17:51:21,063 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 93}}]
2024-11-08 17:51:21,470 - INFO - Plan thread terminated.
2024-11-08 17:51:21,495 - INFO - Belief set thread terminated.
2024-11-08 17:51:21,539 - INFO - Intention 31 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 93}}]]
2024-11-08 17:51:21,539 - INFO - Belief set after intention 31 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 93}, 'parcels': {3: {'id': 3, 'coordinates': [1, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [1, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [1, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:28,166 - INFO - Invalidating intention 31 ...
2024-11-08 17:51:36,395 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent']['energy'] > 50:
        if belief_set['agent']['has_key']:
            for door in belief_set['doors'].values():
                if not door.get('unlocked', False):
                    if door['coordinates'][0] > belief_set['agent']['coordinates'][0]:
                        function_2()
                        break
                    elif door['coordinates'][0] < belief_set['agent']['coordinates'][0]:
                        function_1()
                        break
                    elif door['coordinates'][1] > belief_set['agent']['coordinates'][1]:
                        function_4()
                        break
                    elif door['coordinates'][1] < belief_set['agent']['coordinates'][1]:
                        function_3()
                        break
    else:
        function_29()
        function_5()
2024-11-08 17:51:36,395 - INFO - The intention is valid.
2024-11-08 17:51:36,415 - INFO - Intention added to desire 8
2024-11-08 17:51:36,415 - INFO - Running intention 32 ...
2024-11-08 17:51:36,641 - INFO - Belief set thread started ...
2024-11-08 17:51:36,648 - INFO - Plan thread started ...
2024-11-08 17:51:36,685 - INFO - Started subprocess...
2024-11-08 17:51:36,686 - INFO - Belief set before intention 32 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 93}, 'parcels': {3: {'id': 3, 'coordinates': [1, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [1, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [1, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:36,980 - INFO - Executing action action_1 ...
2024-11-08 17:51:37,222 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 92}}]
2024-11-08 17:51:37,615 - INFO - Belief set thread terminated.
2024-11-08 17:51:37,646 - INFO - Plan thread terminated.
2024-11-08 17:51:37,684 - INFO - Intention 32 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 92}}]]
2024-11-08 17:51:37,702 - INFO - Belief set after intention 32 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 92}, 'parcels': {3: {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:41,961 - INFO - Invalidating intention 32 ...
2024-11-08 17:51:41,961 - INFO - Invalidating intention 1 ...
2024-11-08 17:51:41,961 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 17:51:41,961 - INFO - Invalidating intention 2 ...
2024-11-08 17:51:41,961 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-08 17:51:41,961 - INFO - Invalidating intention 3 ...
2024-11-08 17:51:41,961 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 17:51:41,961 - INFO - Invalidating intention 4 ...
2024-11-08 17:51:41,961 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-08 17:51:41,961 - INFO - Invalidating intention 5 ...
2024-11-08 17:51:41,961 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-08 17:51:41,961 - INFO - Invalidating intention 29 ...
2024-11-08 17:51:41,961 - INFO - Invalidating intention 30 ...
2024-11-08 17:51:41,961 - INFO - Invalidating intention 31 ...
2024-11-08 17:51:41,961 - INFO - Invalidating intention 32 ...
2024-11-08 17:51:46,994 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
    Intention ID: [17]
    Executable: False
    Description: The agent should move towards the unexplored part of the map, by choosing the next walkable cell, while ensuring it has enough energy to perform the movement. If the agent's energy is below a certain threshold, it should navigate towards the nearest battery to recharge.
                def function_17():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] ==
                        'walkable' and cell['cell_coordinates'] not in belief_set['agent'][
                        'visited_cells']]
                    if belief_set['agent']['energy'] > 10:
                        if unexplored_cells:
                            next_cell = unexplored_cells[0]
                            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                                function_1()
                            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                                function_2()
                            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                                function_3()
                            else:
                                function_4()
                        else:
                            function_5()
                    else:
                        function_14()
                
    Intention ID: [18]
    Executable: False
    Description: The agent's short term goal is to move to the next unexplored cell in the map. If the agent's energy level is below a threshold, the agent should move towards the nearest battery to recharge.
                def function_18():
                    global belief_set
                    energy_threshold = 30
                    energy = belief_set['agent']['energy']
                    if energy < energy_threshold:
                        function_14()
                    else:
                        function_1() if belief_set['agent']['coordinates'][0
                            ] > 0 else function_2()
                        function_3() if belief_set['agent']['coordinates'][1
                            ] > 0 else function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to an adjacent cell, if it's a walkable cell and the agent's energy is above a certain threshold. If the agent's energy goes below this threshold, the agent will stop moving to conserve energy.
                def function_19():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0
                            ] - 1][agent_coords[1]]['cell_type'] == 'walkable':
                            function_1()
                        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'
                            ] == 'walkable':
                            function_2()
                        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]
                            ][agent_coords[1] - 1]['cell_type'] == 'walkable':
                            function_3()
                        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'
                            ] == 'walkable':
                            function_4()
                    else:
                        pass
                
Executable: False
Trigger function:
None


Desire 6: The agent should endeavor to explore the entire map, identifying the locations of all items, while maintaining a high energy level and avoiding any hazards.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate while maintaining a high energy level. The agent will move from cell to cell using function_4 and if its energy level drops below 30, it will use function_14 to navigate towards the battery to recharge.
                def function_20():
                    global belief_set
                    while belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [21]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent will navigate towards the nearest battery to recharge.
                def function_21():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent should navigate towards the nearest battery to recharge.
                def function_22():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] >= 30:
                        function_4()
                    if belief_set['agent']['energy'] < 30:
                        function_14()
                
Executable: False
Trigger function:
None


Desire 7: The agent should aim to explore the entire map, identifying all walkable cells, while maintaining a high level of energy and collecting any objects of interest it encounters along the way.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is for the agent to move one cell to the right, if it's a walkable cell and if the agent's energy level is above a certain threshold, to continue exploring the map and conserving energy.
                def function_23():
                    global belief_set
                    if belief_set['agent']['energy'] > 20:
                        function_4()
                
    Intention ID: [24]
    Executable: True
    Description: The agent's short term goal is to move one cell down on the map if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy.
                def function_24():
                    global belief_set
                    if belief_set['agent']['energy'] > 50:
                        new_coordinates = [belief_set['agent']['coordinates'][0] + 1,
                            belief_set['agent']['coordinates'][1]]
                        for cell in belief_set['map']['grid']:
                            if cell['cell_coordinates'] == new_coordinates and cell['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                
    Intention ID: [25]
    Executable: False
    Description: The short term goal is for the agent to move one cell in each direction (up, down, left, right) if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy. If there is an object in the same cell as the agent, it will pick it up.
                def function_25():
                    global belief_set
                    agent = belief_set['agent']
                    if agent['energy'] > 50:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                        function_5()
                    else:
                        pass
                
    Intention ID: [26]
    Executable: False
    Description: The short term goal is to move the agent one cell to the right on the map if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map, conserving energy and picking up any objects found along the way.
                def function_26():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    agent_energy = belief_set['agent']['energy']
                    map_grid = belief_set['map']['grid']
                    if agent_energy > 50:
                        for cell in map_grid:
                            if cell['cell_coordinates'] == [agent_coordinates[0], 
                                agent_coordinates[1] + 1] and cell['cell_type'] == 'walkable':
                                function_4()
                                function_5()
                                break
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is for the agent to move left, down, right and up successively, provided each direction is a walkable cell and the agent's energy is sufficient. This allows the agent to explore the map while conserving energy.
                def function_27():
                    global belief_set
                    x, y = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if belief_set['map']['grid'][y][x - 1]['cell_type'] == 'walkable':
                            function_1()
                        if belief_set['map']['grid'][y - 1][x]['cell_type'] == 'walkable':
                            function_3()
                        if belief_set['map']['grid'][y][x + 1]['cell_type'] == 'walkable':
                            function_2()
                        if belief_set['map']['grid'][y + 1][x]['cell_type'] == 'walkable':
                            function_4()
                
Executable: False
Trigger function:
None


Desire 8: The agent should aim to collect all the keys in the environment and use them to unlock all the doors, while maintaining sufficient energy levels by collecting batteries when needed.
    Intention ID: [28]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest key, if it doesn't already have one, and pick it up. If the agent already has a key, it should move towards the nearest door and unlock it.
                def function_28():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    key_coordinates = [item['coordinates'] for item in belief_set['keys'].
                        values()]
                    door_coordinates = [item['coordinates'] for item in belief_set['doors']
                        .values()]
                    if belief_set['agent']['has_key'] == False:
                        if key_coordinates:
                            target_key_coordinates = key_coordinates[0]
                            if target_key_coordinates[0] < agent_coordinates[0]:
                                function_1()
                            elif target_key_coordinates[0] > agent_coordinates[0]:
                                function_2()
                            elif target_key_coordinates[1] < agent_coordinates[1]:
                                function_3()
                            elif target_key_coordinates[1] > agent_coordinates[1]:
                                function_4()
                            else:
                                function_5()
                    elif door_coordinates:
                        target_door_coordinates = door_coordinates[0]
                        if target_door_coordinates[0] < agent_coordinates[0]:
                            function_1()
                        elif target_door_coordinates[0] > agent_coordinates[0]:
                            function_2()
                        elif target_door_coordinates[1] < agent_coordinates[1]:
                            function_3()
                        elif target_door_coordinates[1] > agent_coordinates[1]:
                            function_4()
                
    Intention ID: [29]
    Executable: False
    Description: The agent's short term goal is to move towards the key, if it is in a nearby cell, and pick it up. If the agent's energy drops below a certain threshold, it should move towards the nearest battery and pick it up to replenish its energy.
                def function_29():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    key_coordinates = belief_set['keys'][2]['coordinates']
                    battery_coordinates = belief_set['batteries'][2]
                    if belief_set['agent']['energy'] < 30:
                        if battery_coordinates[0] > agent_coordinates[0]:
                            function_2()
                        elif battery_coordinates[0] < agent_coordinates[0]:
                            function_1()
                        elif battery_coordinates[1] > agent_coordinates[1]:
                            function_4()
                        elif battery_coordinates[1] < agent_coordinates[1]:
                            function_3()
                        function_5()
                    else:
                        if key_coordinates[0] > agent_coordinates[0]:
                            function_2()
                        elif key_coordinates[0] < agent_coordinates[0]:
                            function_1()
                        elif key_coordinates[1] > agent_coordinates[1]:
                            function_4()
                        elif key_coordinates[1] < agent_coordinates[1]:
                            function_3()
                        function_5()
                
    Intention ID: [30]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if the agent has a key, and unlock it. If the agent's energy drops below a certain threshold, it should move towards the nearest battery and pick it up to replenish its energy.
                def function_30():
                    global belief_set
                    if belief_set['agent']['has_key']:
                        for door in belief_set['doors'].values():
                            if door['coordinates'] == belief_set['agent']['coordinates']:
                                function_5()
                    elif belief_set['agent']['energy'] < 50:
                        function_29()
                    else:
                        function_24()
                
    Intention ID: [31]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door, if the agent has a key and the agent's energy is above a certain threshold, to unlock the door and continue exploring the map. If the agent doesn't have a key, it should move towards the nearest key and pick it up. If the agent's energy drops below a certain threshold, it should move towards the nearest battery and pick it up to replenish its energy.
                def function_31():
                    global belief_set
                    agent = belief_set['agent']
                    keys = belief_set['keys']
                    doors = belief_set['doors']
                    batteries = belief_set['batteries']
                    if agent['energy'] < 30:
                        function_29()
                    elif not agent['has_key'] and keys:
                        function_29()
                    else:
                        nearest_door = min(doors, key=lambda x: abs(doors[x]['coordinates']
                            [0] - agent['coordinates'][0]) + abs(doors[x]['coordinates'][1] -
                            agent['coordinates'][1]))
                        door_x, door_y = doors[nearest_door]['coordinates']
                        agent_x, agent_y = agent['coordinates']
                        if door_x > agent_x:
                            function_2()
                        elif door_x < agent_x:
                            function_1()
                        elif door_y > agent_y:
                            function_4()
                        else:
                            function_3()
                
    Intention ID: [32]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door that has not been unlocked, if the agent has a key. If the agent's energy drops below a certain threshold, it should move towards the nearest battery and pick it up to replenish its energy levels.
                def function_32():
                    global belief_set
                    if belief_set['agent']['energy'] > 50:
                        if belief_set['agent']['has_key']:
                            for door in belief_set['doors'].values():
                                if not door.get('unlocked', False):
                                    if door['coordinates'][0] > belief_set['agent'][
                                        'coordinates'][0]:
                                        function_2()
                                        break
                                    elif door['coordinates'][0] < belief_set['agent'][
                                        'coordinates'][0]:
                                        function_1()
                                        break
                                    elif door['coordinates'][1] > belief_set['agent'][
                                        'coordinates'][1]:
                                        function_4()
                                        break
                                    elif door['coordinates'][1] < belief_set['agent'][
                                        'coordinates'][1]:
                                        function_3()
                                        break
                    else:
                        function_29()
                        function_5()
                
Executable: False
Trigger function:
None



2024-11-08 17:51:47,007 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-08 17:51:47,007 - INFO - No desire has been triggered.
2024-11-08 17:51:47,051 - INFO - No desire triggered.
2024-11-08 17:51:48,893 - INFO - Desire added: 9. Desires:
Desire 1: The agent should strive to collect as many parcels as possible from the parcels spawn point and deliver them to their respective destinations while maintaining a high energy level.
    Intention ID: [7]
    Executable: True
    Description: The agent should move to the parcel spawn point and collect all the parcels.
                def function_7():
                    global belief_set
                    spawn_point = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    while belief_set['agent']['coordinates'] != spawn_point:
                        if belief_set['agent']['coordinates'][0] < spawn_point[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > spawn_point[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < spawn_point[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > spawn_point[1]:
                            function_3()
                    function_5()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 50 and len(belief_set['agent'][
        'parcels_carried_ids']) < 5:
        for parcel in belief_set['parcels'].values():
            if parcel['carried_by_id'] is None:
                return True
    return False



Desire 2: The agent should aim to explore the entire map to discover all cells and their types while conserving its energy and maintaining a high score by delivering parcels when possible.
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal should be to move to a neighboring cell, while conserving energy, to explore the map and discover new cells and their types. If a parcel is present in the new cell, the agent should pick it up.
                def function_8():
                    global belief_set
                    current_cell = belief_set['agent']['coordinates']
                    if {'cell_coordinates': [current_cell[0] - 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif {'cell_coordinates': [current_cell[0] + 1, current_cell[1]],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_2()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] - 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_3()
                    elif {'cell_coordinates': [current_cell[0], current_cell[1] + 1],
                        'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    for parcel in belief_set['parcels'].values():
                        if parcel['coordinates'] == belief_set['agent']['coordinates']:
                            function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The short-term goal is to move the agent one cell to the left on the map, if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map and conserving energy.
                def function_9():
                    global belief_set
                    current_coords = belief_set['agent']['coordinates']
                    new_coords = [current_coords[0] - 1, current_coords[1]]
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == new_coords and cell['cell_type'
                            ] == 'walkable':
                            if belief_set['agent']['energy'] > 10:
                                function_1()
                                break
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards a delivery cell while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    map_grid = belief_set['map']['grid']
                    delivery_cell = next((cell for cell in map_grid if cell['cell_type'] ==
                        'delivery_cell'), None)
                    if not delivery_cell:
                        return
                    delivery_coordinates = delivery_cell['cell_coordinates']
                    while agent['coordinates'] != delivery_coordinates and agent['energy'
                        ] > 10:
                        if agent['coordinates'][0] > delivery_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_coordinates[1]:
                            function_4()
                    if agent['coordinates'] == delivery_coordinates and agent[
                        'parcels_carried_ids']:
                        function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to move towards a delivery cell if there is one in its vicinity while conserving energy. If the agent is carrying parcels and is in a delivery cell, it should drop the parcels to increase the score. This function will limit the agent's actions to a maximum number to prevent infinite loops.
                def function_11():
                    global belief_set
                    max_actions = 10
                    actions_taken = 0
                    while actions_taken < max_actions:
                        if 'parcels_carried_ids' in belief_set['agent'] and len(belief_set[
                            'agent']['parcels_carried_ids']) > 0:
                            for cell in belief_set['map']['grid']:
                                if cell['cell_type'] == 'delivery_cell' and cell[
                                    'cell_coordinates'] == belief_set['agent']['coordinates']:
                                    function_6()
                                    return
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'delivery_cell' and cell['cell_coordinates'
                                ][0] > belief_set['agent']['coordinates'][0] and belief_set[
                                'agent']['energy'] > 10:
                                function_2()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][0] < belief_set['agent']['coordinates'][0
                                ] and belief_set['agent']['energy'] > 10:
                                function_1()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] > belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_4()
                                actions_taken += 1
                            elif cell['cell_type'] == 'delivery_cell' and cell[
                                'cell_coordinates'][1] < belief_set['agent']['coordinates'][1
                                ] and belief_set['agent']['energy'] > 10:
                                function_3()
                                actions_taken += 1
                        actions_taken += 1
                    return
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to find and collect batteries to maintain a high energy level, while navigating through the walkable cells and avoiding any obstacles or hazards in the environment.
    Intention ID: [12]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest battery, if it is reachable and then pick it up to increase the agent's energy level.
                def function_12():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    battery_coords = list(belief_set['batteries'].values())[0]
                    if agent_coords[0] < battery_coords[0]:
                        function_2()
                    elif agent_coords[0] > battery_coords[0]:
                        function_1()
                    elif agent_coords[1] < battery_coords[1]:
                        function_4()
                    elif agent_coords[1] > battery_coords[1]:
                        function_3()
                    else:
                        function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short-term goal is to navigate towards the location of the batteries on the map, and collect them to maintain a high energy level.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    for battery in batteries.values():
                        while agent['coordinates'] != battery:
                            if agent['coordinates'][0] < battery[0]:
                                function_2()
                            elif agent['coordinates'][0] > battery[0]:
                                function_1()
                            if agent['coordinates'][1] < battery[1]:
                                function_4()
                            elif agent['coordinates'][1] > battery[1]:
                                function_3()
                        function_5()
                
    Intention ID: [14]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of batteries on the map and collect them, taking into account the boundary checks and avoiding infinite loops.
                def function_14():
                    global belief_set
                    safety_counter = 0
                    while belief_set['agent']['coordinates'] != belief_set['batteries'][1
                        ] and safety_counter < 100:
                        if belief_set['agent']['coordinates'][0] > belief_set['batteries'][1][0
                            ]:
                            function_1()
                        elif belief_set['agent']['coordinates'][0] < belief_set['batteries'][1
                            ][0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] > belief_set['batteries'][1
                            ][1]:
                            function_3()
                        elif belief_set['agent']['coordinates'][1] < belief_set['batteries'][1
                            ][1]:
                            function_4()
                        safety_counter += 1
                    if belief_set['agent']['coordinates'] == belief_set['batteries'][1]:
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent should aim to collect keys scattered across the map, keeping its energy level optimal, to unlock special bonuses or areas that enhance its performance and score.
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops.
                def function_15():
                    global belief_set
                    key_position = belief_set['keys'][1]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    while agent_position != key_position:
                        if key_position[0] < agent_position[0]:
                            function_1()
                        elif key_position[0] > agent_position[0]:
                            function_2()
                        if key_position[1] < agent_position[1]:
                            function_3()
                        elif key_position[1] > agent_position[1]:
                            function_4()
                    function_5()
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is to navigate the agent towards the location of the key on the map and collect it, taking into account the boundary checks and avoiding infinite loops. It ensures the agent's position in the belief set is updated after each action and includes a condition to break the loop if the key's position is unreachable or if the agent's energy is insufficient.
                def function_16():
                    global belief_set
                    key_coord = belief_set['keys'][1]['coordinates']
                    while belief_set['agent']['coordinates'] != key_coord and belief_set[
                        'agent']['energy'] > 10:
                        if belief_set['agent']['coordinates'][0] < key_coord[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > key_coord[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < key_coord[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > key_coord[1]:
                            function_3()
                        belief_set['agent']['coordinates'] = key_coord
                    if belief_set['agent']['coordinates'] == key_coord and belief_set['agent'][
                        'energy'] > 10:
                        function_5()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['agent']['energy'] > 50 and not belief_set['agent']['has_key'
        ] and len(belief_set['keys']) > 0:
        return True
    return False



Desire 5: The agent should aim to explore the entire map, identifying all objects and their locations, while managing its energy consumption effectively.
    Intention ID: [17]
    Executable: False
    Description: The agent should move towards the unexplored part of the map, by choosing the next walkable cell, while ensuring it has enough energy to perform the movement. If the agent's energy is below a certain threshold, it should navigate towards the nearest battery to recharge.
                def function_17():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    map_grid = belief_set['map']['grid']
                    unexplored_cells = [cell for cell in map_grid if cell['cell_type'] ==
                        'walkable' and cell['cell_coordinates'] not in belief_set['agent'][
                        'visited_cells']]
                    if belief_set['agent']['energy'] > 10:
                        if unexplored_cells:
                            next_cell = unexplored_cells[0]
                            if next_cell['cell_coordinates'][0] < agent_coordinates[0]:
                                function_1()
                            elif next_cell['cell_coordinates'][0] > agent_coordinates[0]:
                                function_2()
                            elif next_cell['cell_coordinates'][1] < agent_coordinates[1]:
                                function_3()
                            else:
                                function_4()
                        else:
                            function_5()
                    else:
                        function_14()
                
    Intention ID: [18]
    Executable: False
    Description: The agent's short term goal is to move to the next unexplored cell in the map. If the agent's energy level is below a threshold, the agent should move towards the nearest battery to recharge.
                def function_18():
                    global belief_set
                    energy_threshold = 30
                    energy = belief_set['agent']['energy']
                    if energy < energy_threshold:
                        function_14()
                    else:
                        function_1() if belief_set['agent']['coordinates'][0
                            ] > 0 else function_2()
                        function_3() if belief_set['agent']['coordinates'][1
                            ] > 0 else function_4()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to move the agent to an adjacent cell, if it's a walkable cell and the agent's energy is above a certain threshold. If the agent's energy goes below this threshold, the agent will stop moving to conserve energy.
                def function_19():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if agent_coords[0] > 0 and belief_set['map']['grid'][agent_coords[0
                            ] - 1][agent_coords[1]]['cell_type'] == 'walkable':
                            function_1()
                        elif agent_coords[0] < belief_set['map']['width'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0] + 1][agent_coords[1]]['cell_type'
                            ] == 'walkable':
                            function_2()
                        elif agent_coords[1] > 0 and belief_set['map']['grid'][agent_coords[0]
                            ][agent_coords[1] - 1]['cell_type'] == 'walkable':
                            function_3()
                        elif agent_coords[1] < belief_set['map']['height'] - 1 and belief_set[
                            'map']['grid'][agent_coords[0]][agent_coords[1] + 1]['cell_type'
                            ] == 'walkable':
                            function_4()
                    else:
                        pass
                
Executable: False
Trigger function:
None


Desire 6: The agent should endeavor to explore the entire map, identifying the locations of all items, while maintaining a high energy level and avoiding any hazards.
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate while maintaining a high energy level. The agent will move from cell to cell using function_4 and if its energy level drops below 30, it will use function_14 to navigate towards the battery to recharge.
                def function_20():
                    global belief_set
                    while belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [21]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent will navigate towards the nearest battery to recharge.
                def function_21():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] > 30:
                        function_4()
                    if belief_set['agent']['energy'] <= 30:
                        function_14()
                
    Intention ID: [22]
    Executable: False
    Description: The agent's short term goal is to explore the map in the positive direction of the second coordinate until it reaches the edge of the map or its energy level drops below 30. Upon reaching the boundary or energy dropping below 30, the agent should navigate towards the nearest battery to recharge.
                def function_22():
                    global belief_set
                    while belief_set['agent']['coordinates'][1] < belief_set['map']['height'
                        ] - 1 and belief_set['agent']['energy'] >= 30:
                        function_4()
                    if belief_set['agent']['energy'] < 30:
                        function_14()
                
Executable: False
Trigger function:
None


Desire 7: The agent should aim to explore the entire map, identifying all walkable cells, while maintaining a high level of energy and collecting any objects of interest it encounters along the way.
    Intention ID: [23]
    Executable: False
    Description: The short term goal is for the agent to move one cell to the right, if it's a walkable cell and if the agent's energy level is above a certain threshold, to continue exploring the map and conserving energy.
                def function_23():
                    global belief_set
                    if belief_set['agent']['energy'] > 20:
                        function_4()
                
    Intention ID: [24]
    Executable: True
    Description: The agent's short term goal is to move one cell down on the map if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy.
                def function_24():
                    global belief_set
                    if belief_set['agent']['energy'] > 50:
                        new_coordinates = [belief_set['agent']['coordinates'][0] + 1,
                            belief_set['agent']['coordinates'][1]]
                        for cell in belief_set['map']['grid']:
                            if cell['cell_coordinates'] == new_coordinates and cell['cell_type'
                                ] == 'walkable':
                                function_2()
                                break
                
    Intention ID: [25]
    Executable: False
    Description: The short term goal is for the agent to move one cell in each direction (up, down, left, right) if it is a walkable cell and the agent's energy is above 50, to continue exploring the map and conserving energy. If there is an object in the same cell as the agent, it will pick it up.
                def function_25():
                    global belief_set
                    agent = belief_set['agent']
                    if agent['energy'] > 50:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                        function_5()
                    else:
                        pass
                
    Intention ID: [26]
    Executable: False
    Description: The short term goal is to move the agent one cell to the right on the map if it's a walkable cell and the agent's energy is above a certain threshold, to continue exploring the map, conserving energy and picking up any objects found along the way.
                def function_26():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    agent_energy = belief_set['agent']['energy']
                    map_grid = belief_set['map']['grid']
                    if agent_energy > 50:
                        for cell in map_grid:
                            if cell['cell_coordinates'] == [agent_coordinates[0], 
                                agent_coordinates[1] + 1] and cell['cell_type'] == 'walkable':
                                function_4()
                                function_5()
                                break
                
    Intention ID: [27]
    Executable: False
    Description: The short term goal is for the agent to move left, down, right and up successively, provided each direction is a walkable cell and the agent's energy is sufficient. This allows the agent to explore the map while conserving energy.
                def function_27():
                    global belief_set
                    x, y = belief_set['agent']['coordinates']
                    if belief_set['agent']['energy'] > 50:
                        if belief_set['map']['grid'][y][x - 1]['cell_type'] == 'walkable':
                            function_1()
                        if belief_set['map']['grid'][y - 1][x]['cell_type'] == 'walkable':
                            function_3()
                        if belief_set['map']['grid'][y][x + 1]['cell_type'] == 'walkable':
                            function_2()
                        if belief_set['map']['grid'][y + 1][x]['cell_type'] == 'walkable':
                            function_4()
                
Executable: False
Trigger function:
None


Desire 8: The agent should aim to collect all the keys in the environment and use them to unlock all the doors, while maintaining sufficient energy levels by collecting batteries when needed.
    Intention ID: [28]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest key, if it doesn't already have one, and pick it up. If the agent already has a key, it should move towards the nearest door and unlock it.
                def function_28():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    key_coordinates = [item['coordinates'] for item in belief_set['keys'].
                        values()]
                    door_coordinates = [item['coordinates'] for item in belief_set['doors']
                        .values()]
                    if belief_set['agent']['has_key'] == False:
                        if key_coordinates:
                            target_key_coordinates = key_coordinates[0]
                            if target_key_coordinates[0] < agent_coordinates[0]:
                                function_1()
                            elif target_key_coordinates[0] > agent_coordinates[0]:
                                function_2()
                            elif target_key_coordinates[1] < agent_coordinates[1]:
                                function_3()
                            elif target_key_coordinates[1] > agent_coordinates[1]:
                                function_4()
                            else:
                                function_5()
                    elif door_coordinates:
                        target_door_coordinates = door_coordinates[0]
                        if target_door_coordinates[0] < agent_coordinates[0]:
                            function_1()
                        elif target_door_coordinates[0] > agent_coordinates[0]:
                            function_2()
                        elif target_door_coordinates[1] < agent_coordinates[1]:
                            function_3()
                        elif target_door_coordinates[1] > agent_coordinates[1]:
                            function_4()
                
    Intention ID: [29]
    Executable: False
    Description: The agent's short term goal is to move towards the key, if it is in a nearby cell, and pick it up. If the agent's energy drops below a certain threshold, it should move towards the nearest battery and pick it up to replenish its energy.
                def function_29():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    key_coordinates = belief_set['keys'][2]['coordinates']
                    battery_coordinates = belief_set['batteries'][2]
                    if belief_set['agent']['energy'] < 30:
                        if battery_coordinates[0] > agent_coordinates[0]:
                            function_2()
                        elif battery_coordinates[0] < agent_coordinates[0]:
                            function_1()
                        elif battery_coordinates[1] > agent_coordinates[1]:
                            function_4()
                        elif battery_coordinates[1] < agent_coordinates[1]:
                            function_3()
                        function_5()
                    else:
                        if key_coordinates[0] > agent_coordinates[0]:
                            function_2()
                        elif key_coordinates[0] < agent_coordinates[0]:
                            function_1()
                        elif key_coordinates[1] > agent_coordinates[1]:
                            function_4()
                        elif key_coordinates[1] < agent_coordinates[1]:
                            function_3()
                        function_5()
                
    Intention ID: [30]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door if the agent has a key, and unlock it. If the agent's energy drops below a certain threshold, it should move towards the nearest battery and pick it up to replenish its energy.
                def function_30():
                    global belief_set
                    if belief_set['agent']['has_key']:
                        for door in belief_set['doors'].values():
                            if door['coordinates'] == belief_set['agent']['coordinates']:
                                function_5()
                    elif belief_set['agent']['energy'] < 50:
                        function_29()
                    else:
                        function_24()
                
    Intention ID: [31]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door, if the agent has a key and the agent's energy is above a certain threshold, to unlock the door and continue exploring the map. If the agent doesn't have a key, it should move towards the nearest key and pick it up. If the agent's energy drops below a certain threshold, it should move towards the nearest battery and pick it up to replenish its energy.
                def function_31():
                    global belief_set
                    agent = belief_set['agent']
                    keys = belief_set['keys']
                    doors = belief_set['doors']
                    batteries = belief_set['batteries']
                    if agent['energy'] < 30:
                        function_29()
                    elif not agent['has_key'] and keys:
                        function_29()
                    else:
                        nearest_door = min(doors, key=lambda x: abs(doors[x]['coordinates']
                            [0] - agent['coordinates'][0]) + abs(doors[x]['coordinates'][1] -
                            agent['coordinates'][1]))
                        door_x, door_y = doors[nearest_door]['coordinates']
                        agent_x, agent_y = agent['coordinates']
                        if door_x > agent_x:
                            function_2()
                        elif door_x < agent_x:
                            function_1()
                        elif door_y > agent_y:
                            function_4()
                        else:
                            function_3()
                
    Intention ID: [32]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest door that has not been unlocked, if the agent has a key. If the agent's energy drops below a certain threshold, it should move towards the nearest battery and pick it up to replenish its energy levels.
                def function_32():
                    global belief_set
                    if belief_set['agent']['energy'] > 50:
                        if belief_set['agent']['has_key']:
                            for door in belief_set['doors'].values():
                                if not door.get('unlocked', False):
                                    if door['coordinates'][0] > belief_set['agent'][
                                        'coordinates'][0]:
                                        function_2()
                                        break
                                    elif door['coordinates'][0] < belief_set['agent'][
                                        'coordinates'][0]:
                                        function_1()
                                        break
                                    elif door['coordinates'][1] > belief_set['agent'][
                                        'coordinates'][1]:
                                        function_4()
                                        break
                                    elif door['coordinates'][1] < belief_set['agent'][
                                        'coordinates'][1]:
                                        function_3()
                                        break
                    else:
                        function_29()
                        function_5()
                
Executable: False
Trigger function:
None


Desire 9: The long term goal of the agent is to collect all the parcels and deliver them to the delivery cell, while managing energy reserves by collecting batteries when necessary, and using keys to open doors when required.
Executable: False
Trigger function:
None



2024-11-08 17:51:54,323 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent']['parcels_carried_ids'] and belief_set['agent']['coordinates'] == [0, 0]:
        function_6()
    elif belief_set['agent']['coordinates'][0] > 0:
        function_1()
    elif belief_set['agent']['coordinates'][1] > 0:
        function_3()
    else:
        function_5()
2024-11-08 17:51:54,324 - INFO - The intention is valid.
2024-11-08 17:51:54,352 - INFO - Intention added to desire 9
2024-11-08 17:51:54,365 - INFO - Running intention 33 ...
2024-11-08 17:51:54,545 - INFO - Belief set thread started ...
2024-11-08 17:51:54,558 - INFO - Plan thread started ...
2024-11-08 17:51:54,577 - INFO - Started subprocess...
2024-11-08 17:51:54,577 - INFO - Belief set before intention 33 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 92}, 'parcels': {3: {'id': 3, 'coordinates': [0, 2], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 2], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [0, 2], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:54,884 - INFO - Executing action action_3 ...
2024-11-08 17:51:55,191 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 91}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-08 17:51:55,528 - INFO - Plan thread terminated.
2024-11-08 17:51:55,597 - INFO - Belief set thread terminated.
2024-11-08 17:51:55,673 - INFO - Intention 33 execution has finished. Threads and subprocess terminated. Plan: ['action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 91}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}]]
2024-11-08 17:51:55,704 - INFO - Belief set after intention 33 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 91}, 'parcels': {3: {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:51:59,425 - INFO - Invalidating intention 33 ...
2024-11-08 17:52:06,088 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent']['coordinates'] == [0, 0] and len(belief_set['agent']['parcels_carried_ids']) > 0:
        function_6()
    else:
        function_11()
    if belief_set['agent']['energy'] < 50 and belief_set['agent']['coordinates'] != [3, 2]:
        function_2() if belief_set['agent']['coordinates'][0] < [3, 2][0] else function_1()
        function_4() if belief_set['agent']['coordinates'][1] < [3, 2][1] else function_3()
        function_5()
2024-11-08 17:52:06,092 - INFO - The intention is valid.
2024-11-08 17:52:06,144 - INFO - Intention added to desire 9
2024-11-08 17:52:06,144 - INFO - Running intention 34 ...
2024-11-08 17:52:06,297 - INFO - Belief set thread started ...
2024-11-08 17:52:06,304 - INFO - Plan thread started ...
2024-11-08 17:52:06,322 - INFO - Started subprocess...
2024-11-08 17:52:06,322 - INFO - Belief set before intention 34 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [3, 4], 'has_key': True, 'score': 0, 'energy': 91}, 'parcels': {3: {'id': 3, 'coordinates': [0, 1], 'score': 15, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 1], 'score': 42, 'carried_by_id': 1}}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:52:06,659 - INFO - Executing action action_3 ...
2024-11-08 17:52:06,872 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}]
2024-11-08 17:52:07,209 - INFO - Executing action action_6 ...
2024-11-08 17:52:07,448 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 89}}]
2024-11-08 17:52:07,710 - INFO - Belief set thread terminated.
2024-11-08 17:52:07,786 - INFO - Plan thread terminated.
2024-11-08 17:52:07,823 - INFO - Intention 34 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 15, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 42, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 89}}]]
2024-11-08 17:52:07,823 - INFO - Belief set after intention 34 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 89}, 'parcels': {}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:52:11,788 - INFO - Invalidating intention 34 ...
2024-11-08 17:52:14,787 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent']['energy'] > 50:
        function_7()
        function_11()
2024-11-08 17:52:14,787 - INFO - The intention is valid.
2024-11-08 17:52:14,794 - INFO - Intention added to desire 9
2024-11-08 17:52:14,806 - INFO - Running intention 35 ...
2024-11-08 17:52:15,013 - INFO - Belief set thread started ...
2024-11-08 17:52:15,025 - INFO - Plan thread started ...
2024-11-08 17:52:15,032 - INFO - Started subprocess...
2024-11-08 17:52:15,032 - INFO - Belief set before intention 35 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 89}, 'parcels': {}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:52:15,432 - INFO - Executing action action_2 ...
2024-11-08 17:52:15,638 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-08 17:52:15,931 - INFO - Executing action action_2 ...
2024-11-08 17:52:16,219 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 87}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 0], 'carried_by_id': 1}}]
2024-11-08 17:52:16,527 - INFO - Executing action action_4 ...
2024-11-08 17:52:16,749 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 86}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 1], 'carried_by_id': 1}}]
2024-11-08 17:52:17,058 - INFO - Executing action action_4 ...
2024-11-08 17:52:17,308 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}]
2024-11-08 17:52:17,617 - INFO - Executing action action_4 ...
2024-11-08 17:52:17,866 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}]
2024-11-08 17:52:18,146 - INFO - Executing action action_5 ...
2024-11-08 17:52:18,381 - INFO - Action action_5 executed. Events received: []
2024-11-08 17:52:18,709 - INFO - Executing action action_1 ...
2024-11-08 17:52:18,963 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 83}}]
2024-11-08 17:52:19,373 - INFO - Executing action action_1 ...
2024-11-08 17:52:19,602 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-08 17:52:19,882 - INFO - Executing action action_3 ...
2024-11-08 17:52:20,156 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 81}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-08 17:52:20,460 - INFO - Executing action action_3 ...
2024-11-08 17:52:20,666 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-08 17:52:21,046 - INFO - Executing action action_3 ...
2024-11-08 17:52:21,265 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 79}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-08 17:52:21,583 - INFO - Belief set thread terminated.
2024-11-08 17:52:21,615 - INFO - Plan thread terminated.
2024-11-08 17:52:21,659 - INFO - Intention 35 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_5', 'action_1', 'action_1', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 87}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 86}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 85}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [2, 3], 'carried_by_id': 1}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 83}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 81}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 79}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}]]
2024-11-08 17:52:21,659 - INFO - Belief set after intention 35 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [3, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [3, 3], 'cell_type': 'walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 57, 'energy': 79}, 'parcels': {}, 'batteries': {2: [3, 2]}, 'keys': {2: {'id': 2, 'coordinates': [0, 0], 'carried_by_id': 1}}, 'doors': {2: {'id': 2, 'coordinates': [0, 1]}, 3: {'id': 3, 'coordinates': [1, 0]}}}
2024-11-08 17:52:27,867 - INFO - Invalidating intention 35 ...
2024-11-08 17:52:27,886 - INFO - Invalidating intention 1 ...
2024-11-08 17:52:27,886 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-08 17:52:27,886 - INFO - Invalidating intention 3 ...
2024-11-08 17:52:27,886 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-08 17:52:27,898 - INFO - Invalidating intention 5 ...
2024-11-08 17:52:27,898 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-08 17:52:27,898 - INFO - Invalidating intention 6 ...
2024-11-08 17:52:27,898 - INFO - Intention 6 is a base action. It cannot be invalidated.
