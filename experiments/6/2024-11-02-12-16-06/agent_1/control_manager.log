2024-11-02 12:16:07,697 - INFO - Loading actions from agent_dir/actions.json ...
2024-11-02 12:16:07,735 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-11-02 12:17:24,309 - INFO - Checking if a desire has been triggered ...
Desires: Empty
2024-11-02 12:17:24,309 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:17:24,309 - INFO - No desire has been triggered.
2024-11-02 12:17:24,314 - INFO - No desire triggered.
2024-11-02 12:17:25,686 - INFO - Desire added: 1. Desires:
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
Executable: False
Trigger function:
None



2024-11-02 12:17:35,651 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['energy'] < 50:
        battery_spawn = next(cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
        if agent['coordinates'][0] > battery_spawn[0]:
            function_1()
        elif agent['coordinates'][0] < battery_spawn[0]:
            function_2()
        elif agent['coordinates'][1] > battery_spawn[1]:
            function_3()
        else:
            function_4()
    else:
        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
        if agent['coordinates'][0] > parcel_spawn[0]:
            function_1()
        elif agent['coordinates'][0] < parcel_spawn[0]:
            function_2()
        elif agent['coordinates'][1] > parcel_spawn[1]:
            function_3()
        else:
            function_4()
2024-11-02 12:17:35,689 - INFO - The intention is valid.
2024-11-02 12:17:35,696 - INFO - Intention added to desire 1
2024-11-02 12:17:35,715 - INFO - Running intention 7 ...
2024-11-02 12:17:35,897 - INFO - Belief set thread started ...
2024-11-02 12:17:35,935 - INFO - Plan thread started ...
2024-11-02 12:17:35,972 - INFO - Started subprocess...
2024-11-02 12:17:35,972 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'score': 0, 'energy': 100}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:17:36,325 - INFO - Executing action action_1 ...
2024-11-02 12:17:36,575 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 0, 'energy': 98}}]
2024-11-02 12:17:36,900 - INFO - Plan thread terminated.
2024-11-02 12:17:36,938 - INFO - Belief set thread terminated.
2024-11-02 12:17:36,992 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 0, 'energy': 98}}]]
2024-11-02 12:17:36,998 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 0, 'energy': 98}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:17:41,407 - INFO - Invalidating intention 7 ...
2024-11-02 12:17:48,862 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent'][1]['coordinates']
    parcels_coordinates = belief_set['parcels'][1]['coordinates']
    while agent_coordinates[0] < parcels_coordinates[0]:
        function_2()
        agent_coordinates[0] += 1
    while agent_coordinates[0] > parcels_coordinates[0]:
        function_1()
        agent_coordinates[0] -= 1
    while agent_coordinates[1] < parcels_coordinates[1]:
        function_4()
        agent_coordinates[1] += 1
    while agent_coordinates[1] > parcels_coordinates[1]:
        function_3()
        agent_coordinates[1] -= 1
    function_5()
2024-11-02 12:17:48,862 - INFO - The intention is valid.
2024-11-02 12:17:48,876 - INFO - Intention added to desire 1
2024-11-02 12:17:48,888 - INFO - Running intention 8 ...
2024-11-02 12:17:49,070 - INFO - Belief set thread started ...
2024-11-02 12:17:49,096 - INFO - Plan thread started ...
2024-11-02 12:17:49,102 - INFO - Started subprocess...
2024-11-02 12:17:49,126 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 0, 'energy': 98}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:17:49,399 - INFO - Executing action action_3 ...
2024-11-02 12:17:49,648 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 0, 'energy': 96}}]
2024-11-02 12:17:49,952 - INFO - Executing action action_3 ...
2024-11-02 12:17:50,182 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 0, 'energy': 94}}]
2024-11-02 12:17:50,480 - INFO - Executing action action_5 ...
2024-11-02 12:17:50,712 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 92}}]
2024-11-02 12:17:51,000 - INFO - Plan thread terminated.
2024-11-02 12:17:51,001 - INFO - Belief set thread terminated.
2024-11-02 12:17:51,051 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 0, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 0, 'energy': 94}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 92}}]]
2024-11-02 12:17:51,069 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 92}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}}
2024-11-02 12:18:02,293 - INFO - Testing intention 
def function():
    global belief_set
    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell')
    agent = belief_set['agent'][1]
    while agent['coordinates'] != delivery_cell['cell_coordinates']:
        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
            function_4()
        else:
            function_3()
    function_6()
    return
2024-11-02 12:18:02,293 - INFO - The intention is valid.
2024-11-02 12:18:02,300 - INFO - Intention added to desire 1
2024-11-02 12:18:02,300 - INFO - Running intention 9 ...
2024-11-02 12:18:02,568 - INFO - Belief set thread started ...
2024-11-02 12:18:02,600 - INFO - Plan thread started ...
2024-11-02 12:18:02,606 - INFO - Started subprocess...
2024-11-02 12:18:02,637 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 92}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}}
2024-11-02 12:18:02,977 - INFO - Executing action action_2 ...
2024-11-02 12:18:03,219 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:18:03,525 - INFO - Executing action action_2 ...
2024-11-02 12:18:03,838 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 88}}]
2024-11-02 12:18:04,128 - INFO - Executing action action_2 ...
2024-11-02 12:18:04,359 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:04,681 - INFO - Executing action action_2 ...
2024-11-02 12:18:04,899 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:05,186 - INFO - Executing action action_2 ...
2024-11-02 12:18:05,410 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:05,714 - INFO - Executing action action_2 ...
2024-11-02 12:18:05,969 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:06,313 - INFO - Executing action action_2 ...
2024-11-02 12:18:06,538 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:06,887 - INFO - Executing action action_2 ...
2024-11-02 12:18:07,116 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:07,512 - INFO - Executing action action_2 ...
2024-11-02 12:18:07,731 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:08,074 - INFO - Executing action action_2 ...
2024-11-02 12:18:08,305 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:08,592 - INFO - Executing action action_2 ...
2024-11-02 12:18:08,824 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:09,104 - INFO - Executing action action_2 ...
2024-11-02 12:18:09,318 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:09,655 - INFO - Executing action action_2 ...
2024-11-02 12:18:09,867 - INFO - Action action_2 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-02 12:18:10,197 - INFO - Executing action action_2 ...
2024-11-02 12:18:10,448 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:10,747 - INFO - Executing action action_2 ...
2024-11-02 12:18:10,958 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:11,250 - INFO - Executing action action_2 ...
2024-11-02 12:18:11,512 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:11,915 - INFO - Executing action action_2 ...
2024-11-02 12:18:12,157 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:12,521 - INFO - Executing action action_2 ...
2024-11-02 12:18:12,796 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:13,226 - INFO - Executing action action_2 ...
2024-11-02 12:18:13,476 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:13,835 - INFO - Executing action action_2 ...
2024-11-02 12:18:14,042 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:14,378 - INFO - Executing action action_2 ...
2024-11-02 12:18:14,632 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:15,045 - INFO - Executing action action_2 ...
2024-11-02 12:18:15,269 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:15,605 - INFO - Executing action action_2 ...
2024-11-02 12:18:15,843 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:16,194 - INFO - Executing action action_2 ...
2024-11-02 12:18:16,401 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:16,750 - INFO - Executing action action_2 ...
2024-11-02 12:18:16,972 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:17,321 - INFO - Executing action action_2 ...
2024-11-02 12:18:17,624 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:18:17,742 - ERROR - Error during intention 9 execution. Intention 9 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-02 12:18:17,799 - INFO - Belief set thread terminated.
2024-11-02 12:18:17,879 - INFO - Plan thread terminated.
2024-11-02 12:18:17,948 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 88}}], [], [], [], [], [], [], [], [], [], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-02 12:18:17,973 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 88}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:18:24,420 - INFO - Invalidating intention 9 ...
2024-11-02 12:18:30,963 - INFO - Testing intention 
def function():
    global belief_set
    delivery_cell = None
    for cell in belief_set['map']['grid']:
        if cell['cell_type'] == 'delivery_cell':
            delivery_cell = cell
            break
    agent = belief_set['agent'][1]
    while agent['coordinates'] != delivery_cell['cell_coordinates']:
        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
            function_1()
        else:
            if agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                function_4()
            else:
                function_3()
    function_6()
2024-11-02 12:18:30,963 - INFO - The intention is valid.
2024-11-02 12:18:30,983 - INFO - Intention added to desire 1
2024-11-02 12:18:30,983 - INFO - Running intention 10 ...
2024-11-02 12:18:31,152 - INFO - Belief set thread started ...
2024-11-02 12:18:31,171 - INFO - Plan thread started ...
2024-11-02 12:18:31,171 - INFO - Started subprocess...
2024-11-02 12:18:31,201 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 88}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:18:31,479 - INFO - Executing action action_4 ...
2024-11-02 12:18:31,717 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 86}}]
2024-11-02 12:18:32,097 - INFO - Executing action action_4 ...
2024-11-02 12:18:32,357 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 84}}]
2024-11-02 12:18:32,673 - INFO - Executing action action_4 ...
2024-11-02 12:18:32,886 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:18:33,218 - INFO - Executing action action_4 ...
2024-11-02 12:18:33,431 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:33,754 - INFO - Executing action action_4 ...
2024-11-02 12:18:33,961 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:34,297 - INFO - Executing action action_4 ...
2024-11-02 12:18:34,516 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:34,834 - INFO - Executing action action_4 ...
2024-11-02 12:18:35,046 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:35,388 - INFO - Executing action action_4 ...
2024-11-02 12:18:35,667 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:36,023 - INFO - Executing action action_4 ...
2024-11-02 12:18:36,228 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:36,537 - INFO - Executing action action_4 ...
2024-11-02 12:18:36,767 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:37,146 - INFO - Executing action action_4 ...
2024-11-02 12:18:37,376 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:37,724 - INFO - Executing action action_4 ...
2024-11-02 12:18:37,967 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:38,327 - INFO - Executing action action_4 ...
2024-11-02 12:18:38,546 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:38,888 - INFO - Executing action action_4 ...
2024-11-02 12:18:39,138 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:39,551 - INFO - Executing action action_4 ...
2024-11-02 12:18:39,836 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:40,196 - INFO - Executing action action_4 ...
2024-11-02 12:18:40,407 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:40,794 - INFO - Executing action action_4 ...
2024-11-02 12:18:41,007 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:41,487 - INFO - Executing action action_4 ...
2024-11-02 12:18:41,692 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:41,954 - INFO - Executing action action_4 ...
2024-11-02 12:18:42,179 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:42,460 - INFO - Executing action action_4 ...
2024-11-02 12:18:42,691 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:42,979 - INFO - Executing action action_4 ...
2024-11-02 12:18:43,189 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:43,507 - INFO - Executing action action_4 ...
2024-11-02 12:18:43,780 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:44,110 - INFO - Executing action action_4 ...
2024-11-02 12:18:44,370 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:44,733 - INFO - Executing action action_4 ...
2024-11-02 12:18:44,946 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:45,258 - INFO - Executing action action_4 ...
2024-11-02 12:18:45,489 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:45,837 - INFO - Executing action action_4 ...
2024-11-02 12:18:46,092 - INFO - Action action_4 executed. Events received: []
2024-11-02 12:18:46,286 - ERROR - Error during intention 10 execution. Intention 10 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-02 12:18:46,348 - INFO - Belief set thread terminated.
2024-11-02 12:18:46,367 - INFO - Plan thread terminated.
2024-11-02 12:18:46,380 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 86}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 84}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-02 12:18:46,380 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 82}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:18:56,452 - INFO - Invalidating intention 10 ...
2024-11-02 12:19:12,217 - INFO - Testing intention 
def function():
    global belief_set
    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']['grid'] if item['cell_type'] == 'delivery_cell'][0]
    agent = belief_set['agent'][1]
    while agent['coordinates'] != delivery_cell:
        if agent['coordinates'][0] > delivery_cell[0]:
            function_1()
        elif agent['coordinates'][0] < delivery_cell[0]:
            function_2()
        elif agent['coordinates'][1] > delivery_cell[1]:
            function_3()
        elif agent['coordinates'][1] < delivery_cell[1]:
            function_4()
        agent = belief_set['agent'][1]
        if agent['coordinates'] == [item['cell_coordinates'] for item in belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'][0] and agent['energy'] < 50:
            function_5()
    function_6()

2024-11-02 12:19:12,218 - INFO - The intention is valid.
2024-11-02 12:19:12,231 - INFO - Intention added to desire 1
2024-11-02 12:19:12,231 - INFO - Running intention 11 ...
2024-11-02 12:19:12,350 - INFO - Belief set thread started ...
2024-11-02 12:19:12,356 - INFO - Plan thread started ...
2024-11-02 12:19:12,363 - INFO - Started subprocess...
2024-11-02 12:19:12,363 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'score': 0, 'energy': 82}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 8: {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:19:12,652 - INFO - Executing action action_6 ...
2024-11-02 12:19:12,871 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 100, 'energy': 80}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:19:13,153 - INFO - Plan thread terminated.
2024-11-02 12:19:13,191 - INFO - Belief set thread terminated.
2024-11-02 12:19:13,228 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 100, 'energy': 80}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-02 12:19:13,241 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 100, 'energy': 80}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 8: {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:19:34,942 - INFO - Testing intention 
def function():
	global belief_set
	while belief_set['agent'][1]['coordinates'] != [0, 0]:
		if belief_set['agent'][1]['coordinates'][0] > 0:
			function_1()
		elif belief_set['agent'][1]['coordinates'][1] > 0:
			function_3()
	function_5()
	if belief_set['agent'][1]['energy'] < 50:
		while belief_set['agent'][1]['coordinates'] != [2, 0]:
			if belief_set['agent'][1]['coordinates'][0] < 2:
				function_2()
			elif belief_set['agent'][1]['coordinates'][1] > 0:
				function_3()
		function_5()
	while belief_set['agent'][1]['coordinates'] != [2, 3]:
		if belief_set['agent'][1]['coordinates'][0] < 2:
			function_2()
		elif belief_set['agent'][1]['coordinates'][1] < 3:
			function_4()
	function_6()
2024-11-02 12:19:34,942 - INFO - The intention is valid.
2024-11-02 12:19:34,943 - INFO - Intention added to desire 1
2024-11-02 12:19:34,943 - INFO - Running intention 12 ...
2024-11-02 12:19:35,144 - INFO - Belief set thread started ...
2024-11-02 12:19:35,182 - INFO - Plan thread started ...
2024-11-02 12:19:35,194 - INFO - Started subprocess...
2024-11-02 12:19:35,207 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 100, 'energy': 80}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 8: {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:19:35,553 - INFO - Executing action action_1 ...
2024-11-02 12:19:35,771 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 100, 'energy': 78}}]
2024-11-02 12:19:36,094 - INFO - Executing action action_1 ...
2024-11-02 12:19:36,318 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 100, 'energy': 76}}]
2024-11-02 12:19:36,736 - INFO - Executing action action_3 ...
2024-11-02 12:19:36,955 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 100, 'energy': 74}}]
2024-11-02 12:19:37,267 - INFO - Executing action action_3 ...
2024-11-02 12:19:37,495 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 100, 'energy': 72}}]
2024-11-02 12:19:37,818 - INFO - Executing action action_3 ...
2024-11-02 12:19:38,069 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 100, 'energy': 70}}]
2024-11-02 12:19:38,400 - INFO - Executing action action_5 ...
2024-11-02 12:19:38,639 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 68}}]
2024-11-02 12:19:38,925 - INFO - Executing action action_2 ...
2024-11-02 12:19:39,224 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 66}}]
2024-11-02 12:19:39,555 - INFO - Executing action action_2 ...
2024-11-02 12:19:39,831 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 64}}]
2024-11-02 12:19:40,149 - INFO - Executing action action_4 ...
2024-11-02 12:19:40,405 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 62}}]
2024-11-02 12:19:40,709 - INFO - Executing action action_4 ...
2024-11-02 12:19:40,977 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:19:41,287 - INFO - Executing action action_4 ...
2024-11-02 12:19:41,519 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 58}}]
2024-11-02 12:19:41,842 - INFO - Executing action action_6 ...
2024-11-02 12:19:42,068 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 56}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:19:42,362 - INFO - Belief set thread terminated.
2024-11-02 12:19:42,362 - INFO - Plan thread terminated.
2024-11-02 12:19:42,424 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 100, 'energy': 78}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 100, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 100, 'energy': 74}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 100, 'energy': 72}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 100, 'energy': 70}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 68}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 66}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 64}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 62}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [6, 7, 8, 9, 10], 'score': 100, 'energy': 58}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 56}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-02 12:19:42,437 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 56}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {}}
2024-11-02 12:19:50,838 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    # Check if there are parcels that are not carried by the agent
    if len(belief_set['parcels']) > 0:
        return True
    # Check if agent is carrying any parcels
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    # Check if agent's energy is less than 20, which would require the agent to recharge
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False
2024-11-02 12:19:50,839 - INFO - The trigger function is valid.
2024-11-02 12:19:50,839 - INFO - Trigger function added to desire 1.
2024-11-02 12:19:51,277 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: True
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: True
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False




2024-11-02 12:19:51,277 - INFO - Running trigger function for desire 1 ...
2024-11-02 12:19:51,277 - INFO - Trigger function for desire 1 has been executed. Result: False
2024-11-02 12:19:51,277 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:19:51,277 - INFO - No desire has been triggered.
2024-11-02 12:19:51,296 - INFO - No desire triggered.
2024-11-02 12:19:52,601 - INFO - Desire added: 2. Desires:
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: True
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: True
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
Executable: False
Trigger function:
None



2024-11-02 12:19:57,945 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['energy'] < 50:
        function_2()
        function_5()
    else:
        if agent['coordinates'][0] < belief_set['map']['width'] - 1:
            function_2()
        elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
            function_4()
        else:
            function_1()
            function_3()
2024-11-02 12:19:57,956 - INFO - The intention is valid.
2024-11-02 12:19:57,957 - INFO - Intention added to desire 2
2024-11-02 12:19:57,963 - INFO - Running intention 13 ...
2024-11-02 12:19:58,070 - INFO - Belief set thread started ...
2024-11-02 12:19:58,083 - INFO - Plan thread started ...
2024-11-02 12:19:58,083 - INFO - Started subprocess...
2024-11-02 12:19:58,126 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 56}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:19:58,389 - INFO - Executing action action_2 ...
2024-11-02 12:19:58,614 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:19:58,980 - INFO - Plan thread terminated.
2024-11-02 12:19:58,981 - INFO - Belief set thread terminated.
2024-11-02 12:19:59,025 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[]]
2024-11-02 12:19:59,025 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 56}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:20:04,154 - INFO - Invalidating intention 13 ...
2024-11-02 12:20:08,375 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['energy'] < 50:
        function_2()
    else:
        function_12()
2024-11-02 12:20:08,375 - INFO - The intention is valid.
2024-11-02 12:20:08,375 - INFO - Intention added to desire 2
2024-11-02 12:20:08,413 - INFO - Running intention 14 ...
2024-11-02 12:20:08,526 - INFO - Belief set thread started ...
2024-11-02 12:20:08,532 - INFO - Plan thread started ...
2024-11-02 12:20:08,545 - INFO - Started subprocess...
2024-11-02 12:20:08,601 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 56}}, 'batteries': {1: {'id': 1, 'coordinates': [2, 0]}}, 'parcels': {11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:20:08,859 - INFO - Executing action action_1 ...
2024-11-02 12:20:09,064 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 54}}]
2024-11-02 12:20:09,399 - INFO - Executing action action_1 ...
2024-11-02 12:20:09,648 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 52}}]
2024-11-02 12:20:09,979 - INFO - Executing action action_1 ...
2024-11-02 12:20:10,199 - INFO - Action action_1 executed. Events received: []
2024-11-02 12:20:10,554 - INFO - Executing action action_3 ...
2024-11-02 12:20:10,773 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 200, 'energy': 50}}]
2024-11-02 12:20:11,096 - INFO - Executing action action_3 ...
2024-11-02 12:20:11,313 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 200, 'energy': 48}}]
2024-11-02 12:20:11,662 - INFO - Executing action action_3 ...
2024-11-02 12:20:11,875 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 200, 'energy': 46}}, {'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-02 12:20:12,143 - INFO - Executing action action_5 ...
2024-11-02 12:20:12,367 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 44}}]
2024-11-02 12:20:12,655 - INFO - Executing action action_2 ...
2024-11-02 12:20:12,892 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 42}}]
2024-11-02 12:20:13,239 - INFO - Executing action action_2 ...
2024-11-02 12:20:13,481 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 40}}]
2024-11-02 12:20:13,832 - INFO - Executing action action_5 ...
2024-11-02 12:20:14,070 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [2, 0]}}]
2024-11-02 12:20:14,365 - INFO - Executing action action_4 ...
2024-11-02 12:20:14,600 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 98}}]
2024-11-02 12:20:14,917 - INFO - Executing action action_4 ...
2024-11-02 12:20:15,139 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 96}}]
2024-11-02 12:20:15,505 - INFO - Executing action action_4 ...
2024-11-02 12:20:15,753 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 94}}]
2024-11-02 12:20:16,070 - INFO - Executing action action_6 ...
2024-11-02 12:20:16,288 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 92}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:20:16,623 - INFO - Plan thread terminated.
2024-11-02 12:20:16,667 - INFO - Belief set thread terminated.
2024-11-02 12:20:16,680 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_5', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 54}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 200, 'energy': 52}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 200, 'energy': 50}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 200, 'energy': 48}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 200, 'energy': 46}}, {'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 44}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 42}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 40}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [2, 0]}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [11, 12], 'score': 200, 'energy': 94}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 92}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-02 12:20:16,680 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 92}}, 'batteries': {}, 'parcels': {}}
2024-11-02 12:20:28,837 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    location = agent['coordinates']
    energy = agent['energy']
    if energy < 50:
        function_14()
    else:
        unexplored_cells = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'walkable' and cell['cell_coordinates'] != location]
        if unexplored_cells:
            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell['cell_coordinates'][0] - location[0]) + abs(cell['cell_coordinates'][1] - location[1]))
            while location != nearest_cell['cell_coordinates']:
                if nearest_cell['cell_coordinates'][0] < location[0]:
                    function_1()
                elif nearest_cell['cell_coordinates'][0] > location[0]:
                    function_2()
                elif nearest_cell['cell_coordinates'][1] < location[1]:
                    function_3()
                elif nearest_cell['cell_coordinates'][1] > location[1]:
                    function_4()
                location = belief_set['agent'][1]['coordinates']
2024-11-02 12:20:28,856 - INFO - The intention is valid.
2024-11-02 12:20:28,857 - INFO - Intention added to desire 2
2024-11-02 12:20:28,857 - INFO - Running intention 15 ...
2024-11-02 12:20:28,996 - INFO - Belief set thread started ...
2024-11-02 12:20:29,015 - INFO - Plan thread started ...
2024-11-02 12:20:29,027 - INFO - Started subprocess...
2024-11-02 12:20:29,040 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 92}}, 'batteries': {}, 'parcels': {}}
2024-11-02 12:20:29,320 - INFO - Executing action action_1 ...
2024-11-02 12:20:29,531 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 90}}]
2024-11-02 12:20:29,862 - INFO - Executing action action_1 ...
2024-11-02 12:20:30,105 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 88}}]
2024-11-02 12:20:30,418 - INFO - Executing action action_2 ...
2024-11-02 12:20:30,674 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 86}}]
2024-11-02 12:20:30,962 - INFO - Plan thread terminated.
2024-11-02 12:20:30,962 - INFO - Belief set thread terminated.
2024-11-02 12:20:31,006 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 88}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 86}}]]
2024-11-02 12:20:31,025 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 86}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {}}
2024-11-02 12:20:35,854 - INFO - Invalidating intention 15 ...
2024-11-02 12:20:39,957 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent'][1]['energy'] < 50:
        function_14()
    else:
        function_12()
2024-11-02 12:20:39,982 - INFO - The intention is valid.
2024-11-02 12:20:39,982 - INFO - Intention added to desire 2
2024-11-02 12:20:39,983 - INFO - Running intention 16 ...
2024-11-02 12:20:40,113 - INFO - Belief set thread started ...
2024-11-02 12:20:40,120 - INFO - Plan thread started ...
2024-11-02 12:20:40,126 - INFO - Started subprocess...
2024-11-02 12:20:40,170 - INFO - Belief set before intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 86}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {13: {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:20:40,448 - INFO - Executing action action_1 ...
2024-11-02 12:20:40,654 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 84}}]
2024-11-02 12:20:40,940 - INFO - Executing action action_3 ...
2024-11-02 12:20:41,151 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 240, 'energy': 82}}]
2024-11-02 12:20:41,500 - INFO - Executing action action_3 ...
2024-11-02 12:20:41,745 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 240, 'energy': 80}}]
2024-11-02 12:20:42,064 - INFO - Executing action action_3 ...
2024-11-02 12:20:42,276 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 240, 'energy': 78}}]
2024-11-02 12:20:42,551 - INFO - Executing action action_5 ...
2024-11-02 12:20:42,788 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [13], 'score': 240, 'energy': 76}}]
2024-11-02 12:20:43,117 - INFO - Executing action action_2 ...
2024-11-02 12:20:43,403 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [13], 'score': 240, 'energy': 74}}]
2024-11-02 12:20:43,763 - INFO - Executing action action_2 ...
2024-11-02 12:20:44,052 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [13], 'score': 240, 'energy': 72}}]
2024-11-02 12:20:44,467 - INFO - Executing action action_4 ...
2024-11-02 12:20:44,758 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [13], 'score': 240, 'energy': 70}}]
2024-11-02 12:20:45,133 - INFO - Executing action action_4 ...
2024-11-02 12:20:45,345 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [13], 'score': 240, 'energy': 68}}]
2024-11-02 12:20:45,643 - INFO - Executing action action_4 ...
2024-11-02 12:20:45,911 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [13], 'score': 240, 'energy': 66}}]
2024-11-02 12:20:46,222 - INFO - Executing action action_6 ...
2024-11-02 12:20:46,437 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 64}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:20:46,761 - INFO - Plan thread terminated.
2024-11-02 12:20:46,812 - INFO - Belief set thread terminated.
2024-11-02 12:20:46,843 - INFO - Intention 16 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 240, 'energy': 84}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 240, 'energy': 82}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 240, 'energy': 80}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 240, 'energy': 78}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [13], 'score': 240, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [13], 'score': 240, 'energy': 74}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [13], 'score': 240, 'energy': 72}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [13], 'score': 240, 'energy': 70}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [13], 'score': 240, 'energy': 68}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [13], 'score': 240, 'energy': 66}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 64}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-02 12:20:46,843 - INFO - Belief set after intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 64}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {}}
2024-11-02 12:20:51,992 - INFO - Invalidating intention 16 ...
2024-11-02 12:21:02,674 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['energy'] < 50:
        function_14()
    else:
        if agent['coordinates'][0] + 1 < belief_set['map']['width'] and {'cell_coordinates': [agent['coordinates'][0] + 1, agent['coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map']['grid']:
            function_2()
        elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent['coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map']['grid']:
            function_1()
        elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
            function_4()
        elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][1] - 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
            function_3()
2024-11-02 12:21:02,674 - INFO - The intention is valid.
2024-11-02 12:21:02,700 - INFO - Intention added to desire 2
2024-11-02 12:21:02,713 - INFO - Running intention 17 ...
2024-11-02 12:21:02,918 - INFO - Belief set thread started ...
2024-11-02 12:21:02,943 - INFO - Plan thread started ...
2024-11-02 12:21:02,975 - INFO - Started subprocess...
2024-11-02 12:21:02,981 - INFO - Belief set before intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 64}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:21:03,292 - INFO - Executing action action_1 ...
2024-11-02 12:21:03,545 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 62}}]
2024-11-02 12:21:03,900 - INFO - Belief set thread terminated.
2024-11-02 12:21:03,919 - INFO - Plan thread terminated.
2024-11-02 12:21:03,969 - INFO - Intention 17 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 62}}]]
2024-11-02 12:21:03,988 - INFO - Belief set after intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 62}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:21:09,030 - INFO - Invalidating intention 17 ...
2024-11-02 12:21:09,030 - INFO - Invalidating intention 1 ...
2024-11-02 12:21:09,030 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-02 12:21:09,030 - INFO - Invalidating intention 2 ...
2024-11-02 12:21:09,030 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-02 12:21:09,036 - INFO - Invalidating intention 3 ...
2024-11-02 12:21:09,036 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-02 12:21:09,036 - INFO - Invalidating intention 4 ...
2024-11-02 12:21:09,042 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-02 12:21:09,048 - INFO - Invalidating intention 5 ...
2024-11-02 12:21:09,048 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-02 12:21:09,048 - INFO - Invalidating intention 6 ...
2024-11-02 12:21:09,067 - INFO - Intention 6 is a base action. It cannot be invalidated.
2024-11-02 12:21:09,067 - INFO - Invalidating intention 12 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 14 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 15 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 16 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 17 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 15 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 16 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 17 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 14 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 15 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 16 ...
2024-11-02 12:21:09,074 - INFO - Invalidating intention 17 ...
2024-11-02 12:21:10,860 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: True
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
    Intention ID: [13]
    Executable: False
    Description: The agent should aim to move towards the batteries spawn cell, pick up a battery if the energy level is less than 50%, then proceed to visit all walkable cells on the grid.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                        function_5()
                    elif agent['coordinates'][0] < belief_set['map']['width'] - 1:
                        function_2()
                    elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
                        function_4()
                    else:
                        function_1()
                        function_3()
                
    Intention ID: [14]
    Executable: False
    Description: The agent should aim to move towards the battery spawn cell to pick up a battery if the energy level is less than 50%. If the energy level is above 50%, the agent should move towards the parcels spawn cell, pick up all available parcels, and then proceed to the delivery cell.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                    else:
                        function_12()
                
    Intention ID: [15]
    Executable: False
    Description: The agent should aim to move to the nearest unexplored walkable cell. If the agent's energy level drops below 50%, it should first go to the nearest batteries spawn cell to recharge.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    location = agent['coordinates']
                    energy = agent['energy']
                    if energy < 50:
                        function_14()
                    else:
                        unexplored_cells = [cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'walkable' and cell['cell_coordinates'] !=
                            location]
                        if unexplored_cells:
                            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell[
                                'cell_coordinates'][0] - location[0]) + abs(cell[
                                'cell_coordinates'][1] - location[1]))
                            while location != nearest_cell['cell_coordinates']:
                                if nearest_cell['cell_coordinates'][0] < location[0]:
                                    function_1()
                                elif nearest_cell['cell_coordinates'][0] > location[0]:
                                    function_2()
                                elif nearest_cell['cell_coordinates'][1] < location[1]:
                                    function_3()
                                elif nearest_cell['cell_coordinates'][1] > location[1]:
                                    function_4()
                                location = belief_set['agent'][1]['coordinates']
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is for the agent to move towards the battery spawn cell, pick up a battery if the energy level is less than 50%, and then go towards the parcels spawn cell, pick up all available parcels, and finally, proceed to the delivery cell.
                def function_16():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_14()
                    else:
                        function_12()
                
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to check the agent's energy level. If it's less than 50%, the agent should move to the battery spawn cell and pick up a battery. If the energy level is above 50%, the agent should explore the nearest unvisited walkable cell.
                def function_17():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_14()
                    elif agent['coordinates'][0] + 1 < belief_set['map']['width'] and {
                        'cell_coordinates': [agent['coordinates'][0] + 1, agent[
                        'coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map'][
                        'grid']:
                        function_2()
                    elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {
                        'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][
                        1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_3()
                
Executable: False
Trigger function:
None



2024-11-02 12:21:10,873 - INFO - Running trigger function for desire 1 ...
2024-11-02 12:21:10,873 - INFO - Trigger function for desire 1 has been executed. Result: True
2024-11-02 12:21:10,873 - INFO - Desire 1 could be triggered. Adding it to the list...
2024-11-02 12:21:10,873 - INFO - Desires triggered: [1]. Now randomly choosing which one to run.
2024-11-02 12:21:10,873 - INFO - Desire 1 was randomly chosen. Desire 1 has been triggered.
2024-11-02 12:21:10,873 - INFO - Desire 1 is about to be executed ...
2024-11-02 12:21:10,873 - INFO - Executing all valid intentions for desire 1 ...
2024-11-02 12:21:10,873 - INFO - Executing intention 8 ...
2024-11-02 12:21:10,873 - INFO - Running intention 8 ...
2024-11-02 12:21:10,973 - INFO - Belief set thread started ...
2024-11-02 12:21:10,980 - INFO - Plan thread started ...
2024-11-02 12:21:10,997 - INFO - Started subprocess...
2024-11-02 12:21:10,998 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 62}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:21:26,038 - ERROR - Error during intention 8 execution. Intention 8 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-02 12:21:26,062 - INFO - Belief set thread terminated.
2024-11-02 12:21:26,094 - INFO - Plan thread terminated.
2024-11-02 12:21:26,124 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-02 12:21:26,124 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 62}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:21:26,124 - INFO - Invalidating intention 8 ...
2024-11-02 12:21:26,124 - ERROR - Error during intention 8 execution. Desire 1 is now invalid and intention 8 has been invalidated.
2024-11-02 12:21:26,976 - INFO - Invalidating desire 1 ...
2024-11-02 12:21:28,208 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
    Intention ID: [13]
    Executable: False
    Description: The agent should aim to move towards the batteries spawn cell, pick up a battery if the energy level is less than 50%, then proceed to visit all walkable cells on the grid.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                        function_5()
                    elif agent['coordinates'][0] < belief_set['map']['width'] - 1:
                        function_2()
                    elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
                        function_4()
                    else:
                        function_1()
                        function_3()
                
    Intention ID: [14]
    Executable: False
    Description: The agent should aim to move towards the battery spawn cell to pick up a battery if the energy level is less than 50%. If the energy level is above 50%, the agent should move towards the parcels spawn cell, pick up all available parcels, and then proceed to the delivery cell.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                    else:
                        function_12()
                
    Intention ID: [15]
    Executable: False
    Description: The agent should aim to move to the nearest unexplored walkable cell. If the agent's energy level drops below 50%, it should first go to the nearest batteries spawn cell to recharge.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    location = agent['coordinates']
                    energy = agent['energy']
                    if energy < 50:
                        function_14()
                    else:
                        unexplored_cells = [cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'walkable' and cell['cell_coordinates'] !=
                            location]
                        if unexplored_cells:
                            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell[
                                'cell_coordinates'][0] - location[0]) + abs(cell[
                                'cell_coordinates'][1] - location[1]))
                            while location != nearest_cell['cell_coordinates']:
                                if nearest_cell['cell_coordinates'][0] < location[0]:
                                    function_1()
                                elif nearest_cell['cell_coordinates'][0] > location[0]:
                                    function_2()
                                elif nearest_cell['cell_coordinates'][1] < location[1]:
                                    function_3()
                                elif nearest_cell['cell_coordinates'][1] > location[1]:
                                    function_4()
                                location = belief_set['agent'][1]['coordinates']
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is for the agent to move towards the battery spawn cell, pick up a battery if the energy level is less than 50%, and then go towards the parcels spawn cell, pick up all available parcels, and finally, proceed to the delivery cell.
                def function_16():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_14()
                    else:
                        function_12()
                
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to check the agent's energy level. If it's less than 50%, the agent should move to the battery spawn cell and pick up a battery. If the energy level is above 50%, the agent should explore the nearest unvisited walkable cell.
                def function_17():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_14()
                    elif agent['coordinates'][0] + 1 < belief_set['map']['width'] and {
                        'cell_coordinates': [agent['coordinates'][0] + 1, agent[
                        'coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map'][
                        'grid']:
                        function_2()
                    elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {
                        'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][
                        1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_3()
                
Executable: False
Trigger function:
None



2024-11-02 12:21:28,208 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:21:28,220 - INFO - No desire has been triggered.
2024-11-02 12:21:28,233 - INFO - No desire triggered.
2024-11-02 12:21:29,772 - INFO - Desire added: 3. Desires:
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
    Intention ID: [13]
    Executable: False
    Description: The agent should aim to move towards the batteries spawn cell, pick up a battery if the energy level is less than 50%, then proceed to visit all walkable cells on the grid.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                        function_5()
                    elif agent['coordinates'][0] < belief_set['map']['width'] - 1:
                        function_2()
                    elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
                        function_4()
                    else:
                        function_1()
                        function_3()
                
    Intention ID: [14]
    Executable: False
    Description: The agent should aim to move towards the battery spawn cell to pick up a battery if the energy level is less than 50%. If the energy level is above 50%, the agent should move towards the parcels spawn cell, pick up all available parcels, and then proceed to the delivery cell.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                    else:
                        function_12()
                
    Intention ID: [15]
    Executable: False
    Description: The agent should aim to move to the nearest unexplored walkable cell. If the agent's energy level drops below 50%, it should first go to the nearest batteries spawn cell to recharge.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    location = agent['coordinates']
                    energy = agent['energy']
                    if energy < 50:
                        function_14()
                    else:
                        unexplored_cells = [cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'walkable' and cell['cell_coordinates'] !=
                            location]
                        if unexplored_cells:
                            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell[
                                'cell_coordinates'][0] - location[0]) + abs(cell[
                                'cell_coordinates'][1] - location[1]))
                            while location != nearest_cell['cell_coordinates']:
                                if nearest_cell['cell_coordinates'][0] < location[0]:
                                    function_1()
                                elif nearest_cell['cell_coordinates'][0] > location[0]:
                                    function_2()
                                elif nearest_cell['cell_coordinates'][1] < location[1]:
                                    function_3()
                                elif nearest_cell['cell_coordinates'][1] > location[1]:
                                    function_4()
                                location = belief_set['agent'][1]['coordinates']
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is for the agent to move towards the battery spawn cell, pick up a battery if the energy level is less than 50%, and then go towards the parcels spawn cell, pick up all available parcels, and finally, proceed to the delivery cell.
                def function_16():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_14()
                    else:
                        function_12()
                
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to check the agent's energy level. If it's less than 50%, the agent should move to the battery spawn cell and pick up a battery. If the energy level is above 50%, the agent should explore the nearest unvisited walkable cell.
                def function_17():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_14()
                    elif agent['coordinates'][0] + 1 < belief_set['map']['width'] and {
                        'cell_coordinates': [agent['coordinates'][0] + 1, agent[
                        'coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map'][
                        'grid']:
                        function_2()
                    elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {
                        'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][
                        1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_3()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to optimize its route in order to collect as many parcels and batteries as possible, while minimizing energy expenditure and avoiding non-walkable areas.
Executable: False
Trigger function:
None



2024-11-02 12:21:51,131 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['energy'] > 50:
        if not agent['parcels_carried_ids']:
            if belief_set['parcels'] and agent['coordinates'][0] > belief_set['parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'][0]:
                function_1()
            elif belief_set['parcels'] and agent['coordinates'][0] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'][0]:
                function_2()
            elif belief_set['parcels'] and agent['coordinates'][1] > belief_set['parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'][1]:
                function_3()
            elif belief_set['parcels'] and agent['coordinates'][1] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'][1]:
                function_4()
            else:
                function_5()
        else:
            if agent['coordinates'][0] > belief_set['map']['grid'][11]['cell_coordinates'][0]:
                function_1()
            elif agent['coordinates'][0] < belief_set['map']['grid'][11]['cell_coordinates'][0]:
                function_2()
            elif agent['coordinates'][1] > belief_set['map']['grid'][11]['cell_coordinates'][1]:
                function_3()
            elif agent['coordinates'][1] < belief_set['map']['grid'][11]['cell_coordinates'][1]:
                function_4()
            else:
                function_6()
    else:
        if belief_set['batteries'] and agent['coordinates'][0] > belief_set['batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0]:
            function_1()
        elif belief_set['batteries'] and agent['coordinates'][0] < belief_set['batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0]:
            function_2()
        elif belief_set['batteries'] and agent['coordinates'][1] > belief_set['batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1]:
            function_3()
        elif belief_set['batteries'] and agent['coordinates'][1] < belief_set['batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1]:
            function_4()
        else:
            function_5()

2024-11-02 12:21:51,132 - INFO - The intention is valid.
2024-11-02 12:21:51,170 - INFO - Intention added to desire 3
2024-11-02 12:21:51,183 - INFO - Running intention 18 ...
2024-11-02 12:21:51,463 - INFO - Belief set thread started ...
2024-11-02 12:21:51,475 - INFO - Plan thread started ...
2024-11-02 12:21:51,507 - INFO - Started subprocess...
2024-11-02 12:21:51,507 - INFO - Belief set before intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 62}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:21:51,824 - INFO - Executing action action_1 ...
2024-11-02 12:21:52,030 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 60}}]
2024-11-02 12:21:52,342 - INFO - Belief set thread terminated.
2024-11-02 12:21:52,386 - INFO - Plan thread terminated.
2024-11-02 12:21:52,398 - INFO - Intention 18 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 60}}]]
2024-11-02 12:21:52,399 - INFO - Belief set after intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 60}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:21:59,337 - INFO - Invalidating intention 18 ...
2024-11-02 12:22:25,824 - INFO - Testing intention 
def function():
    global belief_set
    agent_location = belief_set['agent'][1]['coordinates']
    parcels_spawn_location = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
    batteries_spawn_location = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
    delivery_cell_location = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    # move towards parcels_spawn location
    while agent_location != parcels_spawn_location:
        if agent_location[0] < parcels_spawn_location[0]:
            function_2()
        elif agent_location[0] > parcels_spawn_location[0]:
            function_1()
        elif agent_location[1] < parcels_spawn_location[1]:
            function_4()
        else:
            function_3()
        function_5()
    # move towards batteries_spawn location
    while agent_location != batteries_spawn_location:
        if agent_location[0] < batteries_spawn_location[0]:
            function_2()
        elif agent_location[0] > batteries_spawn_location[0]:
            function_1()
        elif agent_location[1] < batteries_spawn_location[1]:
            function_4()
        else:
            function_3()
        if belief_set['agent'][1]['energy'] < 50:
            function_5()
    # move towards delivery_cell
    while agent_location != delivery_cell_location:
        if agent_location[0] < delivery_cell_location[0]:
            function_2()
        elif agent_location[0] > delivery_cell_location[0]:
            function_1()
        elif agent_location[1] < delivery_cell_location[1]:
            function_4()
        else:
            function_3()
    function_6()

2024-11-02 12:22:25,836 - INFO - The intention is valid.
2024-11-02 12:22:25,844 - INFO - Intention added to desire 3
2024-11-02 12:22:25,856 - INFO - Running intention 19 ...
2024-11-02 12:22:26,019 - INFO - Belief set thread started ...
2024-11-02 12:22:26,026 - INFO - Plan thread started ...
2024-11-02 12:22:26,032 - INFO - Started subprocess...
2024-11-02 12:22:26,045 - INFO - Belief set before intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 260, 'energy': 60}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 18: {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:22:26,291 - INFO - Executing action action_3 ...
2024-11-02 12:22:26,549 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 260, 'energy': 58}}]
2024-11-02 12:22:26,878 - INFO - Executing action action_5 ...
2024-11-02 12:22:27,084 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:27,378 - INFO - Executing action action_3 ...
2024-11-02 12:22:27,585 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 260, 'energy': 56}}]
2024-11-02 12:22:27,966 - INFO - Executing action action_5 ...
2024-11-02 12:22:28,215 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:28,581 - INFO - Executing action action_3 ...
2024-11-02 12:22:28,793 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 260, 'energy': 54}}]
2024-11-02 12:22:29,156 - INFO - Executing action action_5 ...
2024-11-02 12:22:29,426 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'score': 260, 'energy': 52}}]
2024-11-02 12:22:29,776 - INFO - Executing action action_3 ...
2024-11-02 12:22:29,985 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:30,347 - INFO - Executing action action_5 ...
2024-11-02 12:22:30,566 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:30,878 - INFO - Executing action action_3 ...
2024-11-02 12:22:31,103 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:31,439 - INFO - Executing action action_5 ...
2024-11-02 12:22:31,669 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:32,013 - INFO - Executing action action_3 ...
2024-11-02 12:22:32,262 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:32,611 - INFO - Executing action action_5 ...
2024-11-02 12:22:32,823 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:33,108 - INFO - Executing action action_3 ...
2024-11-02 12:22:33,326 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:33,627 - INFO - Executing action action_5 ...
2024-11-02 12:22:33,853 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:34,225 - INFO - Executing action action_3 ...
2024-11-02 12:22:34,425 - INFO - Action action_3 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-02 12:22:34,720 - INFO - Executing action action_5 ...
2024-11-02 12:22:34,927 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19], 'score': 260, 'energy': 50}}]
2024-11-02 12:22:35,241 - INFO - Executing action action_3 ...
2024-11-02 12:22:35,461 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:35,761 - INFO - Executing action action_5 ...
2024-11-02 12:22:35,974 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:36,299 - INFO - Executing action action_3 ...
2024-11-02 12:22:36,550 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:36,930 - INFO - Executing action action_5 ...
2024-11-02 12:22:37,191 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:37,509 - INFO - Executing action action_3 ...
2024-11-02 12:22:37,721 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:38,003 - INFO - Executing action action_5 ...
2024-11-02 12:22:38,224 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:38,499 - INFO - Executing action action_3 ...
2024-11-02 12:22:38,712 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:39,019 - INFO - Executing action action_5 ...
2024-11-02 12:22:39,233 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:39,601 - INFO - Executing action action_3 ...
2024-11-02 12:22:39,820 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:40,133 - INFO - Executing action action_5 ...
2024-11-02 12:22:40,421 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:22:40,702 - INFO - Executing action action_3 ...
2024-11-02 12:22:40,970 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:22:41,063 - ERROR - Error during intention 19 execution. Intention 19 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-02 12:22:41,136 - INFO - Belief set thread terminated.
2024-11-02 12:22:41,274 - INFO - Plan thread terminated.
2024-11-02 12:22:41,280 - INFO - Intention 19 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3', 'action_5', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 260, 'energy': 58}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 260, 'energy': 56}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 260, 'energy': 54}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'score': 260, 'energy': 52}}], [], [], [], [], [], [], [], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19], 'score': 260, 'energy': 50}}], [], [], [], [], [], [], [], [], [], [], []]
2024-11-02 12:22:41,280 - INFO - Belief set after intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19], 'score': 260, 'energy': 50}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 18: {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 19: {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}}
2024-11-02 12:22:51,596 - INFO - Invalidating intention 19 ...
2024-11-02 12:23:21,162 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels_spawn = next(cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn')
    batteries_spawn = next(cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn')
    delivery_cell = next(cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell')
    while agent['coordinates'] != parcels_spawn:
        if agent['coordinates'][0] < parcels_spawn[0]:
            function_2()
        elif agent['coordinates'][0] > parcels_spawn[0]:
            function_1()
        elif agent['coordinates'][1] < parcels_spawn[1]:
            function_4()
        elif agent['coordinates'][1] > parcels_spawn[1]:
            function_3()
        agent = belief_set['agent'][1]
    function_5()
    while agent['coordinates'] != batteries_spawn:
        if agent['coordinates'][0] < batteries_spawn[0]:
            function_2()
        elif agent['coordinates'][0] > batteries_spawn[0]:
            function_1()
        elif agent['coordinates'][1] < batteries_spawn[1]:
            function_4()
        elif agent['coordinates'][1] > batteries_spawn[1]:
            function_3()
        agent = belief_set['agent'][1]
    if agent['energy'] < 50:
        function_5()
    while agent['coordinates'] != delivery_cell:
        if agent['coordinates'][0] < delivery_cell[0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell[0]:
            function_1()
        elif agent['coordinates'][1] < delivery_cell[1]:
            function_4()
        elif agent['coordinates'][1] > delivery_cell[1]:
            function_3()
        agent = belief_set['agent'][1]
    function_6()

2024-11-02 12:23:21,194 - INFO - The intention is valid.
2024-11-02 12:23:21,196 - INFO - Intention added to desire 3
2024-11-02 12:23:21,209 - INFO - Running intention 20 ...
2024-11-02 12:23:21,470 - INFO - Belief set thread started ...
2024-11-02 12:23:21,476 - INFO - Plan thread started ...
2024-11-02 12:23:21,500 - INFO - Started subprocess...
2024-11-02 12:23:21,501 - INFO - Belief set before intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19], 'score': 260, 'energy': 50}}, 'batteries': {2: {'id': 2, 'coordinates': [2, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 18: {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 19: {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 20: {'id': 20, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 21: {'id': 21, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:23:21,754 - INFO - Executing action action_5 ...
2024-11-02 12:23:21,966 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 48}}]
2024-11-02 12:23:22,316 - INFO - Executing action action_2 ...
2024-11-02 12:23:22,559 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 46}}]
2024-11-02 12:23:22,847 - INFO - Executing action action_2 ...
2024-11-02 12:23:23,087 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:23:23,412 - INFO - Executing action action_5 ...
2024-11-02 12:23:23,630 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 2, 'coordinates': [2, 0]}}]
2024-11-02 12:23:23,984 - INFO - Executing action action_4 ...
2024-11-02 12:23:24,234 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:23:24,582 - INFO - Executing action action_4 ...
2024-11-02 12:23:24,815 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 96}}]
2024-11-02 12:23:25,154 - INFO - Executing action action_4 ...
2024-11-02 12:23:25,367 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 94}}]
2024-11-02 12:23:25,705 - INFO - Executing action action_6 ...
2024-11-02 12:23:25,931 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 420, 'energy': 92}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:23:26,230 - INFO - Plan thread terminated.
2024-11-02 12:23:26,236 - INFO - Belief set thread terminated.
2024-11-02 12:23:26,311 - INFO - Intention 20 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_2', 'action_2', 'action_5', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 48}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 46}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 2, 'coordinates': [2, 0]}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [14, 15, 16, 17, 18, 19, 20, 21], 'score': 260, 'energy': 94}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 420, 'energy': 92}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-02 12:23:26,311 - INFO - Belief set after intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 420, 'energy': 92}}, 'batteries': {}, 'parcels': {}}
2024-11-02 12:23:33,962 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent'][1]
    has_parcels_on_map = bool(belief_set['parcels'])
    has_batteries_on_map = bool(belief_set['batteries'])
    has_energy = agent['energy'] > 0
    return has_parcels_on_map or has_batteries_on_map and has_energy
2024-11-02 12:23:33,962 - INFO - The trigger function is valid.
2024-11-02 12:23:33,962 - INFO - Trigger function added to desire 3.
2024-11-02 12:23:35,407 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
    Intention ID: [13]
    Executable: False
    Description: The agent should aim to move towards the batteries spawn cell, pick up a battery if the energy level is less than 50%, then proceed to visit all walkable cells on the grid.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                        function_5()
                    elif agent['coordinates'][0] < belief_set['map']['width'] - 1:
                        function_2()
                    elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
                        function_4()
                    else:
                        function_1()
                        function_3()
                
    Intention ID: [14]
    Executable: False
    Description: The agent should aim to move towards the battery spawn cell to pick up a battery if the energy level is less than 50%. If the energy level is above 50%, the agent should move towards the parcels spawn cell, pick up all available parcels, and then proceed to the delivery cell.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                    else:
                        function_12()
                
    Intention ID: [15]
    Executable: False
    Description: The agent should aim to move to the nearest unexplored walkable cell. If the agent's energy level drops below 50%, it should first go to the nearest batteries spawn cell to recharge.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    location = agent['coordinates']
                    energy = agent['energy']
                    if energy < 50:
                        function_14()
                    else:
                        unexplored_cells = [cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'walkable' and cell['cell_coordinates'] !=
                            location]
                        if unexplored_cells:
                            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell[
                                'cell_coordinates'][0] - location[0]) + abs(cell[
                                'cell_coordinates'][1] - location[1]))
                            while location != nearest_cell['cell_coordinates']:
                                if nearest_cell['cell_coordinates'][0] < location[0]:
                                    function_1()
                                elif nearest_cell['cell_coordinates'][0] > location[0]:
                                    function_2()
                                elif nearest_cell['cell_coordinates'][1] < location[1]:
                                    function_3()
                                elif nearest_cell['cell_coordinates'][1] > location[1]:
                                    function_4()
                                location = belief_set['agent'][1]['coordinates']
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is for the agent to move towards the battery spawn cell, pick up a battery if the energy level is less than 50%, and then go towards the parcels spawn cell, pick up all available parcels, and finally, proceed to the delivery cell.
                def function_16():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_14()
                    else:
                        function_12()
                
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to check the agent's energy level. If it's less than 50%, the agent should move to the battery spawn cell and pick up a battery. If the energy level is above 50%, the agent should explore the nearest unvisited walkable cell.
                def function_17():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_14()
                    elif agent['coordinates'][0] + 1 < belief_set['map']['width'] and {
                        'cell_coordinates': [agent['coordinates'][0] + 1, agent[
                        'coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map'][
                        'grid']:
                        function_2()
                    elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {
                        'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][
                        1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_3()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to optimize its route in order to collect as many parcels and batteries as possible, while minimizing energy expenditure and avoiding non-walkable areas.
    Intention ID: [18]
    Executable: False
    Description: The short term goal is for the agent to move towards and pickup a parcel if its energy is above 50% and it is not currently carrying any parcels. If the agent's energy is below 50%, it will move towards and pickup a battery. If the agent is carrying a parcel, it will move towards the delivery cell to deliver the parcel.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] > 50:
                        if not agent['parcels_carried_ids']:
                            if belief_set['parcels'] and agent['coordinates'][0] > belief_set[
                                'parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'
                                ][0]:
                                function_1()
                            elif belief_set['parcels'] and agent['coordinates'][0
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][0]:
                                function_2()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] > belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_3()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_4()
                            else:
                                function_5()
                        elif agent['coordinates'][0] > belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_4()
                        else:
                            function_6()
                    elif belief_set['batteries'] and agent['coordinates'][0] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_1()
                    elif belief_set['batteries'] and agent['coordinates'][0] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_2()
                    elif belief_set['batteries'] and agent['coordinates'][1] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_3()
                    elif belief_set['batteries'] and agent['coordinates'][1] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_4()
                    else:
                        function_5()
                
    Intention ID: [19]
    Executable: False
    Description: The agent should aim to move towards the parcels_spawn location, picking up any parcels on the way, and then move to the batteries_spawn location, picking up batteries if its energy is less than 50%. The agent should then move towards the delivery_cell to drop off any parcels it is carrying.
                def function_19():
                    global belief_set
                    agent_location = belief_set['agent'][1]['coordinates']
                    parcels_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
                    batteries_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    delivery_cell_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_location != parcels_spawn_location:
                        if agent_location[0] < parcels_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcels_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcels_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                    while agent_location != batteries_spawn_location:
                        if agent_location[0] < batteries_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > batteries_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < batteries_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 50:
                            function_5()
                    while agent_location != delivery_cell_location:
                        if agent_location[0] < delivery_cell_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_cell_location[0]:
                            function_1()
                        elif agent_location[1] < delivery_cell_location[1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [20]
    Executable: True
    Description: The agent's short term goal is to move towards the 'parcels_spawn' location, pick up any parcels, move to the 'batteries_spawn' location, pick up batteries if its energy is less than 50%, then move towards the 'delivery_cell' while avoiding non-walkable areas to drop off any parcels it is carrying.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'parcels_spawn')
                    batteries_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'batteries_spawn')
                    delivery_cell = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell')
                    while agent['coordinates'] != parcels_spawn:
                        if agent['coordinates'][0] < parcels_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcels_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcels_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcels_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_5()
                    while agent['coordinates'] != batteries_spawn:
                        if agent['coordinates'][0] < batteries_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > batteries_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < batteries_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > batteries_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    has_parcels_on_map = bool(belief_set['parcels'])
    has_batteries_on_map = bool(belief_set['batteries'])
    has_energy = agent['energy'] > 0
    return has_parcels_on_map or has_batteries_on_map and has_energy




2024-11-02 12:23:35,407 - INFO - Running trigger function for desire 3 ...
2024-11-02 12:23:35,407 - INFO - Trigger function for desire 3 has been executed. Result: False
2024-11-02 12:23:35,407 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:23:35,407 - INFO - No desire has been triggered.
2024-11-02 12:23:35,432 - INFO - No desire triggered.
2024-11-02 12:23:37,620 - INFO - Desire added: 4. Desires:
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
    Intention ID: [13]
    Executable: False
    Description: The agent should aim to move towards the batteries spawn cell, pick up a battery if the energy level is less than 50%, then proceed to visit all walkable cells on the grid.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                        function_5()
                    elif agent['coordinates'][0] < belief_set['map']['width'] - 1:
                        function_2()
                    elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
                        function_4()
                    else:
                        function_1()
                        function_3()
                
    Intention ID: [14]
    Executable: False
    Description: The agent should aim to move towards the battery spawn cell to pick up a battery if the energy level is less than 50%. If the energy level is above 50%, the agent should move towards the parcels spawn cell, pick up all available parcels, and then proceed to the delivery cell.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                    else:
                        function_12()
                
    Intention ID: [15]
    Executable: False
    Description: The agent should aim to move to the nearest unexplored walkable cell. If the agent's energy level drops below 50%, it should first go to the nearest batteries spawn cell to recharge.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    location = agent['coordinates']
                    energy = agent['energy']
                    if energy < 50:
                        function_14()
                    else:
                        unexplored_cells = [cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'walkable' and cell['cell_coordinates'] !=
                            location]
                        if unexplored_cells:
                            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell[
                                'cell_coordinates'][0] - location[0]) + abs(cell[
                                'cell_coordinates'][1] - location[1]))
                            while location != nearest_cell['cell_coordinates']:
                                if nearest_cell['cell_coordinates'][0] < location[0]:
                                    function_1()
                                elif nearest_cell['cell_coordinates'][0] > location[0]:
                                    function_2()
                                elif nearest_cell['cell_coordinates'][1] < location[1]:
                                    function_3()
                                elif nearest_cell['cell_coordinates'][1] > location[1]:
                                    function_4()
                                location = belief_set['agent'][1]['coordinates']
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is for the agent to move towards the battery spawn cell, pick up a battery if the energy level is less than 50%, and then go towards the parcels spawn cell, pick up all available parcels, and finally, proceed to the delivery cell.
                def function_16():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_14()
                    else:
                        function_12()
                
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to check the agent's energy level. If it's less than 50%, the agent should move to the battery spawn cell and pick up a battery. If the energy level is above 50%, the agent should explore the nearest unvisited walkable cell.
                def function_17():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_14()
                    elif agent['coordinates'][0] + 1 < belief_set['map']['width'] and {
                        'cell_coordinates': [agent['coordinates'][0] + 1, agent[
                        'coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map'][
                        'grid']:
                        function_2()
                    elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {
                        'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][
                        1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_3()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to optimize its route in order to collect as many parcels and batteries as possible, while minimizing energy expenditure and avoiding non-walkable areas.
    Intention ID: [18]
    Executable: False
    Description: The short term goal is for the agent to move towards and pickup a parcel if its energy is above 50% and it is not currently carrying any parcels. If the agent's energy is below 50%, it will move towards and pickup a battery. If the agent is carrying a parcel, it will move towards the delivery cell to deliver the parcel.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] > 50:
                        if not agent['parcels_carried_ids']:
                            if belief_set['parcels'] and agent['coordinates'][0] > belief_set[
                                'parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'
                                ][0]:
                                function_1()
                            elif belief_set['parcels'] and agent['coordinates'][0
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][0]:
                                function_2()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] > belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_3()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_4()
                            else:
                                function_5()
                        elif agent['coordinates'][0] > belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_4()
                        else:
                            function_6()
                    elif belief_set['batteries'] and agent['coordinates'][0] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_1()
                    elif belief_set['batteries'] and agent['coordinates'][0] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_2()
                    elif belief_set['batteries'] and agent['coordinates'][1] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_3()
                    elif belief_set['batteries'] and agent['coordinates'][1] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_4()
                    else:
                        function_5()
                
    Intention ID: [19]
    Executable: False
    Description: The agent should aim to move towards the parcels_spawn location, picking up any parcels on the way, and then move to the batteries_spawn location, picking up batteries if its energy is less than 50%. The agent should then move towards the delivery_cell to drop off any parcels it is carrying.
                def function_19():
                    global belief_set
                    agent_location = belief_set['agent'][1]['coordinates']
                    parcels_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
                    batteries_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    delivery_cell_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_location != parcels_spawn_location:
                        if agent_location[0] < parcels_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcels_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcels_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                    while agent_location != batteries_spawn_location:
                        if agent_location[0] < batteries_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > batteries_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < batteries_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 50:
                            function_5()
                    while agent_location != delivery_cell_location:
                        if agent_location[0] < delivery_cell_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_cell_location[0]:
                            function_1()
                        elif agent_location[1] < delivery_cell_location[1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [20]
    Executable: True
    Description: The agent's short term goal is to move towards the 'parcels_spawn' location, pick up any parcels, move to the 'batteries_spawn' location, pick up batteries if its energy is less than 50%, then move towards the 'delivery_cell' while avoiding non-walkable areas to drop off any parcels it is carrying.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'parcels_spawn')
                    batteries_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'batteries_spawn')
                    delivery_cell = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell')
                    while agent['coordinates'] != parcels_spawn:
                        if agent['coordinates'][0] < parcels_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcels_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcels_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcels_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_5()
                    while agent['coordinates'] != batteries_spawn:
                        if agent['coordinates'][0] < batteries_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > batteries_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < batteries_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > batteries_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    has_parcels_on_map = bool(belief_set['parcels'])
    has_batteries_on_map = bool(belief_set['batteries'])
    has_energy = agent['energy'] > 0
    return has_parcels_on_map or has_batteries_on_map and has_energy



Desire 4: The agent should strive to maintain a high energy level for maximum operational uptime and efficiency while ensuring the timely delivery of parcels to their respective locations.
Executable: False
Trigger function:
None



2024-11-02 12:23:48,071 - INFO - Testing intention 
def function():
    global belief_set
    function_20()
    agent = belief_set['agent'][1]
    if agent['energy'] < 50:
        for cell in belief_set['map']['grid']:
            if cell['cell_type'] == 'batteries_spawn' and cell['cell_coordinates'] == agent['coordinates']:
                function_5()
    function_11()
2024-11-02 12:23:48,072 - INFO - The intention is valid.
2024-11-02 12:23:48,085 - INFO - Intention added to desire 4
2024-11-02 12:23:48,085 - INFO - Running intention 21 ...
2024-11-02 12:23:48,239 - INFO - Belief set thread started ...
2024-11-02 12:23:48,252 - INFO - Plan thread started ...
2024-11-02 12:23:48,302 - INFO - Started subprocess...
2024-11-02 12:23:48,302 - INFO - Belief set before intention 21 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 420, 'energy': 92}}, 'batteries': {3: {'id': 3, 'coordinates': [2, 0]}}, 'parcels': {22: {'id': 22, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:23:48,555 - INFO - Executing action action_1 ...
2024-11-02 12:23:48,778 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 420, 'energy': 90}}]
2024-11-02 12:23:49,121 - INFO - Executing action action_1 ...
2024-11-02 12:23:49,333 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 420, 'energy': 88}}]
2024-11-02 12:23:49,631 - INFO - Executing action action_3 ...
2024-11-02 12:23:49,874 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 420, 'energy': 86}}]
2024-11-02 12:23:50,205 - INFO - Executing action action_3 ...
2024-11-02 12:23:50,423 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 420, 'energy': 84}}]
2024-11-02 12:23:50,691 - INFO - Executing action action_3 ...
2024-11-02 12:23:50,903 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 420, 'energy': 82}}]
2024-11-02 12:23:51,336 - INFO - Executing action action_5 ...
2024-11-02 12:23:51,566 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [22], 'score': 420, 'energy': 80}}]
2024-11-02 12:23:51,928 - INFO - Executing action action_2 ...
2024-11-02 12:23:52,166 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [22], 'score': 420, 'energy': 78}}]
2024-11-02 12:23:52,495 - INFO - Executing action action_2 ...
2024-11-02 12:23:52,713 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [22], 'score': 420, 'energy': 76}}]
2024-11-02 12:23:53,026 - INFO - Executing action action_4 ...
2024-11-02 12:23:53,239 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [22], 'score': 420, 'energy': 74}}]
2024-11-02 12:23:53,604 - INFO - Executing action action_4 ...
2024-11-02 12:23:53,818 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [22], 'score': 420, 'energy': 72}}]
2024-11-02 12:23:54,141 - INFO - Executing action action_4 ...
2024-11-02 12:23:54,346 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [22], 'score': 420, 'energy': 70}}]
2024-11-02 12:23:54,707 - INFO - Executing action action_6 ...
2024-11-02 12:23:54,945 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 440, 'energy': 68}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:23:55,301 - INFO - Executing action action_6 ...
2024-11-02 12:23:55,526 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:23:55,849 - INFO - Belief set thread terminated.
2024-11-02 12:23:55,898 - INFO - Plan thread terminated.
2024-11-02 12:23:55,936 - INFO - Intention 21 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 420, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 420, 'energy': 88}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 420, 'energy': 86}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 420, 'energy': 84}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 420, 'energy': 82}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [22], 'score': 420, 'energy': 80}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [22], 'score': 420, 'energy': 78}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [22], 'score': 420, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [22], 'score': 420, 'energy': 74}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [22], 'score': 420, 'energy': 72}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [22], 'score': 420, 'energy': 70}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 440, 'energy': 68}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 22, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}], []]
2024-11-02 12:23:55,936 - INFO - Belief set after intention 21 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 440, 'energy': 68}}, 'batteries': {3: {'id': 3, 'coordinates': [2, 0]}}, 'parcels': {23: {'id': 23, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:24:01,593 - INFO - Testing intention 
def function():
    global belief_set
    function_20()
    if belief_set['agent'][1]['energy'] < 50:
        function_5()
    function_11()
    function_6()

2024-11-02 12:24:01,593 - INFO - The intention is valid.
2024-11-02 12:24:01,594 - INFO - Intention added to desire 4
2024-11-02 12:24:01,600 - INFO - Running intention 22 ...
2024-11-02 12:24:01,807 - INFO - Belief set thread started ...
2024-11-02 12:24:01,857 - INFO - Plan thread started ...
2024-11-02 12:24:01,864 - INFO - Started subprocess...
2024-11-02 12:24:01,864 - INFO - Belief set before intention 22 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 440, 'energy': 68}}, 'batteries': {3: {'id': 3, 'coordinates': [2, 0]}}, 'parcels': {23: {'id': 23, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:24:02,178 - INFO - Executing action action_1 ...
2024-11-02 12:24:02,395 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 440, 'energy': 66}}]
2024-11-02 12:24:02,738 - INFO - Executing action action_1 ...
2024-11-02 12:24:02,964 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 440, 'energy': 64}}]
2024-11-02 12:24:03,287 - INFO - Executing action action_3 ...
2024-11-02 12:24:03,521 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 440, 'energy': 62}}]
2024-11-02 12:24:03,839 - INFO - Executing action action_3 ...
2024-11-02 12:24:04,064 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 440, 'energy': 60}}]
2024-11-02 12:24:04,363 - INFO - Executing action action_3 ...
2024-11-02 12:24:04,569 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 440, 'energy': 58}}]
2024-11-02 12:24:04,857 - INFO - Executing action action_5 ...
2024-11-02 12:24:05,079 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [23], 'score': 440, 'energy': 56}}]
2024-11-02 12:24:05,377 - INFO - Executing action action_2 ...
2024-11-02 12:24:05,611 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [23], 'score': 440, 'energy': 54}}]
2024-11-02 12:24:05,960 - INFO - Executing action action_2 ...
2024-11-02 12:24:06,190 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [23], 'score': 440, 'energy': 52}}]
2024-11-02 12:24:06,609 - INFO - Executing action action_4 ...
2024-11-02 12:24:06,833 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [23], 'score': 440, 'energy': 50}}]
2024-11-02 12:24:07,182 - INFO - Executing action action_4 ...
2024-11-02 12:24:07,405 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [23], 'score': 440, 'energy': 48}}]
2024-11-02 12:24:07,754 - INFO - Executing action action_4 ...
2024-11-02 12:24:07,991 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [23], 'score': 440, 'energy': 46}}]
2024-11-02 12:24:08,279 - INFO - Executing action action_6 ...
2024-11-02 12:24:08,503 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 460, 'energy': 44}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:24:08,841 - INFO - Executing action action_5 ...
2024-11-02 12:24:09,059 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:24:09,450 - INFO - Executing action action_6 ...
2024-11-02 12:24:09,657 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:24:09,986 - INFO - Executing action action_6 ...
2024-11-02 12:24:10,203 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:24:10,528 - INFO - Plan thread terminated.
2024-11-02 12:24:10,571 - INFO - Belief set thread terminated.
2024-11-02 12:24:10,584 - INFO - Intention 22 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_5', 'action_6', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 440, 'energy': 66}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 440, 'energy': 64}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 440, 'energy': 62}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 440, 'energy': 60}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 440, 'energy': 58}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [23], 'score': 440, 'energy': 56}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [23], 'score': 440, 'energy': 54}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [23], 'score': 440, 'energy': 52}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [23], 'score': 440, 'energy': 50}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [23], 'score': 440, 'energy': 48}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [23], 'score': 440, 'energy': 46}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 460, 'energy': 44}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 23, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}], [], [], []]
2024-11-02 12:24:10,584 - INFO - Belief set after intention 22 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 460, 'energy': 44}}, 'batteries': {3: {'id': 3, 'coordinates': [2, 0]}}, 'parcels': {}}
2024-11-02 12:24:17,329 - INFO - Invalidating intention 22 ...
2024-11-02 12:24:21,810 - INFO - Testing intention 
def function():
    global belief_set
    function_20()
    if belief_set['agent'][1]['energy'] < 50:
        function_5()
    function_11()
2024-11-02 12:24:21,810 - INFO - The intention is valid.
2024-11-02 12:24:21,823 - INFO - Intention added to desire 4
2024-11-02 12:24:21,836 - INFO - Running intention 23 ...
2024-11-02 12:24:21,974 - INFO - Belief set thread started ...
2024-11-02 12:24:21,980 - INFO - Plan thread started ...
2024-11-02 12:24:21,993 - INFO - Started subprocess...
2024-11-02 12:24:22,018 - INFO - Belief set before intention 23 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 460, 'energy': 44}}, 'batteries': {3: {'id': 3, 'coordinates': [2, 0]}}, 'parcels': {24: {'id': 24, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:24:22,276 - INFO - Executing action action_1 ...
2024-11-02 12:24:22,483 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 460, 'energy': 42}}]
2024-11-02 12:24:22,838 - INFO - Executing action action_1 ...
2024-11-02 12:24:23,072 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 460, 'energy': 40}}]
2024-11-02 12:24:23,355 - INFO - Executing action action_3 ...
2024-11-02 12:24:23,587 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 460, 'energy': 38}}]
2024-11-02 12:24:23,948 - INFO - Executing action action_3 ...
2024-11-02 12:24:24,233 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 460, 'energy': 36}}]
2024-11-02 12:24:24,581 - INFO - Executing action action_3 ...
2024-11-02 12:24:24,799 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 460, 'energy': 34}}]
2024-11-02 12:24:25,141 - INFO - Executing action action_5 ...
2024-11-02 12:24:25,378 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [24], 'score': 460, 'energy': 32}}]
2024-11-02 12:24:25,719 - INFO - Executing action action_2 ...
2024-11-02 12:24:25,925 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [24], 'score': 460, 'energy': 30}}]
2024-11-02 12:24:26,279 - INFO - Executing action action_2 ...
2024-11-02 12:24:26,490 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [24], 'score': 460, 'energy': 28}}]
2024-11-02 12:24:26,912 - INFO - Executing action action_5 ...
2024-11-02 12:24:27,129 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [24], 'score': 460, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 3, 'coordinates': [2, 0]}}]
2024-11-02 12:24:27,478 - INFO - Executing action action_4 ...
2024-11-02 12:24:27,690 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [24], 'score': 460, 'energy': 98}}]
2024-11-02 12:24:28,038 - INFO - Executing action action_4 ...
2024-11-02 12:24:28,243 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [24], 'score': 460, 'energy': 96}}]
2024-11-02 12:24:28,534 - INFO - Executing action action_4 ...
2024-11-02 12:24:28,771 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [24], 'score': 460, 'energy': 94}}]
2024-11-02 12:24:29,094 - INFO - Executing action action_6 ...
2024-11-02 12:24:29,307 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 92}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:24:29,600 - INFO - Executing action action_6 ...
2024-11-02 12:24:29,844 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:24:30,169 - INFO - Plan thread terminated.
2024-11-02 12:24:30,188 - INFO - Belief set thread terminated.
2024-11-02 12:24:30,207 - INFO - Intention 23 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_5', 'action_4', 'action_4', 'action_4', 'action_6', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 460, 'energy': 42}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 460, 'energy': 40}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 460, 'energy': 38}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 460, 'energy': 36}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 460, 'energy': 34}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [24], 'score': 460, 'energy': 32}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [24], 'score': 460, 'energy': 30}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [24], 'score': 460, 'energy': 28}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [24], 'score': 460, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 3, 'coordinates': [2, 0]}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [24], 'score': 460, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [24], 'score': 460, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [24], 'score': 460, 'energy': 94}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 92}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 24, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}], []]
2024-11-02 12:24:30,207 - INFO - Belief set after intention 23 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 92}}, 'batteries': {}, 'parcels': {}}
2024-11-02 12:24:35,292 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent'][1]
    if agent['energy'] > 50 and len(belief_set['parcels']) > 0:
        return True
    else:
        return False
2024-11-02 12:24:35,292 - ERROR - Trigger function does not return the boolean True for the prior belief set.
2024-11-02 12:24:38,273 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
    Intention ID: [13]
    Executable: False
    Description: The agent should aim to move towards the batteries spawn cell, pick up a battery if the energy level is less than 50%, then proceed to visit all walkable cells on the grid.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                        function_5()
                    elif agent['coordinates'][0] < belief_set['map']['width'] - 1:
                        function_2()
                    elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
                        function_4()
                    else:
                        function_1()
                        function_3()
                
    Intention ID: [14]
    Executable: False
    Description: The agent should aim to move towards the battery spawn cell to pick up a battery if the energy level is less than 50%. If the energy level is above 50%, the agent should move towards the parcels spawn cell, pick up all available parcels, and then proceed to the delivery cell.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                    else:
                        function_12()
                
    Intention ID: [15]
    Executable: False
    Description: The agent should aim to move to the nearest unexplored walkable cell. If the agent's energy level drops below 50%, it should first go to the nearest batteries spawn cell to recharge.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    location = agent['coordinates']
                    energy = agent['energy']
                    if energy < 50:
                        function_14()
                    else:
                        unexplored_cells = [cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'walkable' and cell['cell_coordinates'] !=
                            location]
                        if unexplored_cells:
                            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell[
                                'cell_coordinates'][0] - location[0]) + abs(cell[
                                'cell_coordinates'][1] - location[1]))
                            while location != nearest_cell['cell_coordinates']:
                                if nearest_cell['cell_coordinates'][0] < location[0]:
                                    function_1()
                                elif nearest_cell['cell_coordinates'][0] > location[0]:
                                    function_2()
                                elif nearest_cell['cell_coordinates'][1] < location[1]:
                                    function_3()
                                elif nearest_cell['cell_coordinates'][1] > location[1]:
                                    function_4()
                                location = belief_set['agent'][1]['coordinates']
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is for the agent to move towards the battery spawn cell, pick up a battery if the energy level is less than 50%, and then go towards the parcels spawn cell, pick up all available parcels, and finally, proceed to the delivery cell.
                def function_16():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_14()
                    else:
                        function_12()
                
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to check the agent's energy level. If it's less than 50%, the agent should move to the battery spawn cell and pick up a battery. If the energy level is above 50%, the agent should explore the nearest unvisited walkable cell.
                def function_17():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_14()
                    elif agent['coordinates'][0] + 1 < belief_set['map']['width'] and {
                        'cell_coordinates': [agent['coordinates'][0] + 1, agent[
                        'coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map'][
                        'grid']:
                        function_2()
                    elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {
                        'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][
                        1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_3()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to optimize its route in order to collect as many parcels and batteries as possible, while minimizing energy expenditure and avoiding non-walkable areas.
    Intention ID: [18]
    Executable: False
    Description: The short term goal is for the agent to move towards and pickup a parcel if its energy is above 50% and it is not currently carrying any parcels. If the agent's energy is below 50%, it will move towards and pickup a battery. If the agent is carrying a parcel, it will move towards the delivery cell to deliver the parcel.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] > 50:
                        if not agent['parcels_carried_ids']:
                            if belief_set['parcels'] and agent['coordinates'][0] > belief_set[
                                'parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'
                                ][0]:
                                function_1()
                            elif belief_set['parcels'] and agent['coordinates'][0
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][0]:
                                function_2()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] > belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_3()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_4()
                            else:
                                function_5()
                        elif agent['coordinates'][0] > belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_4()
                        else:
                            function_6()
                    elif belief_set['batteries'] and agent['coordinates'][0] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_1()
                    elif belief_set['batteries'] and agent['coordinates'][0] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_2()
                    elif belief_set['batteries'] and agent['coordinates'][1] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_3()
                    elif belief_set['batteries'] and agent['coordinates'][1] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_4()
                    else:
                        function_5()
                
    Intention ID: [19]
    Executable: False
    Description: The agent should aim to move towards the parcels_spawn location, picking up any parcels on the way, and then move to the batteries_spawn location, picking up batteries if its energy is less than 50%. The agent should then move towards the delivery_cell to drop off any parcels it is carrying.
                def function_19():
                    global belief_set
                    agent_location = belief_set['agent'][1]['coordinates']
                    parcels_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
                    batteries_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    delivery_cell_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_location != parcels_spawn_location:
                        if agent_location[0] < parcels_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcels_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcels_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                    while agent_location != batteries_spawn_location:
                        if agent_location[0] < batteries_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > batteries_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < batteries_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 50:
                            function_5()
                    while agent_location != delivery_cell_location:
                        if agent_location[0] < delivery_cell_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_cell_location[0]:
                            function_1()
                        elif agent_location[1] < delivery_cell_location[1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [20]
    Executable: True
    Description: The agent's short term goal is to move towards the 'parcels_spawn' location, pick up any parcels, move to the 'batteries_spawn' location, pick up batteries if its energy is less than 50%, then move towards the 'delivery_cell' while avoiding non-walkable areas to drop off any parcels it is carrying.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'parcels_spawn')
                    batteries_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'batteries_spawn')
                    delivery_cell = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell')
                    while agent['coordinates'] != parcels_spawn:
                        if agent['coordinates'][0] < parcels_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcels_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcels_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcels_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_5()
                    while agent['coordinates'] != batteries_spawn:
                        if agent['coordinates'][0] < batteries_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > batteries_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < batteries_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > batteries_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    has_parcels_on_map = bool(belief_set['parcels'])
    has_batteries_on_map = bool(belief_set['batteries'])
    has_energy = agent['energy'] > 0
    return has_parcels_on_map or has_batteries_on_map and has_energy



Desire 4: The agent should strive to maintain a high energy level for maximum operational uptime and efficiency while ensuring the timely delivery of parcels to their respective locations.
    Intention ID: [21]
    Executable: True
    Description: The agent should aim to move towards the parcels spawn location, pick up any parcels, and then move to the delivery cell to drop off the parcels it is carrying. During this process, it should also check its energy levels. If the energy level is less than 50% and the agent is on the batteries spawn cell, it should pick up a battery.
                def function_21():
                    global belief_set
                    function_20()
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'batteries_spawn' and cell[
                                'cell_coordinates'] == agent['coordinates']:
                                function_5()
                    function_11()
                
    Intention ID: [22]
    Executable: False
    Description: The agent should aim to efficiently pick up parcels and batteries when necessary, and deliver parcels to the delivery cell, while maintaining a high energy level.
                def function_22():
                    global belief_set
                    function_20()
                    if belief_set['agent'][1]['energy'] < 50:
                        function_5()
                    function_11()
                    function_6()
                
    Intention ID: [23]
    Executable: True
    Description: The agent's short-term goal is to move towards the parcel spawn location, pick up any parcels, then move to the battery spawn location, pick up a battery if its energy is less than 50%, and finally move towards the delivery cell to drop off the parcels it is carrying.
                def function_23():
                    global belief_set
                    function_20()
                    if belief_set['agent'][1]['energy'] < 50:
                        function_5()
                    function_11()
                
Executable: False
Trigger function:
None



2024-11-02 12:24:38,273 - INFO - Running trigger function for desire 3 ...
2024-11-02 12:24:38,274 - INFO - Trigger function for desire 3 has been executed. Result: True
2024-11-02 12:24:38,274 - INFO - Desire 3 could be triggered. Adding it to the list...
2024-11-02 12:24:38,274 - INFO - Desires triggered: [3]. Now randomly choosing which one to run.
2024-11-02 12:24:38,274 - INFO - Desire 3 was randomly chosen. Desire 3 has been triggered.
2024-11-02 12:24:38,274 - INFO - Desire 3 is about to be executed ...
2024-11-02 12:24:38,274 - INFO - Executing all valid intentions for desire 3 ...
2024-11-02 12:24:38,274 - INFO - Executing intention 20 ...
2024-11-02 12:24:38,286 - INFO - Running intention 20 ...
2024-11-02 12:24:38,507 - INFO - Belief set thread started ...
2024-11-02 12:24:38,513 - INFO - Plan thread started ...
2024-11-02 12:24:38,526 - INFO - Started subprocess...
2024-11-02 12:24:38,564 - INFO - Belief set before intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 92}}, 'batteries': {}, 'parcels': {25: {'id': 25, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:24:38,849 - INFO - Executing action action_1 ...
2024-11-02 12:24:39,086 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 90}}]
2024-11-02 12:24:39,421 - INFO - Executing action action_1 ...
2024-11-02 12:24:39,651 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 88}}]
2024-11-02 12:24:39,944 - INFO - Executing action action_3 ...
2024-11-02 12:24:40,180 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 480, 'energy': 86}}]
2024-11-02 12:24:40,480 - INFO - Executing action action_3 ...
2024-11-02 12:24:40,704 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 480, 'energy': 84}}]
2024-11-02 12:24:40,971 - INFO - Executing action action_3 ...
2024-11-02 12:24:41,263 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 480, 'energy': 82}}]
2024-11-02 12:24:41,598 - INFO - Executing action action_5 ...
2024-11-02 12:24:41,815 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [25], 'score': 480, 'energy': 80}}]
2024-11-02 12:24:42,121 - INFO - Executing action action_2 ...
2024-11-02 12:24:42,353 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:24:42,683 - INFO - Executing action action_2 ...
2024-11-02 12:24:42,957 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [25], 'score': 480, 'energy': 76}}]
2024-11-02 12:24:43,255 - INFO - Executing action action_4 ...
2024-11-02 12:24:43,485 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [25], 'score': 480, 'energy': 74}}]
2024-11-02 12:24:43,821 - INFO - Executing action action_4 ...
2024-11-02 12:24:44,070 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [25], 'score': 480, 'energy': 72}}]
2024-11-02 12:24:44,392 - INFO - Executing action action_4 ...
2024-11-02 12:24:44,623 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [25], 'score': 480, 'energy': 70}}]
2024-11-02 12:24:44,983 - INFO - Executing action action_6 ...
2024-11-02 12:24:45,225 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 68}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:24:45,566 - INFO - Belief set thread terminated.
2024-11-02 12:24:45,627 - INFO - Plan thread terminated.
2024-11-02 12:24:45,658 - INFO - Intention 20 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 88}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 480, 'energy': 86}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 480, 'energy': 84}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 480, 'energy': 82}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [25], 'score': 480, 'energy': 80}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [25], 'score': 480, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [25], 'score': 480, 'energy': 74}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [25], 'score': 480, 'energy': 72}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [25], 'score': 480, 'energy': 70}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 68}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-02 12:24:45,671 - INFO - Belief set after intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 68}}, 'batteries': {4: {'id': 4, 'coordinates': [2, 0]}}, 'parcels': {}}
2024-11-02 12:24:45,671 - INFO - Intention 20 has been executed with plan ['action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 480, 'energy': 88}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 480, 'energy': 86}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 480, 'energy': 84}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 480, 'energy': 82}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [25], 'score': 480, 'energy': 80}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [25], 'score': 480, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [25], 'score': 480, 'energy': 74}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [25], 'score': 480, 'energy': 72}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [25], 'score': 480, 'energy': 70}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 68}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 25, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]].
2024-11-02 12:24:47,293 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
    Intention ID: [13]
    Executable: False
    Description: The agent should aim to move towards the batteries spawn cell, pick up a battery if the energy level is less than 50%, then proceed to visit all walkable cells on the grid.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                        function_5()
                    elif agent['coordinates'][0] < belief_set['map']['width'] - 1:
                        function_2()
                    elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
                        function_4()
                    else:
                        function_1()
                        function_3()
                
    Intention ID: [14]
    Executable: False
    Description: The agent should aim to move towards the battery spawn cell to pick up a battery if the energy level is less than 50%. If the energy level is above 50%, the agent should move towards the parcels spawn cell, pick up all available parcels, and then proceed to the delivery cell.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                    else:
                        function_12()
                
    Intention ID: [15]
    Executable: False
    Description: The agent should aim to move to the nearest unexplored walkable cell. If the agent's energy level drops below 50%, it should first go to the nearest batteries spawn cell to recharge.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    location = agent['coordinates']
                    energy = agent['energy']
                    if energy < 50:
                        function_14()
                    else:
                        unexplored_cells = [cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'walkable' and cell['cell_coordinates'] !=
                            location]
                        if unexplored_cells:
                            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell[
                                'cell_coordinates'][0] - location[0]) + abs(cell[
                                'cell_coordinates'][1] - location[1]))
                            while location != nearest_cell['cell_coordinates']:
                                if nearest_cell['cell_coordinates'][0] < location[0]:
                                    function_1()
                                elif nearest_cell['cell_coordinates'][0] > location[0]:
                                    function_2()
                                elif nearest_cell['cell_coordinates'][1] < location[1]:
                                    function_3()
                                elif nearest_cell['cell_coordinates'][1] > location[1]:
                                    function_4()
                                location = belief_set['agent'][1]['coordinates']
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is for the agent to move towards the battery spawn cell, pick up a battery if the energy level is less than 50%, and then go towards the parcels spawn cell, pick up all available parcels, and finally, proceed to the delivery cell.
                def function_16():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_14()
                    else:
                        function_12()
                
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to check the agent's energy level. If it's less than 50%, the agent should move to the battery spawn cell and pick up a battery. If the energy level is above 50%, the agent should explore the nearest unvisited walkable cell.
                def function_17():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_14()
                    elif agent['coordinates'][0] + 1 < belief_set['map']['width'] and {
                        'cell_coordinates': [agent['coordinates'][0] + 1, agent[
                        'coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map'][
                        'grid']:
                        function_2()
                    elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {
                        'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][
                        1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_3()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to optimize its route in order to collect as many parcels and batteries as possible, while minimizing energy expenditure and avoiding non-walkable areas.
    Intention ID: [18]
    Executable: False
    Description: The short term goal is for the agent to move towards and pickup a parcel if its energy is above 50% and it is not currently carrying any parcels. If the agent's energy is below 50%, it will move towards and pickup a battery. If the agent is carrying a parcel, it will move towards the delivery cell to deliver the parcel.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] > 50:
                        if not agent['parcels_carried_ids']:
                            if belief_set['parcels'] and agent['coordinates'][0] > belief_set[
                                'parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'
                                ][0]:
                                function_1()
                            elif belief_set['parcels'] and agent['coordinates'][0
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][0]:
                                function_2()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] > belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_3()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_4()
                            else:
                                function_5()
                        elif agent['coordinates'][0] > belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_4()
                        else:
                            function_6()
                    elif belief_set['batteries'] and agent['coordinates'][0] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_1()
                    elif belief_set['batteries'] and agent['coordinates'][0] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_2()
                    elif belief_set['batteries'] and agent['coordinates'][1] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_3()
                    elif belief_set['batteries'] and agent['coordinates'][1] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_4()
                    else:
                        function_5()
                
    Intention ID: [19]
    Executable: False
    Description: The agent should aim to move towards the parcels_spawn location, picking up any parcels on the way, and then move to the batteries_spawn location, picking up batteries if its energy is less than 50%. The agent should then move towards the delivery_cell to drop off any parcels it is carrying.
                def function_19():
                    global belief_set
                    agent_location = belief_set['agent'][1]['coordinates']
                    parcels_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
                    batteries_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    delivery_cell_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_location != parcels_spawn_location:
                        if agent_location[0] < parcels_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcels_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcels_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                    while agent_location != batteries_spawn_location:
                        if agent_location[0] < batteries_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > batteries_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < batteries_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 50:
                            function_5()
                    while agent_location != delivery_cell_location:
                        if agent_location[0] < delivery_cell_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_cell_location[0]:
                            function_1()
                        elif agent_location[1] < delivery_cell_location[1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [20]
    Executable: True
    Description: The agent's short term goal is to move towards the 'parcels_spawn' location, pick up any parcels, move to the 'batteries_spawn' location, pick up batteries if its energy is less than 50%, then move towards the 'delivery_cell' while avoiding non-walkable areas to drop off any parcels it is carrying.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'parcels_spawn')
                    batteries_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'batteries_spawn')
                    delivery_cell = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell')
                    while agent['coordinates'] != parcels_spawn:
                        if agent['coordinates'][0] < parcels_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcels_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcels_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcels_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_5()
                    while agent['coordinates'] != batteries_spawn:
                        if agent['coordinates'][0] < batteries_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > batteries_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < batteries_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > batteries_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    has_parcels_on_map = bool(belief_set['parcels'])
    has_batteries_on_map = bool(belief_set['batteries'])
    has_energy = agent['energy'] > 0
    return has_parcels_on_map or has_batteries_on_map and has_energy



Desire 4: The agent should strive to maintain a high energy level for maximum operational uptime and efficiency while ensuring the timely delivery of parcels to their respective locations.
    Intention ID: [21]
    Executable: True
    Description: The agent should aim to move towards the parcels spawn location, pick up any parcels, and then move to the delivery cell to drop off the parcels it is carrying. During this process, it should also check its energy levels. If the energy level is less than 50% and the agent is on the batteries spawn cell, it should pick up a battery.
                def function_21():
                    global belief_set
                    function_20()
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'batteries_spawn' and cell[
                                'cell_coordinates'] == agent['coordinates']:
                                function_5()
                    function_11()
                
    Intention ID: [22]
    Executable: False
    Description: The agent should aim to efficiently pick up parcels and batteries when necessary, and deliver parcels to the delivery cell, while maintaining a high energy level.
                def function_22():
                    global belief_set
                    function_20()
                    if belief_set['agent'][1]['energy'] < 50:
                        function_5()
                    function_11()
                    function_6()
                
    Intention ID: [23]
    Executable: True
    Description: The agent's short-term goal is to move towards the parcel spawn location, pick up any parcels, then move to the battery spawn location, pick up a battery if its energy is less than 50%, and finally move towards the delivery cell to drop off the parcels it is carrying.
                def function_23():
                    global belief_set
                    function_20()
                    if belief_set['agent'][1]['energy'] < 50:
                        function_5()
                    function_11()
                
Executable: False
Trigger function:
None



2024-11-02 12:24:47,293 - INFO - Running trigger function for desire 3 ...
2024-11-02 12:24:47,294 - INFO - Trigger function for desire 3 has been executed. Result: True
2024-11-02 12:24:47,294 - INFO - Desire 3 could be triggered. Adding it to the list...
2024-11-02 12:24:47,294 - INFO - Desires triggered: [3]. Now randomly choosing which one to run.
2024-11-02 12:24:47,294 - INFO - Desire 3 was randomly chosen. Desire 3 has been triggered.
2024-11-02 12:24:47,294 - INFO - Desire 3 is about to be executed ...
2024-11-02 12:24:47,294 - INFO - Executing all valid intentions for desire 3 ...
2024-11-02 12:24:47,294 - INFO - Executing intention 20 ...
2024-11-02 12:24:47,294 - INFO - Running intention 20 ...
2024-11-02 12:24:47,449 - INFO - Belief set thread started ...
2024-11-02 12:24:47,455 - INFO - Plan thread started ...
2024-11-02 12:24:47,455 - INFO - Started subprocess...
2024-11-02 12:24:47,455 - INFO - Belief set before intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 68}}, 'batteries': {4: {'id': 4, 'coordinates': [2, 0]}}, 'parcels': {}}
2024-11-02 12:24:47,762 - INFO - Executing action action_1 ...
2024-11-02 12:24:47,981 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 66}}]
2024-11-02 12:24:48,361 - INFO - Executing action action_1 ...
2024-11-02 12:24:48,580 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 64}}]
2024-11-02 12:24:48,897 - INFO - Executing action action_3 ...
2024-11-02 12:24:49,133 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 500, 'energy': 62}}]
2024-11-02 12:24:49,438 - INFO - Executing action action_3 ...
2024-11-02 12:24:49,651 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 500, 'energy': 60}}]
2024-11-02 12:24:49,968 - INFO - Executing action action_3 ...
2024-11-02 12:24:50,200 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 58}}]
2024-11-02 12:24:50,535 - INFO - Executing action action_5 ...
2024-11-02 12:24:50,755 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:24:51,058 - INFO - Executing action action_2 ...
2024-11-02 12:24:51,272 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 56}}]
2024-11-02 12:24:51,634 - INFO - Executing action action_2 ...
2024-11-02 12:24:51,866 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 54}}]
2024-11-02 12:24:52,184 - INFO - Executing action action_4 ...
2024-11-02 12:24:52,396 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 500, 'energy': 52}}]
2024-11-02 12:24:52,767 - INFO - Executing action action_4 ...
2024-11-02 12:24:53,017 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 500, 'energy': 50}}]
2024-11-02 12:24:53,319 - INFO - Executing action action_4 ...
2024-11-02 12:24:53,536 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 48}}]
2024-11-02 12:24:53,921 - INFO - Executing action action_6 ...
2024-11-02 12:24:54,135 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:24:54,471 - INFO - Plan thread terminated.
2024-11-02 12:24:54,515 - INFO - Belief set thread terminated.
2024-11-02 12:24:54,558 - INFO - Intention 20 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 66}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 64}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 500, 'energy': 62}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 500, 'energy': 60}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 58}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 56}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 54}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 500, 'energy': 52}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 500, 'energy': 50}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 48}}], []]
2024-11-02 12:24:54,559 - INFO - Belief set after intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 48}}, 'batteries': {4: {'id': 4, 'coordinates': [2, 0]}}, 'parcels': {}}
2024-11-02 12:24:54,559 - INFO - Intention 20 has been executed with plan ['action_1', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 66}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 64}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 500, 'energy': 62}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 500, 'energy': 60}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 58}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 56}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 500, 'energy': 54}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 500, 'energy': 52}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 500, 'energy': 50}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 500, 'energy': 48}}], []].
2024-11-02 12:24:55,575 - INFO - Invalidating desire 3 ...
2024-11-02 12:24:56,097 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all available parcels and deliver them to the delivery cell, while efficiently managing its energy by collecting batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to move the agent towards the battery spawn if its energy level is below 50, otherwise move it towards the parcel spawn.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        battery_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'batteries_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > battery_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_spawn[1]:
                            function_3()
                        else:
                            function_4()
                    else:
                        parcel_spawn = next(cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'parcels_spawn')['cell_coordinates']
                        if agent['coordinates'][0] > parcel_spawn[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the parcels and pick them up.
                def function_8():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    parcels_coordinates = belief_set['parcels'][1]['coordinates']
                    while agent_coordinates[0] < parcels_coordinates[0]:
                        function_2()
                        agent_coordinates[0] += 1
                    while agent_coordinates[0] > parcels_coordinates[0]:
                        function_1()
                        agent_coordinates[0] -= 1
                    while agent_coordinates[1] < parcels_coordinates[1]:
                        function_4()
                        agent_coordinates[1] += 1
                    while agent_coordinates[1] > parcels_coordinates[1]:
                        function_3()
                        agent_coordinates[1] -= 1
                    function_5()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent to the cell containing the delivery point and deliver the parcels.
                def function_9():
                    global belief_set
                    delivery_cell = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell')
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                    return
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move to the cell containing the delivery point and deliver all the parcels it is carrying.
                def function_10():
                    global belief_set
                    delivery_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'delivery_cell':
                            delivery_cell = cell
                            break
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The agent should aim to move to the delivery cell and drop off all the parcels it is carrying, while also checking that it has enough energy to perform the action. If the agent finds itself on the batteries spawn cell while having less than 50% energy, it should pick up a battery before moving to the delivery cell.
                def function_11():
                    global belief_set
                    delivery_cell = [item['cell_coordinates'] for item in belief_set['map']
                        ['grid'] if item['cell_type'] == 'delivery_cell'][0]
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        agent = belief_set['agent'][1]
                        if agent['coordinates'] == [item['cell_coordinates'] for item in
                            belief_set['map']['grid'] if item['cell_type'] == 'batteries_spawn'
                            ][0] and agent['energy'] < 50:
                            function_5()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the parcels spawn cell, pick up all available parcels and then proceed to the delivery cell if the energy level allows it. If the energy is less than 50%, the agent should go to the batteries spawn cell first, pick up a battery and then proceed to the delivery cell.
                def function_12():
                    global belief_set
                    while belief_set['agent'][1]['coordinates'] != [0, 0]:
                        if belief_set['agent'][1]['coordinates'][0] > 0:
                            function_1()
                        elif belief_set['agent'][1]['coordinates'][1] > 0:
                            function_3()
                    function_5()
                    if belief_set['agent'][1]['energy'] < 50:
                        while belief_set['agent'][1]['coordinates'] != [2, 0]:
                            if belief_set['agent'][1]['coordinates'][0] < 2:
                                function_2()
                            elif belief_set['agent'][1]['coordinates'][1] > 0:
                                function_3()
                        function_5()
                    while belief_set['agent'][1]['coordinates'] != [2, 3]:
                        if belief_set['agent'][1]['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent'][1]['coordinates'][1] < 3:
                            function_4()
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if len(belief_set['parcels']) > 0:
        return True
    if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
        return True
    if belief_set['agent'][1]['energy'] < 20:
        return True
    return False



Desire 2: The agent should aim to explore all walkable cells on the map, while preserving its energy by collecting batteries as needed.
    Intention ID: [13]
    Executable: False
    Description: The agent should aim to move towards the batteries spawn cell, pick up a battery if the energy level is less than 50%, then proceed to visit all walkable cells on the grid.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                        function_5()
                    elif agent['coordinates'][0] < belief_set['map']['width'] - 1:
                        function_2()
                    elif agent['coordinates'][1] < belief_set['map']['height'] - 1:
                        function_4()
                    else:
                        function_1()
                        function_3()
                
    Intention ID: [14]
    Executable: False
    Description: The agent should aim to move towards the battery spawn cell to pick up a battery if the energy level is less than 50%. If the energy level is above 50%, the agent should move towards the parcels spawn cell, pick up all available parcels, and then proceed to the delivery cell.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_2()
                    else:
                        function_12()
                
    Intention ID: [15]
    Executable: False
    Description: The agent should aim to move to the nearest unexplored walkable cell. If the agent's energy level drops below 50%, it should first go to the nearest batteries spawn cell to recharge.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    location = agent['coordinates']
                    energy = agent['energy']
                    if energy < 50:
                        function_14()
                    else:
                        unexplored_cells = [cell for cell in belief_set['map']['grid'] if 
                            cell['cell_type'] == 'walkable' and cell['cell_coordinates'] !=
                            location]
                        if unexplored_cells:
                            nearest_cell = min(unexplored_cells, key=lambda cell: abs(cell[
                                'cell_coordinates'][0] - location[0]) + abs(cell[
                                'cell_coordinates'][1] - location[1]))
                            while location != nearest_cell['cell_coordinates']:
                                if nearest_cell['cell_coordinates'][0] < location[0]:
                                    function_1()
                                elif nearest_cell['cell_coordinates'][0] > location[0]:
                                    function_2()
                                elif nearest_cell['cell_coordinates'][1] < location[1]:
                                    function_3()
                                elif nearest_cell['cell_coordinates'][1] > location[1]:
                                    function_4()
                                location = belief_set['agent'][1]['coordinates']
                
    Intention ID: [16]
    Executable: False
    Description: The short term goal is for the agent to move towards the battery spawn cell, pick up a battery if the energy level is less than 50%, and then go towards the parcels spawn cell, pick up all available parcels, and finally, proceed to the delivery cell.
                def function_16():
                    global belief_set
                    if belief_set['agent'][1]['energy'] < 50:
                        function_14()
                    else:
                        function_12()
                
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to check the agent's energy level. If it's less than 50%, the agent should move to the battery spawn cell and pick up a battery. If the energy level is above 50%, the agent should explore the nearest unvisited walkable cell.
                def function_17():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_14()
                    elif agent['coordinates'][0] + 1 < belief_set['map']['width'] and {
                        'cell_coordinates': [agent['coordinates'][0] + 1, agent[
                        'coordinates'][1]], 'cell_type': 'walkable'} in belief_set['map'][
                        'grid']:
                        function_2()
                    elif agent['coordinates'][0] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0] - 1, agent['coordinates'][1]], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_1()
                    elif agent['coordinates'][1] + 1 < belief_set['map']['height'] and {
                        'cell_coordinates': [agent['coordinates'][0], agent['coordinates'][
                        1] + 1], 'cell_type': 'walkable'} in belief_set['map']['grid']:
                        function_4()
                    elif agent['coordinates'][1] - 1 >= 0 and {'cell_coordinates': [agent[
                        'coordinates'][0], agent['coordinates'][1] - 1], 'cell_type':
                        'walkable'} in belief_set['map']['grid']:
                        function_3()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to optimize its route in order to collect as many parcels and batteries as possible, while minimizing energy expenditure and avoiding non-walkable areas.
    Intention ID: [18]
    Executable: False
    Description: The short term goal is for the agent to move towards and pickup a parcel if its energy is above 50% and it is not currently carrying any parcels. If the agent's energy is below 50%, it will move towards and pickup a battery. If the agent is carrying a parcel, it will move towards the delivery cell to deliver the parcel.
                def function_18():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] > 50:
                        if not agent['parcels_carried_ids']:
                            if belief_set['parcels'] and agent['coordinates'][0] > belief_set[
                                'parcels'][list(belief_set['parcels'].keys())[0]]['coordinates'
                                ][0]:
                                function_1()
                            elif belief_set['parcels'] and agent['coordinates'][0
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][0]:
                                function_2()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] > belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_3()
                            elif belief_set['parcels'] and agent['coordinates'][1
                                ] < belief_set['parcels'][list(belief_set['parcels'].keys())[0]
                                ]['coordinates'][1]:
                                function_4()
                            else:
                                function_5()
                        elif agent['coordinates'][0] > belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][0] < belief_set['map']['grid'][11][
                            'cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][1] > belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_3()
                        elif agent['coordinates'][1] < belief_set['map']['grid'][11][
                            'cell_coordinates'][1]:
                            function_4()
                        else:
                            function_6()
                    elif belief_set['batteries'] and agent['coordinates'][0] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_1()
                    elif belief_set['batteries'] and agent['coordinates'][0] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][0
                        ]:
                        function_2()
                    elif belief_set['batteries'] and agent['coordinates'][1] > belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_3()
                    elif belief_set['batteries'] and agent['coordinates'][1] < belief_set[
                        'batteries'][list(belief_set['batteries'].keys())[0]]['coordinates'][1
                        ]:
                        function_4()
                    else:
                        function_5()
                
    Intention ID: [19]
    Executable: False
    Description: The agent should aim to move towards the parcels_spawn location, picking up any parcels on the way, and then move to the batteries_spawn location, picking up batteries if its energy is less than 50%. The agent should then move towards the delivery_cell to drop off any parcels it is carrying.
                def function_19():
                    global belief_set
                    agent_location = belief_set['agent'][1]['coordinates']
                    parcels_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn'][0]
                    batteries_spawn_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    delivery_cell_location = [cell['cell_coordinates'] for cell in
                        belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_location != parcels_spawn_location:
                        if agent_location[0] < parcels_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > parcels_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < parcels_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        function_5()
                    while agent_location != batteries_spawn_location:
                        if agent_location[0] < batteries_spawn_location[0]:
                            function_2()
                        elif agent_location[0] > batteries_spawn_location[0]:
                            function_1()
                        elif agent_location[1] < batteries_spawn_location[1]:
                            function_4()
                        else:
                            function_3()
                        if belief_set['agent'][1]['energy'] < 50:
                            function_5()
                    while agent_location != delivery_cell_location:
                        if agent_location[0] < delivery_cell_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_cell_location[0]:
                            function_1()
                        elif agent_location[1] < delivery_cell_location[1]:
                            function_4()
                        else:
                            function_3()
                    function_6()
                
    Intention ID: [20]
    Executable: True
    Description: The agent's short term goal is to move towards the 'parcels_spawn' location, pick up any parcels, move to the 'batteries_spawn' location, pick up batteries if its energy is less than 50%, then move towards the 'delivery_cell' while avoiding non-walkable areas to drop off any parcels it is carrying.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'parcels_spawn')
                    batteries_spawn = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'batteries_spawn')
                    delivery_cell = next(cell['cell_coordinates'] for cell in belief_set[
                        'map']['grid'] if cell['cell_type'] == 'delivery_cell')
                    while agent['coordinates'] != parcels_spawn:
                        if agent['coordinates'][0] < parcels_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcels_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcels_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcels_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_5()
                    while agent['coordinates'] != batteries_spawn:
                        if agent['coordinates'][0] < batteries_spawn[0]:
                            function_2()
                        elif agent['coordinates'][0] > batteries_spawn[0]:
                            function_1()
                        elif agent['coordinates'][1] < batteries_spawn[1]:
                            function_4()
                        elif agent['coordinates'][1] > batteries_spawn[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        function_5()
                    while agent['coordinates'] != delivery_cell:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                        agent = belief_set['agent'][1]
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    has_parcels_on_map = bool(belief_set['parcels'])
    has_batteries_on_map = bool(belief_set['batteries'])
    has_energy = agent['energy'] > 0
    return has_parcels_on_map or has_batteries_on_map and has_energy



Desire 4: The agent should strive to maintain a high energy level for maximum operational uptime and efficiency while ensuring the timely delivery of parcels to their respective locations.
    Intention ID: [21]
    Executable: True
    Description: The agent should aim to move towards the parcels spawn location, pick up any parcels, and then move to the delivery cell to drop off the parcels it is carrying. During this process, it should also check its energy levels. If the energy level is less than 50% and the agent is on the batteries spawn cell, it should pick up a battery.
                def function_21():
                    global belief_set
                    function_20()
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 50:
                        for cell in belief_set['map']['grid']:
                            if cell['cell_type'] == 'batteries_spawn' and cell[
                                'cell_coordinates'] == agent['coordinates']:
                                function_5()
                    function_11()
                
    Intention ID: [22]
    Executable: False
    Description: The agent should aim to efficiently pick up parcels and batteries when necessary, and deliver parcels to the delivery cell, while maintaining a high energy level.
                def function_22():
                    global belief_set
                    function_20()
                    if belief_set['agent'][1]['energy'] < 50:
                        function_5()
                    function_11()
                    function_6()
                
    Intention ID: [23]
    Executable: True
    Description: The agent's short-term goal is to move towards the parcel spawn location, pick up any parcels, then move to the battery spawn location, pick up a battery if its energy is less than 50%, and finally move towards the delivery cell to drop off the parcels it is carrying.
                def function_23():
                    global belief_set
                    function_20()
                    if belief_set['agent'][1]['energy'] < 50:
                        function_5()
                    function_11()
                
Executable: False
Trigger function:
None



2024-11-02 12:24:56,109 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:24:56,109 - INFO - No desire has been triggered.
2024-11-02 12:24:56,147 - INFO - No desire triggered.
