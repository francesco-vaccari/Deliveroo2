
Desire 1: The agent should aim to efficiently collect and deliver as many parcels as possible within the map while maintaining sufficient energy levels by picking up batteries when necessary.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to navigate the agent to the nearest parcel, pick it up and deliver it to the delivery cell.
                def function_7():
                    global belief_set
                    agent_loc = belief_set['agent'][1]['coordinates']
                    parcel_loc = belief_set['parcels'][1]['coordinates']
                    delivery_loc = [cell['cell_coordinates'] for cell in belief_set['map'][
                        'grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while agent_loc != parcel_loc:
                        if agent_loc[0] < parcel_loc[0]:
                            function_2()
                        elif agent_loc[0] > parcel_loc[0]:
                            function_1()
                        elif agent_loc[1] < parcel_loc[1]:
                            function_4()
                        else:
                            function_3()
                        agent_loc = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_loc != delivery_loc:
                        if agent_loc[0] < delivery_loc[0]:
                            function_2()
                        elif agent_loc[0] > delivery_loc[0]:
                            function_1()
                        elif agent_loc[1] < delivery_loc[1]:
                            function_4()
                        else:
                            function_3()
                        agent_loc = belief_set['agent'][1]['coordinates']
                    function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    batteries = belief_set['batteries']
    if len(parcels) > 0 or len(batteries) > 0 or agent['energy'] < 50:
        return True
    else:
        return False



Desire 2: The agent's long term goal is to efficiently navigate the map, collecting parcels from the spawn area and delivering them to the designated delivery cell while managing its energy level by collecting batteries from the batteries spawn area.
    Intention ID: [8]
    Executable: False
    Description: The short term goal is to navigate the agent towards the parcel spawn cell to pick up a parcel. By doing so, the agent progresses towards its long-term goal of delivering parcels.
                def function_8():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcel_spawn_cell = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'parcels_spawn'][0]
                    parcel_spawn_coordinates = parcel_spawn_cell['cell_coordinates']
                    while agent['coordinates'] != parcel_spawn_coordinates:
                        if agent['coordinates'][0] > parcel_spawn_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_spawn_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_spawn_coordinates[1]:
                            function_3()
                        elif agent['coordinates'][1] < parcel_spawn_coordinates[1]:
                            function_4()
                    function_5()
                
    Intention ID: [9]
    Executable: True
    Description: The agent's short term goal is to navigate towards the nearest parcel spawn cell while ensuring that the path to the target is clear. If the path is not clear, the agent should alter its course and if the agent is stuck in a loop, it should break out of it after a certain number of attempts.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    target_cell = None
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            target_cell = cell['cell_coordinates']
                    if target_cell is None:
                        return
                    x_diff = target_cell[0] - agent['coordinates'][0]
                    y_diff = target_cell[1] - agent['coordinates'][1]
                    attempt_count = 0
                    while agent['coordinates'] != target_cell and attempt_count < 100:
                        if x_diff > 0:
                            function_2()
                            x_diff -= 1
                        elif x_diff < 0:
                            function_1()
                            x_diff += 1
                        if y_diff > 0:
                            function_4()
                            y_diff -= 1
                        elif y_diff < 0:
                            function_3()
                            y_diff += 1
                        attempt_count += 1
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest batteries spawn cell while ensuring that its energy level is above a certain threshold. If the energy level is below the threshold, the agent should pick up a battery to replenish its energy.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_spawn = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'batteries_spawn'][0]['cell_coordinates']
                    if agent['energy'] < 30:
                        if agent['coordinates'] == battery_spawn:
                            function_5()
                        else:
                            function_9()
                    elif agent['coordinates'][0] < battery_spawn[0]:
                        function_2()
                    elif agent['coordinates'][0] > battery_spawn[0]:
                        function_1()
                    elif agent['coordinates'][1] < battery_spawn[1]:
                        function_4()
                    elif agent['coordinates'][1] > battery_spawn[1]:
                        function_3()
                
    Intention ID: [11]
    Executable: False
    Description: The agent's short term goal is to pick up a parcel from the spawn cell, if it's currently in that cell. If not, it should navigate towards the nearest parcel spawn cell.
                def function_11():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            spawn_coordinates = cell['cell_coordinates']
                            break
                    if agent_coordinates == spawn_coordinates:
                        function_5()
                    else:
                        function_9()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to navigate to the parcel spawn location, pick up any parcels, and then move to the delivery cell to drop off the parcels.
                def function_12():
                    global belief_set
                    current_position = belief_set['agent'][1]['coordinates']
                    parcel_spawn = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'parcels_spawn'][0]['cell_coordinates']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    while current_position != parcel_spawn:
                        if parcel_spawn[0] < current_position[0]:
                            function_1()
                        elif parcel_spawn[0] > current_position[0]:
                            function_2()
                        if parcel_spawn[1] < current_position[1]:
                            function_3()
                        elif parcel_spawn[1] > current_position[1]:
                            function_4()
                        current_position = belief_set['agent'][1]['coordinates']
                    function_5()
                    while current_position != delivery_cell:
                        if delivery_cell[0] < current_position[0]:
                            function_1()
                        elif delivery_cell[0] > current_position[0]:
                            function_2()
                        if delivery_cell[1] < current_position[1]:
                            function_3()
                        elif delivery_cell[1] > current_position[1]:
                            function_4()
                        current_position = belief_set['agent'][1]['coordinates']
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['parcels_carried_ids']:
        return True
    elif belief_set['agent'][1]['energy'] < 30 and belief_set['batteries']:
        return True
    else:
        return False



Desire 3: The agent's long term goal is to optimize its path planning in the environment, ensuring it minimizes energy consumption by using the shortest paths and avoiding non-walkable cells, while simultaneously maximizing its score by timely parcel delivery.
    Intention ID: [13]
    Executable: True
    Description: The agent's short term goal is to navigate to the nearest parcel, pick it up, and then move to the delivery cell to drop off the parcel.
                def function_13():
                    global belief_set
                    function_9()
                    function_5()
                    function_12()
                    function_6()
                
Executable: False
Trigger function:
None


