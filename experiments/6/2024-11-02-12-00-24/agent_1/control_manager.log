2024-11-02 12:00:25,103 - INFO - Loading actions from agent_dir/actions.json ...
2024-11-02 12:00:25,196 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-11-02 12:01:01,520 - INFO - Checking if a desire has been triggered ...
Desires: Empty
2024-11-02 12:01:01,526 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:01:01,545 - INFO - No desire has been triggered.
2024-11-02 12:01:01,545 - INFO - No desire triggered.
2024-11-02 12:01:03,424 - INFO - Desire added: 1. Desires:
Desire 1: The agent's long term goal is to optimize its path to collect as many parcels as possible while maintaining sufficient energy levels, by strategically using battery spawn points for recharging.
Executable: False
Trigger function:
None



2024-11-02 12:01:11,884 - INFO - Testing intention 
def function():
    global belief_set
    # get agent's and parcel's coordinates
    agent_coords = belief_set['agent']['coordinates']
    parcel_coords = belief_set['parcels'][1]['coordinates']
    # navigate to parcel
    while agent_coords != parcel_coords:
        if agent_coords[0] > parcel_coords[0]:
            function_1()
            agent_coords[0] -= 1
        elif agent_coords[0] < parcel_coords[0]:
            function_2()
            agent_coords[0] += 1
        if agent_coords[1] > parcel_coords[1]:
            function_3()
            agent_coords[1] -= 1
        elif agent_coords[1] < parcel_coords[1]:
            function_4()
            agent_coords[1] += 1
    # pick up the parcel
    function_5()
2024-11-02 12:01:11,884 - INFO - The intention is valid.
2024-11-02 12:01:11,897 - INFO - Intention added to desire 1
2024-11-02 12:01:11,898 - INFO - Running intention 7 ...
2024-11-02 12:01:12,028 - INFO - Belief set thread started ...
2024-11-02 12:01:12,028 - INFO - Plan thread started ...
2024-11-02 12:01:12,084 - INFO - Started subprocess...
2024-11-02 12:01:12,085 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'score': 0, 'energy': 100}, 'battery': {1: [2, 0]}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:01:12,345 - INFO - Executing action action_1 ...
2024-11-02 12:01:12,582 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 0, 'energy': 98}}]
2024-11-02 12:01:12,869 - INFO - Executing action action_3 ...
2024-11-02 12:01:13,100 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 0, 'energy': 96}}]
2024-11-02 12:01:13,392 - INFO - Executing action action_3 ...
2024-11-02 12:01:13,616 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 0, 'energy': 94}}]
2024-11-02 12:01:13,936 - INFO - Executing action action_5 ...
2024-11-02 12:01:14,160 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 92}}]
2024-11-02 12:01:14,528 - INFO - Belief set thread terminated.
2024-11-02 12:01:14,528 - INFO - Plan thread terminated.
2024-11-02 12:01:14,560 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 0, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 0, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 0, 'energy': 94}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 92}}]]
2024-11-02 12:01:14,560 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 92}, 'battery': {1: [2, 0]}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}}
2024-11-02 12:01:21,827 - INFO - Testing intention 
def function():
	global belief_set
	while belief_set['agent']['coordinates'] != [2, 3]:
		if belief_set['agent']['coordinates'][0] < 2:
			function_2()
		elif belief_set['agent']['coordinates'][1] < 3:
			function_4()
		if belief_set['agent']['energy'] <= 40 and belief_set['agent']['coordinates'] == [2, 0]:
			function_5()
	function_6()
2024-11-02 12:01:21,827 - INFO - The intention is valid.
2024-11-02 12:01:21,859 - INFO - Intention added to desire 1
2024-11-02 12:01:21,859 - INFO - Running intention 8 ...
2024-11-02 12:01:22,060 - INFO - Belief set thread started ...
2024-11-02 12:01:22,072 - INFO - Plan thread started ...
2024-11-02 12:01:22,085 - INFO - Started subprocess...
2024-11-02 12:01:22,085 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 92}, 'battery': {1: [2, 0]}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}}
2024-11-02 12:01:22,350 - INFO - Executing action action_2 ...
2024-11-02 12:01:22,594 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 90}}]
2024-11-02 12:01:22,958 - INFO - Executing action action_2 ...
2024-11-02 12:01:23,195 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 88}}]
2024-11-02 12:01:23,601 - INFO - Executing action action_4 ...
2024-11-02 12:01:23,825 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 86}}]
2024-11-02 12:01:24,232 - INFO - Executing action action_4 ...
2024-11-02 12:01:24,464 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 84}}]
2024-11-02 12:01:24,815 - INFO - Executing action action_4 ...
2024-11-02 12:01:25,047 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 82}}]
2024-11-02 12:01:25,328 - INFO - Executing action action_6 ...
2024-11-02 12:01:25,534 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 80}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:01:25,869 - INFO - Plan thread terminated.
2024-11-02 12:01:25,907 - INFO - Belief set thread terminated.
2024-11-02 12:01:25,938 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 88}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 86}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 84}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [1, 2], 'score': 0, 'energy': 82}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 80}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-02 12:01:25,951 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 80}, 'battery': {1: [2, 0]}, 'parcels': {}}
2024-11-02 12:01:29,208 - INFO - Invalidating intention 8 ...
2024-11-02 12:01:41,696 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    parcel_location = belief_set['parcels'][3]['coordinates']
    delivery_location = [cell for cell in belief_set['map']['grid'] if cell['cell_type']=='delivery_cell'][0]['cell_coordinates']
    battery_location = belief_set['battery'][1]
    if agent['energy'] < 50:
        if agent['coordinates'][0] > battery_location[0]:
            function_1()
        elif agent['coordinates'][0] < battery_location[0]:
            function_2()
        elif agent['coordinates'][1] > battery_location[1]:
            function_3()
        else:
            function_4()
    else:
        if len(agent['parcels_carried_ids']) == 0:
            if agent['coordinates'][0] > parcel_location[0]:
                function_1()
            elif agent['coordinates'][0] < parcel_location[0]:
                function_2()
            elif agent['coordinates'][1] > parcel_location[1]:
                function_3()
            else:
                function_4()
            function_5()
        else:
            if agent['coordinates'][0] > delivery_location[0]:
                function_1()
            elif agent['coordinates'][0] < delivery_location[0]:
                function_2()
            elif agent['coordinates'][1] > delivery_location[1]:
                function_3()
            else:
                function_4()
            function_6()

2024-11-02 12:01:41,709 - INFO - The intention is valid.
2024-11-02 12:01:41,710 - INFO - Intention added to desire 1
2024-11-02 12:01:41,710 - INFO - Running intention 9 ...
2024-11-02 12:01:41,892 - INFO - Belief set thread started ...
2024-11-02 12:01:41,904 - INFO - Plan thread started ...
2024-11-02 12:01:41,911 - INFO - Started subprocess...
2024-11-02 12:01:41,911 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 80}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:01:42,215 - INFO - Executing action action_1 ...
2024-11-02 12:01:42,465 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 78}}]
2024-11-02 12:01:42,816 - INFO - Executing action action_5 ...
2024-11-02 12:01:43,040 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:01:43,362 - INFO - Plan thread terminated.
2024-11-02 12:01:43,374 - INFO - Belief set thread terminated.
2024-11-02 12:01:43,380 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 78}}], []]
2024-11-02 12:01:43,399 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 78}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:01:48,275 - INFO - Invalidating intention 9 ...
2024-11-02 12:02:00,104 - INFO - Testing intention 
def function():
    global belief_set
    # get agent's current position
    current_position = belief_set['agent']['coordinates']
    # get parcels position
    parcels_position = belief_set['map']['grid'][0]['cell_coordinates']
    # get batteries position
    batteries_position = belief_set['map']['grid'][8]['cell_coordinates']
    # get agent's energy
    energy = belief_set['agent']['energy']
    # If energy is below 30, move towards the battery spawn location
    if energy < 30:
        if current_position[0] > batteries_position[0]:
            function_1()
        elif current_position[0] < batteries_position[0]:
            function_2()
        elif current_position[1] > batteries_position[1]:
            function_3()
        elif current_position[1] < batteries_position[1]:
            function_4()
    # If energy is above 30, move towards the parcel spawn location and pick up parcels
    else:
        if current_position[0] > parcels_position[0]:
            function_1()
        elif current_position[0] < parcels_position[0]:
            function_2()
        elif current_position[1] > parcels_position[1]:
            function_3()
        elif current_position[1] < parcels_position[1]:
            function_4()
        # If agent is at the parcel spawn location, pick up parcels
        if current_position == parcels_position:
            function_5()
2024-11-02 12:02:00,105 - INFO - The intention is valid.
2024-11-02 12:02:00,124 - INFO - Intention added to desire 1
2024-11-02 12:02:00,137 - INFO - Running intention 10 ...
2024-11-02 12:02:00,355 - INFO - Belief set thread started ...
2024-11-02 12:02:00,362 - INFO - Plan thread started ...
2024-11-02 12:02:00,362 - INFO - Started subprocess...
2024-11-02 12:02:00,443 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 78}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:02:00,769 - INFO - Executing action action_1 ...
2024-11-02 12:02:00,986 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 76}}]
2024-11-02 12:02:01,254 - INFO - Belief set thread terminated.
2024-11-02 12:02:01,266 - INFO - Plan thread terminated.
2024-11-02 12:02:01,279 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 76}}]]
2024-11-02 12:02:01,279 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 76}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:02:06,179 - INFO - Invalidating intention 10 ...
2024-11-02 12:02:06,179 - INFO - Invalidating intention 2 ...
2024-11-02 12:02:06,179 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-02 12:02:06,179 - INFO - Invalidating intention 4 ...
2024-11-02 12:02:06,179 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-02 12:02:06,198 - INFO - Invalidating intention 5 ...
2024-11-02 12:02:06,198 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-02 12:02:07,483 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to optimize its path to collect as many parcels as possible while maintaining sufficient energy levels, by strategically using battery spawn points for recharging.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location and pick up any parcels on the ground.
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords != parcel_coords:
                        if agent_coords[0] > parcel_coords[0]:
                            function_1()
                            agent_coords[0] -= 1
                        elif agent_coords[0] < parcel_coords[0]:
                            function_2()
                            agent_coords[0] += 1
                        if agent_coords[1] > parcel_coords[1]:
                            function_3()
                            agent_coords[1] -= 1
                        elif agent_coords[1] < parcel_coords[1]:
                            function_4()
                            agent_coords[1] += 1
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell to deliver the parcels it is carrying, and recharge its energy if the energy level is low.
                def function_8():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [2, 3]:
                        if belief_set['agent']['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] < 3:
                            function_4()
                        if belief_set['agent']['energy'] <= 40 and belief_set['agent'][
                            'coordinates'] == [2, 0]:
                            function_5()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to navigate towards the nearest parcel, pick it up and then move towards the delivery cell. If the energy level falls below 50, the agent should move towards the battery spawn cell to recharge.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcel_location = belief_set['parcels'][3]['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    battery_location = belief_set['battery'][1]
                    if agent['energy'] < 50:
                        if agent['coordinates'][0] > battery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                        else:
                            function_4()
                    elif len(agent['parcels_carried_ids']) == 0:
                        if agent['coordinates'][0] > parcel_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_5()
                    else:
                        if agent['coordinates'][0] > delivery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_6()
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards parcels, pick them up if present, and then move towards the battery spawn location when the energy level is below a certain threshold.
                def function_10():
                    global belief_set
                    current_position = belief_set['agent']['coordinates']
                    parcels_position = belief_set['map']['grid'][0]['cell_coordinates']
                    batteries_position = belief_set['map']['grid'][8]['cell_coordinates']
                    energy = belief_set['agent']['energy']
                    if energy < 30:
                        if current_position[0] > batteries_position[0]:
                            function_1()
                        elif current_position[0] < batteries_position[0]:
                            function_2()
                        elif current_position[1] > batteries_position[1]:
                            function_3()
                        elif current_position[1] < batteries_position[1]:
                            function_4()
                    else:
                        if current_position[0] > parcels_position[0]:
                            function_1()
                        elif current_position[0] < parcels_position[0]:
                            function_2()
                        elif current_position[1] > parcels_position[1]:
                            function_3()
                        elif current_position[1] < parcels_position[1]:
                            function_4()
                        if current_position == parcels_position:
                            function_5()
                
Executable: False
Trigger function:
None



2024-11-02 12:02:07,483 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:02:07,495 - INFO - No desire has been triggered.
2024-11-02 12:02:07,495 - INFO - No desire triggered.
2024-11-02 12:02:09,000 - INFO - Desire added: 2. Desires:
Desire 1: The agent's long term goal is to optimize its path to collect as many parcels as possible while maintaining sufficient energy levels, by strategically using battery spawn points for recharging.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location and pick up any parcels on the ground.
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords != parcel_coords:
                        if agent_coords[0] > parcel_coords[0]:
                            function_1()
                            agent_coords[0] -= 1
                        elif agent_coords[0] < parcel_coords[0]:
                            function_2()
                            agent_coords[0] += 1
                        if agent_coords[1] > parcel_coords[1]:
                            function_3()
                            agent_coords[1] -= 1
                        elif agent_coords[1] < parcel_coords[1]:
                            function_4()
                            agent_coords[1] += 1
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell to deliver the parcels it is carrying, and recharge its energy if the energy level is low.
                def function_8():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [2, 3]:
                        if belief_set['agent']['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] < 3:
                            function_4()
                        if belief_set['agent']['energy'] <= 40 and belief_set['agent'][
                            'coordinates'] == [2, 0]:
                            function_5()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to navigate towards the nearest parcel, pick it up and then move towards the delivery cell. If the energy level falls below 50, the agent should move towards the battery spawn cell to recharge.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcel_location = belief_set['parcels'][3]['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    battery_location = belief_set['battery'][1]
                    if agent['energy'] < 50:
                        if agent['coordinates'][0] > battery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                        else:
                            function_4()
                    elif len(agent['parcels_carried_ids']) == 0:
                        if agent['coordinates'][0] > parcel_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_5()
                    else:
                        if agent['coordinates'][0] > delivery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_6()
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards parcels, pick them up if present, and then move towards the battery spawn location when the energy level is below a certain threshold.
                def function_10():
                    global belief_set
                    current_position = belief_set['agent']['coordinates']
                    parcels_position = belief_set['map']['grid'][0]['cell_coordinates']
                    batteries_position = belief_set['map']['grid'][8]['cell_coordinates']
                    energy = belief_set['agent']['energy']
                    if energy < 30:
                        if current_position[0] > batteries_position[0]:
                            function_1()
                        elif current_position[0] < batteries_position[0]:
                            function_2()
                        elif current_position[1] > batteries_position[1]:
                            function_3()
                        elif current_position[1] < batteries_position[1]:
                            function_4()
                    else:
                        if current_position[0] > parcels_position[0]:
                            function_1()
                        elif current_position[0] < parcels_position[0]:
                            function_2()
                        elif current_position[1] > parcels_position[1]:
                            function_3()
                        elif current_position[1] < parcels_position[1]:
                            function_4()
                        if current_position == parcels_position:
                            function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent should aim to collect all parcels efficiently and deliver them to the delivery cell, while managing its energy levels by collecting batteries as needed.
Executable: False
Trigger function:
None



2024-11-02 12:02:20,086 - INFO - Testing intention 
def function():
    global belief_set
    parcels = belief_set['parcels']
    agent_location = belief_set['agent']['coordinates']
    delivery_location = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
    closest_parcel = min(parcels.values(), key=lambda x: abs(x['coordinates'][0]-agent_location[0])+abs(x['coordinates'][1]-agent_location[1]))
    parcel_location = closest_parcel['coordinates']
    while agent_location != parcel_location:
        if agent_location[0] < parcel_location[0]: function_2()
        elif agent_location[0] > parcel_location[0]: function_1()
        if agent_location[1] < parcel_location[1]: function_4()
        elif agent_location[1] > parcel_location[1]: function_3()
    function_5()
    while agent_location != delivery_location:
        if agent_location[0] < delivery_location[0]: function_2()
        elif agent_location[0] > delivery_location[0]: function_1()
        if agent_location[1] < delivery_location[1]: function_4()
        elif agent_location[1] > delivery_location[1]: function_3()
    function_6()

2024-11-02 12:02:20,092 - INFO - The intention is valid.
2024-11-02 12:02:20,117 - INFO - Intention added to desire 2
2024-11-02 12:02:20,117 - INFO - Running intention 11 ...
2024-11-02 12:02:20,312 - INFO - Belief set thread started ...
2024-11-02 12:02:20,331 - INFO - Plan thread started ...
2024-11-02 12:02:20,331 - INFO - Started subprocess...
2024-11-02 12:02:20,331 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'score': 40, 'energy': 76}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:02:20,645 - INFO - Executing action action_3 ...
2024-11-02 12:02:20,862 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 40, 'energy': 74}}]
2024-11-02 12:02:21,200 - INFO - Executing action action_3 ...
2024-11-02 12:02:21,417 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 40, 'energy': 72}}]
2024-11-02 12:02:21,778 - INFO - Executing action action_3 ...
2024-11-02 12:02:22,015 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 70}}]
2024-11-02 12:02:22,418 - INFO - Executing action action_3 ...
2024-11-02 12:02:22,635 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:22,941 - INFO - Executing action action_3 ...
2024-11-02 12:02:23,165 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:23,547 - INFO - Executing action action_3 ...
2024-11-02 12:02:23,766 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:24,076 - INFO - Executing action action_3 ...
2024-11-02 12:02:24,294 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:24,656 - INFO - Executing action action_3 ...
2024-11-02 12:02:24,868 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:25,255 - INFO - Executing action action_3 ...
2024-11-02 12:02:25,498 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:25,808 - INFO - Executing action action_3 ...
2024-11-02 12:02:26,027 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:26,389 - INFO - Executing action action_3 ...
2024-11-02 12:02:26,601 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:26,924 - INFO - Executing action action_3 ...
2024-11-02 12:02:27,212 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:27,543 - INFO - Executing action action_3 ...
2024-11-02 12:02:27,785 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:28,136 - INFO - Executing action action_3 ...
2024-11-02 12:02:28,372 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:28,658 - INFO - Executing action action_3 ...
2024-11-02 12:02:28,875 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:29,186 - INFO - Executing action action_3 ...
2024-11-02 12:02:29,468 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:29,818 - INFO - Executing action action_3 ...
2024-11-02 12:02:30,049 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:30,335 - INFO - Executing action action_3 ...
2024-11-02 12:02:30,560 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:31,008 - INFO - Executing action action_3 ...
2024-11-02 12:02:31,221 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:31,593 - INFO - Executing action action_3 ...
2024-11-02 12:02:31,829 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:32,135 - INFO - Executing action action_3 ...
2024-11-02 12:02:32,394 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:32,730 - INFO - Executing action action_3 ...
2024-11-02 12:02:32,947 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:33,238 - INFO - Executing action action_3 ...
2024-11-02 12:02:33,470 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:33,807 - INFO - Executing action action_3 ...
2024-11-02 12:02:34,024 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:34,419 - INFO - Executing action action_3 ...
2024-11-02 12:02:34,651 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:34,949 - INFO - Executing action action_3 ...
2024-11-02 12:02:35,168 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:02:35,404 - ERROR - Error during intention 11 execution. Intention 11 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-02 12:02:35,429 - INFO - Belief set thread terminated.
2024-11-02 12:02:35,442 - INFO - Plan thread terminated.
2024-11-02 12:02:35,473 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'score': 40, 'energy': 74}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'score': 40, 'energy': 72}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 70}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-02 12:02:35,473 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 70}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:02:43,220 - INFO - Invalidating intention 11 ...
2024-11-02 12:02:59,609 - INFO - Testing intention 
def function():
    global belief_set
    parcels = belief_set['parcels']
    agent = belief_set['agent']
    delivery_cell_coords = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    while True:
        if len(parcels) == 0 or agent['energy'] <= 0:
            break
        else:
            closest_parcel_coords = min(parcels.values(), key=lambda x: abs(x['coordinates'][0] - agent['coordinates'][0]) + abs(x['coordinates'][1] - agent['coordinates'][1]))['coordinates']
            while agent['coordinates'] != closest_parcel_coords:
                if agent['coordinates'][0] < closest_parcel_coords[0]:
                    function_2()
                elif agent['coordinates'][0] > closest_parcel_coords[0]:
                    function_1()
                elif agent['coordinates'][1] < closest_parcel_coords[1]:
                    function_4()
                else:
                    function_3()
                agent['coordinates'] = closest_parcel_coords
            function_5()
            while agent['coordinates'] != delivery_cell_coords:
                if agent['coordinates'][0] < delivery_cell_coords[0]:
                    function_2()
                elif agent['coordinates'][0] > delivery_cell_coords[0]:
                    function_1()
                elif agent['coordinates'][1] < delivery_cell_coords[1]:
                    function_4()
                else:
                    function_3()
                agent['coordinates'] = delivery_cell_coords
            function_6()
            parcels = {k: v for k, v in parcels.items() if v['carried_by_id'] is None}
    return
2024-11-02 12:02:59,610 - INFO - The intention is valid.
2024-11-02 12:02:59,630 - INFO - Intention added to desire 2
2024-11-02 12:02:59,630 - INFO - Running intention 12 ...
2024-11-02 12:02:59,762 - INFO - Belief set thread started ...
2024-11-02 12:02:59,768 - INFO - Plan thread started ...
2024-11-02 12:02:59,800 - INFO - Started subprocess...
2024-11-02 12:02:59,800 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 70}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:03:00,161 - INFO - Executing action action_5 ...
2024-11-02 12:03:00,368 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7], 'score': 40, 'energy': 68}}]
2024-11-02 12:03:00,686 - INFO - Executing action action_2 ...
2024-11-02 12:03:00,961 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7], 'score': 40, 'energy': 66}}]
2024-11-02 12:03:01,336 - INFO - Executing action action_6 ...
2024-11-02 12:03:01,591 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-02 12:03:01,873 - INFO - Executing action action_1 ...
2024-11-02 12:03:02,090 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 62}}]
2024-11-02 12:03:02,419 - INFO - Executing action action_5 ...
2024-11-02 12:03:02,638 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:03:02,936 - INFO - Executing action action_2 ...
2024-11-02 12:03:03,205 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 60}}]
2024-11-02 12:03:03,488 - INFO - Executing action action_6 ...
2024-11-02 12:03:03,725 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:03:03,998 - INFO - Executing action action_1 ...
2024-11-02 12:03:04,238 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 58}}]
2024-11-02 12:03:04,644 - INFO - Executing action action_5 ...
2024-11-02 12:03:04,855 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:03:05,214 - INFO - Executing action action_2 ...
2024-11-02 12:03:05,445 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 56}}]
2024-11-02 12:03:05,768 - INFO - Executing action action_6 ...
2024-11-02 12:03:06,017 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:03:06,380 - INFO - Executing action action_1 ...
2024-11-02 12:03:06,610 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 54}}]
2024-11-02 12:03:06,958 - INFO - Executing action action_5 ...
2024-11-02 12:03:07,188 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:03:07,512 - INFO - Executing action action_2 ...
2024-11-02 12:03:07,785 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 52}}]
2024-11-02 12:03:08,096 - INFO - Executing action action_6 ...
2024-11-02 12:03:08,321 - INFO - Action action_6 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-02 12:03:08,626 - INFO - Executing action action_1 ...
2024-11-02 12:03:08,839 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 50}}]
2024-11-02 12:03:09,187 - INFO - Executing action action_5 ...
2024-11-02 12:03:09,426 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [8], 'score': 40, 'energy': 48}}]
2024-11-02 12:03:09,750 - INFO - Executing action action_2 ...
2024-11-02 12:03:09,968 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [8], 'score': 40, 'energy': 46}}]
2024-11-02 12:03:10,287 - INFO - Executing action action_6 ...
2024-11-02 12:03:10,500 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 44}}]
2024-11-02 12:03:10,768 - INFO - Executing action action_1 ...
2024-11-02 12:03:10,992 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 42}}]
2024-11-02 12:03:11,318 - INFO - Executing action action_5 ...
2024-11-02 12:03:11,553 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:03:11,919 - INFO - Executing action action_2 ...
2024-11-02 12:03:12,131 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 40}}]
2024-11-02 12:03:12,589 - INFO - Executing action action_6 ...
2024-11-02 12:03:12,807 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:03:13,150 - INFO - Executing action action_1 ...
2024-11-02 12:03:13,361 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 38}}]
2024-11-02 12:03:13,660 - INFO - Executing action action_5 ...
2024-11-02 12:03:13,897 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:03:14,261 - INFO - Executing action action_2 ...
2024-11-02 12:03:14,512 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 36}}]
2024-11-02 12:03:14,850 - ERROR - Error during intention 12 execution. Intention 12 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-02 12:03:14,875 - INFO - Plan thread terminated.
2024-11-02 12:03:14,881 - INFO - Belief set thread terminated.
2024-11-02 12:03:14,907 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_2', 'action_6', 'action_1', 'action_5', 'action_2', 'action_6', 'action_1', 'action_5', 'action_2', 'action_6', 'action_1', 'action_5', 'action_2', 'action_6', 'action_1', 'action_5', 'action_2', 'action_6', 'action_1', 'action_5', 'action_2', 'action_6', 'action_1', 'action_5', 'action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7], 'score': 40, 'energy': 68}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7], 'score': 40, 'energy': 66}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 62}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 60}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 58}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 56}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 54}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 52}}], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 50}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [8], 'score': 40, 'energy': 48}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [8], 'score': 40, 'energy': 46}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 44}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 42}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 40}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 38}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 36}}]]
2024-11-02 12:03:14,919 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 36}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 8: {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:03:21,330 - INFO - Invalidating intention 12 ...
2024-11-02 12:03:38,635 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    parcels = belief_set['parcels']
    battery_position = belief_set['battery'][1]
    delivery_position = [2, 3]
    while agent['coordinates'] != battery_position and agent['energy'] < 20:
        if agent['coordinates'][0] < battery_position[0]:
            function_2()
        elif agent['coordinates'][0] > battery_position[0]:
            function_1()
        elif agent['coordinates'][1] < battery_position[1]:
            function_4()
        elif agent['coordinates'][1] > battery_position[1]:
            function_3()
    function_5()
    for parcel in parcels.values():
        if parcel['carried_by_id'] is None:
            target_position = parcel['coordinates']
            while agent['coordinates'] != target_position:
                if agent['coordinates'][0] < target_position[0]:
                    function_2()
                elif agent['coordinates'][0] > target_position[0]:
                    function_1()
                elif agent['coordinates'][1] < target_position[1]:
                    function_4()
                elif agent['coordinates'][1] > target_position[1]:
                    function_3()
            function_5()
            break
    while agent['coordinates'] != delivery_position:
        if agent['coordinates'][0] < delivery_position[0]:
            function_2()
        elif agent['coordinates'][0] > delivery_position[0]:
            function_1()
        elif agent['coordinates'][1] < delivery_position[1]:
            function_4()
        elif agent['coordinates'][1] > delivery_position[1]:
            function_3()
    function_6()

2024-11-02 12:03:38,636 - INFO - The intention is valid.
2024-11-02 12:03:38,637 - INFO - Intention added to desire 2
2024-11-02 12:03:38,637 - INFO - Running intention 13 ...
2024-11-02 12:03:38,738 - INFO - Belief set thread started ...
2024-11-02 12:03:38,744 - INFO - Plan thread started ...
2024-11-02 12:03:38,751 - INFO - Started subprocess...
2024-11-02 12:03:38,757 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'score': 40, 'energy': 36}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 8: {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': None}, 9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:03:39,028 - INFO - Executing action action_5 ...
2024-11-02 12:03:39,267 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 34}}]
2024-11-02 12:03:39,585 - INFO - Executing action action_5 ...
2024-11-02 12:03:39,839 - INFO - Action action_5 executed. Events received: []
2024-11-02 12:03:40,162 - INFO - Executing action action_2 ...
2024-11-02 12:03:40,375 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:03:40,745 - INFO - Executing action action_2 ...
2024-11-02 12:03:40,962 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:41,267 - INFO - Executing action action_2 ...
2024-11-02 12:03:41,492 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:41,798 - INFO - Executing action action_2 ...
2024-11-02 12:03:42,054 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:42,340 - INFO - Executing action action_2 ...
2024-11-02 12:03:42,553 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:42,860 - INFO - Executing action action_2 ...
2024-11-02 12:03:43,083 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:43,411 - INFO - Executing action action_2 ...
2024-11-02 12:03:43,629 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:43,947 - INFO - Executing action action_2 ...
2024-11-02 12:03:44,182 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:44,518 - INFO - Executing action action_2 ...
2024-11-02 12:03:44,744 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:45,056 - INFO - Executing action action_2 ...
2024-11-02 12:03:45,285 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:45,553 - INFO - Executing action action_2 ...
2024-11-02 12:03:45,771 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:46,076 - INFO - Executing action action_2 ...
2024-11-02 12:03:46,320 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:46,639 - INFO - Executing action action_2 ...
2024-11-02 12:03:46,876 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:47,306 - INFO - Executing action action_2 ...
2024-11-02 12:03:47,523 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:47,843 - INFO - Executing action action_2 ...
2024-11-02 12:03:48,068 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:48,367 - INFO - Executing action action_2 ...
2024-11-02 12:03:48,593 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:48,906 - INFO - Executing action action_2 ...
2024-11-02 12:03:49,144 - INFO - Action action_2 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-02 12:03:49,437 - INFO - Executing action action_2 ...
2024-11-02 12:03:49,719 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:50,088 - INFO - Executing action action_2 ...
2024-11-02 12:03:50,314 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:50,682 - INFO - Executing action action_2 ...
2024-11-02 12:03:50,888 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:51,199 - INFO - Executing action action_2 ...
2024-11-02 12:03:51,404 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:51,729 - INFO - Executing action action_2 ...
2024-11-02 12:03:51,946 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:52,232 - INFO - Executing action action_2 ...
2024-11-02 12:03:52,432 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:52,763 - INFO - Executing action action_2 ...
2024-11-02 12:03:53,013 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:53,305 - INFO - Executing action action_2 ...
2024-11-02 12:03:53,541 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:53,810 - ERROR - Error during intention 13 execution. Intention 13 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-02 12:03:53,853 - INFO - Executing action action_2 ...
2024-11-02 12:03:53,865 - INFO - Belief set thread terminated.
2024-11-02 12:03:54,072 - INFO - Action action_2 executed. Events received: []
2024-11-02 12:03:54,366 - INFO - Plan thread terminated.
2024-11-02 12:03:54,423 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_5', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 34}}], [], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [], [], [], [], [], [], [], [], []]
2024-11-02 12:03:54,448 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 32}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 6: {'id': 6, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 7: {'id': 7, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 8: {'id': 8, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:04:02,957 - INFO - Invalidating intention 13 ...
2024-11-02 12:04:02,969 - INFO - Invalidating intention 1 ...
2024-11-02 12:04:02,987 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-02 12:04:03,000 - INFO - Invalidating intention 2 ...
2024-11-02 12:04:03,012 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-02 12:04:03,025 - INFO - Invalidating intention 3 ...
2024-11-02 12:04:03,031 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-02 12:04:03,031 - INFO - Invalidating intention 4 ...
2024-11-02 12:04:03,031 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-02 12:04:03,031 - INFO - Invalidating intention 5 ...
2024-11-02 12:04:03,038 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-02 12:04:03,056 - INFO - Invalidating intention 6 ...
2024-11-02 12:04:03,057 - INFO - Intention 6 is a base action. It cannot be invalidated.
2024-11-02 12:04:04,155 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to optimize its path to collect as many parcels as possible while maintaining sufficient energy levels, by strategically using battery spawn points for recharging.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location and pick up any parcels on the ground.
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords != parcel_coords:
                        if agent_coords[0] > parcel_coords[0]:
                            function_1()
                            agent_coords[0] -= 1
                        elif agent_coords[0] < parcel_coords[0]:
                            function_2()
                            agent_coords[0] += 1
                        if agent_coords[1] > parcel_coords[1]:
                            function_3()
                            agent_coords[1] -= 1
                        elif agent_coords[1] < parcel_coords[1]:
                            function_4()
                            agent_coords[1] += 1
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell to deliver the parcels it is carrying, and recharge its energy if the energy level is low.
                def function_8():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [2, 3]:
                        if belief_set['agent']['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] < 3:
                            function_4()
                        if belief_set['agent']['energy'] <= 40 and belief_set['agent'][
                            'coordinates'] == [2, 0]:
                            function_5()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to navigate towards the nearest parcel, pick it up and then move towards the delivery cell. If the energy level falls below 50, the agent should move towards the battery spawn cell to recharge.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcel_location = belief_set['parcels'][3]['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    battery_location = belief_set['battery'][1]
                    if agent['energy'] < 50:
                        if agent['coordinates'][0] > battery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                        else:
                            function_4()
                    elif len(agent['parcels_carried_ids']) == 0:
                        if agent['coordinates'][0] > parcel_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_5()
                    else:
                        if agent['coordinates'][0] > delivery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_6()
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards parcels, pick them up if present, and then move towards the battery spawn location when the energy level is below a certain threshold.
                def function_10():
                    global belief_set
                    current_position = belief_set['agent']['coordinates']
                    parcels_position = belief_set['map']['grid'][0]['cell_coordinates']
                    batteries_position = belief_set['map']['grid'][8]['cell_coordinates']
                    energy = belief_set['agent']['energy']
                    if energy < 30:
                        if current_position[0] > batteries_position[0]:
                            function_1()
                        elif current_position[0] < batteries_position[0]:
                            function_2()
                        elif current_position[1] > batteries_position[1]:
                            function_3()
                        elif current_position[1] < batteries_position[1]:
                            function_4()
                    else:
                        if current_position[0] > parcels_position[0]:
                            function_1()
                        elif current_position[0] < parcels_position[0]:
                            function_2()
                        elif current_position[1] > parcels_position[1]:
                            function_3()
                        elif current_position[1] < parcels_position[1]:
                            function_4()
                        if current_position == parcels_position:
                            function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent should aim to collect all parcels efficiently and deliver them to the delivery cell, while managing its energy levels by collecting batteries as needed.
    Intention ID: [11]
    Executable: False
    Description: The short-term goal is to navigate to the closest parcel, pick it up, and then move towards the delivery cell.
                def function_11():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent_location = belief_set['agent']['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    closest_parcel = min(parcels.values(), key=lambda x: abs(x[
                        'coordinates'][0] - agent_location[0]) + abs(x['coordinates'][1] -
                        agent_location[1]))
                    parcel_location = closest_parcel['coordinates']
                    while agent_location != parcel_location:
                        if agent_location[0] < parcel_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_location[0]:
                            function_1()
                        if agent_location[1] < parcel_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_location[1]:
                            function_3()
                    function_5()
                    while agent_location != delivery_location:
                        if agent_location[0] < delivery_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_location[0]:
                            function_1()
                        if agent_location[1] < delivery_location[1]:
                            function_4()
                        elif agent_location[1] > delivery_location[1]:
                            function_3()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent's immediate goal is to navigate to the nearest parcel, pick it up, and then move towards the delivery cell, while ensuring to update its location after each movement and avoid any infinite loops.
                def function_12():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent']
                    delivery_cell_coords = [cell['cell_coordinates'] for cell in belief_set
                        ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while True:
                        if len(parcels) == 0 or agent['energy'] <= 0:
                            break
                        else:
                            closest_parcel_coords = min(parcels.values(), key=lambda x: abs
                                (x['coordinates'][0] - agent['coordinates'][0]) + abs(x[
                                'coordinates'][1] - agent['coordinates'][1]))['coordinates']
                            while agent['coordinates'] != closest_parcel_coords:
                                if agent['coordinates'][0] < closest_parcel_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > closest_parcel_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < closest_parcel_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = closest_parcel_coords
                            function_5()
                            while agent['coordinates'] != delivery_cell_coords:
                                if agent['coordinates'][0] < delivery_cell_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > delivery_cell_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < delivery_cell_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = delivery_cell_coords
                            function_6()
                            parcels = {k: v for k, v in parcels.items() if v[
                                'carried_by_id'] is None}
                    return
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or battery, depending on its current energy level. If the energy level is sufficient, it should pick up a parcel. If the energy level is low, it should pick up a battery. After picking up a parcel, the agent should move towards the delivery cell.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcels']
                    battery_position = belief_set['battery'][1]
                    delivery_position = [2, 3]
                    while agent['coordinates'] != battery_position and agent['energy'] < 20:
                        if agent['coordinates'][0] < battery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > battery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < battery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > battery_position[1]:
                            function_3()
                    function_5()
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            target_position = parcel['coordinates']
                            while agent['coordinates'] != target_position:
                                if agent['coordinates'][0] < target_position[0]:
                                    function_2()
                                elif agent['coordinates'][0] > target_position[0]:
                                    function_1()
                                elif agent['coordinates'][1] < target_position[1]:
                                    function_4()
                                elif agent['coordinates'][1] > target_position[1]:
                                    function_3()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_position:
                        if agent['coordinates'][0] < delivery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_position[1]:
                            function_3()
                    function_6()
                
Executable: False
Trigger function:
None



2024-11-02 12:04:04,155 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:04:04,155 - INFO - No desire has been triggered.
2024-11-02 12:04:04,156 - INFO - No desire triggered.
2024-11-02 12:04:05,758 - INFO - Desire added: 3. Desires:
Desire 1: The agent's long term goal is to optimize its path to collect as many parcels as possible while maintaining sufficient energy levels, by strategically using battery spawn points for recharging.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location and pick up any parcels on the ground.
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords != parcel_coords:
                        if agent_coords[0] > parcel_coords[0]:
                            function_1()
                            agent_coords[0] -= 1
                        elif agent_coords[0] < parcel_coords[0]:
                            function_2()
                            agent_coords[0] += 1
                        if agent_coords[1] > parcel_coords[1]:
                            function_3()
                            agent_coords[1] -= 1
                        elif agent_coords[1] < parcel_coords[1]:
                            function_4()
                            agent_coords[1] += 1
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell to deliver the parcels it is carrying, and recharge its energy if the energy level is low.
                def function_8():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [2, 3]:
                        if belief_set['agent']['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] < 3:
                            function_4()
                        if belief_set['agent']['energy'] <= 40 and belief_set['agent'][
                            'coordinates'] == [2, 0]:
                            function_5()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to navigate towards the nearest parcel, pick it up and then move towards the delivery cell. If the energy level falls below 50, the agent should move towards the battery spawn cell to recharge.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcel_location = belief_set['parcels'][3]['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    battery_location = belief_set['battery'][1]
                    if agent['energy'] < 50:
                        if agent['coordinates'][0] > battery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                        else:
                            function_4()
                    elif len(agent['parcels_carried_ids']) == 0:
                        if agent['coordinates'][0] > parcel_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_5()
                    else:
                        if agent['coordinates'][0] > delivery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_6()
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards parcels, pick them up if present, and then move towards the battery spawn location when the energy level is below a certain threshold.
                def function_10():
                    global belief_set
                    current_position = belief_set['agent']['coordinates']
                    parcels_position = belief_set['map']['grid'][0]['cell_coordinates']
                    batteries_position = belief_set['map']['grid'][8]['cell_coordinates']
                    energy = belief_set['agent']['energy']
                    if energy < 30:
                        if current_position[0] > batteries_position[0]:
                            function_1()
                        elif current_position[0] < batteries_position[0]:
                            function_2()
                        elif current_position[1] > batteries_position[1]:
                            function_3()
                        elif current_position[1] < batteries_position[1]:
                            function_4()
                    else:
                        if current_position[0] > parcels_position[0]:
                            function_1()
                        elif current_position[0] < parcels_position[0]:
                            function_2()
                        elif current_position[1] > parcels_position[1]:
                            function_3()
                        elif current_position[1] < parcels_position[1]:
                            function_4()
                        if current_position == parcels_position:
                            function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent should aim to collect all parcels efficiently and deliver them to the delivery cell, while managing its energy levels by collecting batteries as needed.
    Intention ID: [11]
    Executable: False
    Description: The short-term goal is to navigate to the closest parcel, pick it up, and then move towards the delivery cell.
                def function_11():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent_location = belief_set['agent']['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    closest_parcel = min(parcels.values(), key=lambda x: abs(x[
                        'coordinates'][0] - agent_location[0]) + abs(x['coordinates'][1] -
                        agent_location[1]))
                    parcel_location = closest_parcel['coordinates']
                    while agent_location != parcel_location:
                        if agent_location[0] < parcel_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_location[0]:
                            function_1()
                        if agent_location[1] < parcel_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_location[1]:
                            function_3()
                    function_5()
                    while agent_location != delivery_location:
                        if agent_location[0] < delivery_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_location[0]:
                            function_1()
                        if agent_location[1] < delivery_location[1]:
                            function_4()
                        elif agent_location[1] > delivery_location[1]:
                            function_3()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent's immediate goal is to navigate to the nearest parcel, pick it up, and then move towards the delivery cell, while ensuring to update its location after each movement and avoid any infinite loops.
                def function_12():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent']
                    delivery_cell_coords = [cell['cell_coordinates'] for cell in belief_set
                        ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while True:
                        if len(parcels) == 0 or agent['energy'] <= 0:
                            break
                        else:
                            closest_parcel_coords = min(parcels.values(), key=lambda x: abs
                                (x['coordinates'][0] - agent['coordinates'][0]) + abs(x[
                                'coordinates'][1] - agent['coordinates'][1]))['coordinates']
                            while agent['coordinates'] != closest_parcel_coords:
                                if agent['coordinates'][0] < closest_parcel_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > closest_parcel_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < closest_parcel_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = closest_parcel_coords
                            function_5()
                            while agent['coordinates'] != delivery_cell_coords:
                                if agent['coordinates'][0] < delivery_cell_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > delivery_cell_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < delivery_cell_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = delivery_cell_coords
                            function_6()
                            parcels = {k: v for k, v in parcels.items() if v[
                                'carried_by_id'] is None}
                    return
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or battery, depending on its current energy level. If the energy level is sufficient, it should pick up a parcel. If the energy level is low, it should pick up a battery. After picking up a parcel, the agent should move towards the delivery cell.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcels']
                    battery_position = belief_set['battery'][1]
                    delivery_position = [2, 3]
                    while agent['coordinates'] != battery_position and agent['energy'] < 20:
                        if agent['coordinates'][0] < battery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > battery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < battery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > battery_position[1]:
                            function_3()
                    function_5()
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            target_position = parcel['coordinates']
                            while agent['coordinates'] != target_position:
                                if agent['coordinates'][0] < target_position[0]:
                                    function_2()
                                elif agent['coordinates'][0] > target_position[0]:
                                    function_1()
                                elif agent['coordinates'][1] < target_position[1]:
                                    function_4()
                                elif agent['coordinates'][1] > target_position[1]:
                                    function_3()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_position:
                        if agent['coordinates'][0] < delivery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_position[1]:
                            function_3()
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to collect as many parcels as possible and deliver them to the delivery cell, while ensuring that its energy level is sufficient for it to perform its tasks.
Executable: False
Trigger function:
None



2024-11-02 12:04:17,453 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent']['coordinates']
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
    while agent_coordinates != delivery_cell:
        if agent_coordinates[0] < delivery_cell[0]:
            function_2()
        elif agent_coordinates[0] > delivery_cell[0]:
            function_1()
        elif agent_coordinates[1] < delivery_cell[1]:
            function_4()
        else:
            function_3()
        agent_coordinates = belief_set['agent']['coordinates']
    function_6()
    battery_spawn = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]['cell_coordinates']
    while agent_coordinates != battery_spawn:
        if agent_coordinates[0] < battery_spawn[0]:
            function_2()
        elif agent_coordinates[0] > battery_spawn[0]:
            function_1()
        elif agent_coordinates[1] < battery_spawn[1]:
            function_4()
        else:
            function_3()
        agent_coordinates = belief_set['agent']['coordinates']
2024-11-02 12:04:17,465 - INFO - The intention is valid.
2024-11-02 12:04:17,473 - INFO - Intention added to desire 3
2024-11-02 12:04:17,473 - INFO - Running intention 14 ...
2024-11-02 12:04:17,617 - INFO - Belief set thread started ...
2024-11-02 12:04:17,617 - INFO - Plan thread started ...
2024-11-02 12:04:17,617 - INFO - Started subprocess...
2024-11-02 12:04:17,636 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 32}, 'battery': {1: [2, 0]}, 'parcels': {3: {'id': 3, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 4: {'id': 4, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 5: {'id': 5, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 6: {'id': 6, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 7: {'id': 7, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 8: {'id': 8, 'coordinates': [2, 0], 'score': 20, 'carried_by_id': 1}, 9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:04:17,901 - INFO - Executing action action_4 ...
2024-11-02 12:04:18,106 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 30}}]
2024-11-02 12:04:18,485 - INFO - Executing action action_4 ...
2024-11-02 12:04:18,742 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 28}}]
2024-11-02 12:04:19,189 - INFO - Executing action action_4 ...
2024-11-02 12:04:19,415 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 26}}]
2024-11-02 12:04:19,717 - INFO - Executing action action_6 ...
2024-11-02 12:04:19,958 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 160, 'energy': 24}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-02 12:04:20,357 - INFO - Executing action action_3 ...
2024-11-02 12:04:20,563 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 22}}]
2024-11-02 12:04:20,935 - INFO - Executing action action_3 ...
2024-11-02 12:04:21,146 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 20}}]
2024-11-02 12:04:21,474 - INFO - Executing action action_3 ...
2024-11-02 12:04:21,688 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 18}}]
2024-11-02 12:04:22,013 - INFO - Plan thread terminated.
2024-11-02 12:04:22,056 - INFO - Belief set thread terminated.
2024-11-02 12:04:22,062 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_4', 'action_4', 'action_6', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 30}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 28}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'score': 40, 'energy': 26}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 160, 'energy': 24}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [2, 3], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 22}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 20}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 18}}]]
2024-11-02 12:04:22,062 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 18}, 'battery': {1: [2, 0]}, 'parcels': {9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:04:27,286 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    if belief_set['agent']['energy'] > 5 and any(parcel['carried_by_id'] is None for parcel in belief_set['parcels'].values()):
        return True
    else:
        return False
2024-11-02 12:04:27,287 - INFO - The trigger function is valid.
2024-11-02 12:04:27,287 - INFO - Trigger function added to desire 3.
2024-11-02 12:04:28,580 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to optimize its path to collect as many parcels as possible while maintaining sufficient energy levels, by strategically using battery spawn points for recharging.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location and pick up any parcels on the ground.
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords != parcel_coords:
                        if agent_coords[0] > parcel_coords[0]:
                            function_1()
                            agent_coords[0] -= 1
                        elif agent_coords[0] < parcel_coords[0]:
                            function_2()
                            agent_coords[0] += 1
                        if agent_coords[1] > parcel_coords[1]:
                            function_3()
                            agent_coords[1] -= 1
                        elif agent_coords[1] < parcel_coords[1]:
                            function_4()
                            agent_coords[1] += 1
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell to deliver the parcels it is carrying, and recharge its energy if the energy level is low.
                def function_8():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [2, 3]:
                        if belief_set['agent']['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] < 3:
                            function_4()
                        if belief_set['agent']['energy'] <= 40 and belief_set['agent'][
                            'coordinates'] == [2, 0]:
                            function_5()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to navigate towards the nearest parcel, pick it up and then move towards the delivery cell. If the energy level falls below 50, the agent should move towards the battery spawn cell to recharge.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcel_location = belief_set['parcels'][3]['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    battery_location = belief_set['battery'][1]
                    if agent['energy'] < 50:
                        if agent['coordinates'][0] > battery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                        else:
                            function_4()
                    elif len(agent['parcels_carried_ids']) == 0:
                        if agent['coordinates'][0] > parcel_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_5()
                    else:
                        if agent['coordinates'][0] > delivery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_6()
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards parcels, pick them up if present, and then move towards the battery spawn location when the energy level is below a certain threshold.
                def function_10():
                    global belief_set
                    current_position = belief_set['agent']['coordinates']
                    parcels_position = belief_set['map']['grid'][0]['cell_coordinates']
                    batteries_position = belief_set['map']['grid'][8]['cell_coordinates']
                    energy = belief_set['agent']['energy']
                    if energy < 30:
                        if current_position[0] > batteries_position[0]:
                            function_1()
                        elif current_position[0] < batteries_position[0]:
                            function_2()
                        elif current_position[1] > batteries_position[1]:
                            function_3()
                        elif current_position[1] < batteries_position[1]:
                            function_4()
                    else:
                        if current_position[0] > parcels_position[0]:
                            function_1()
                        elif current_position[0] < parcels_position[0]:
                            function_2()
                        elif current_position[1] > parcels_position[1]:
                            function_3()
                        elif current_position[1] < parcels_position[1]:
                            function_4()
                        if current_position == parcels_position:
                            function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent should aim to collect all parcels efficiently and deliver them to the delivery cell, while managing its energy levels by collecting batteries as needed.
    Intention ID: [11]
    Executable: False
    Description: The short-term goal is to navigate to the closest parcel, pick it up, and then move towards the delivery cell.
                def function_11():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent_location = belief_set['agent']['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    closest_parcel = min(parcels.values(), key=lambda x: abs(x[
                        'coordinates'][0] - agent_location[0]) + abs(x['coordinates'][1] -
                        agent_location[1]))
                    parcel_location = closest_parcel['coordinates']
                    while agent_location != parcel_location:
                        if agent_location[0] < parcel_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_location[0]:
                            function_1()
                        if agent_location[1] < parcel_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_location[1]:
                            function_3()
                    function_5()
                    while agent_location != delivery_location:
                        if agent_location[0] < delivery_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_location[0]:
                            function_1()
                        if agent_location[1] < delivery_location[1]:
                            function_4()
                        elif agent_location[1] > delivery_location[1]:
                            function_3()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent's immediate goal is to navigate to the nearest parcel, pick it up, and then move towards the delivery cell, while ensuring to update its location after each movement and avoid any infinite loops.
                def function_12():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent']
                    delivery_cell_coords = [cell['cell_coordinates'] for cell in belief_set
                        ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while True:
                        if len(parcels) == 0 or agent['energy'] <= 0:
                            break
                        else:
                            closest_parcel_coords = min(parcels.values(), key=lambda x: abs
                                (x['coordinates'][0] - agent['coordinates'][0]) + abs(x[
                                'coordinates'][1] - agent['coordinates'][1]))['coordinates']
                            while agent['coordinates'] != closest_parcel_coords:
                                if agent['coordinates'][0] < closest_parcel_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > closest_parcel_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < closest_parcel_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = closest_parcel_coords
                            function_5()
                            while agent['coordinates'] != delivery_cell_coords:
                                if agent['coordinates'][0] < delivery_cell_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > delivery_cell_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < delivery_cell_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = delivery_cell_coords
                            function_6()
                            parcels = {k: v for k, v in parcels.items() if v[
                                'carried_by_id'] is None}
                    return
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or battery, depending on its current energy level. If the energy level is sufficient, it should pick up a parcel. If the energy level is low, it should pick up a battery. After picking up a parcel, the agent should move towards the delivery cell.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcels']
                    battery_position = belief_set['battery'][1]
                    delivery_position = [2, 3]
                    while agent['coordinates'] != battery_position and agent['energy'] < 20:
                        if agent['coordinates'][0] < battery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > battery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < battery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > battery_position[1]:
                            function_3()
                    function_5()
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            target_position = parcel['coordinates']
                            while agent['coordinates'] != target_position:
                                if agent['coordinates'][0] < target_position[0]:
                                    function_2()
                                elif agent['coordinates'][0] > target_position[0]:
                                    function_1()
                                elif agent['coordinates'][1] < target_position[1]:
                                    function_4()
                                elif agent['coordinates'][1] > target_position[1]:
                                    function_3()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_position:
                        if agent['coordinates'][0] < delivery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_position[1]:
                            function_3()
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to collect as many parcels as possible and deliver them to the delivery cell, while ensuring that its energy level is sufficient for it to perform its tasks.
    Intention ID: [14]
    Executable: True
    Description: The short term goal is for the agent to move towards the delivery cell to deliver all the parcels it is carrying and then move towards the battery spawn location to recharge its energy.
                def function_14():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    while agent_coordinates != delivery_cell:
                        if agent_coordinates[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coordinates[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coordinates[1] < delivery_cell[1]:
                            function_4()
                        else:
                            function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                    function_6()
                    battery_spawn = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'batteries_spawn'][0]['cell_coordinates']
                    while agent_coordinates != battery_spawn:
                        if agent_coordinates[0] < battery_spawn[0]:
                            function_2()
                        elif agent_coordinates[0] > battery_spawn[0]:
                            function_1()
                        elif agent_coordinates[1] < battery_spawn[1]:
                            function_4()
                        else:
                            function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 5 and any(parcel['carried_by_id'] is
        None for parcel in belief_set['parcels'].values()):
        return True
    else:
        return False




2024-11-02 12:04:28,593 - INFO - Running trigger function for desire 3 ...
2024-11-02 12:04:28,593 - INFO - Trigger function for desire 3 has been executed. Result: True
2024-11-02 12:04:28,593 - INFO - Desire 3 could be triggered. Adding it to the list...
2024-11-02 12:04:28,593 - INFO - Desires triggered: [3]. Now randomly choosing which one to run.
2024-11-02 12:04:28,593 - INFO - Desire 3 was randomly chosen. Desire 3 has been triggered.
2024-11-02 12:04:28,599 - INFO - Desire 3 is about to be executed ...
2024-11-02 12:04:28,599 - INFO - Executing all valid intentions for desire 3 ...
2024-11-02 12:04:28,599 - INFO - Executing intention 14 ...
2024-11-02 12:04:28,599 - INFO - Running intention 14 ...
2024-11-02 12:04:28,719 - INFO - Belief set thread started ...
2024-11-02 12:04:28,725 - INFO - Plan thread started ...
2024-11-02 12:04:28,750 - INFO - Started subprocess...
2024-11-02 12:04:28,750 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 18}, 'battery': {1: [2, 0]}, 'parcels': {9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:04:29,047 - INFO - Executing action action_4 ...
2024-11-02 12:04:29,275 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 16}}]
2024-11-02 12:04:29,649 - INFO - Executing action action_4 ...
2024-11-02 12:04:29,861 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 14}}]
2024-11-02 12:04:30,204 - INFO - Executing action action_4 ...
2024-11-02 12:04:30,466 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 160, 'energy': 12}}]
2024-11-02 12:04:30,835 - INFO - Executing action action_6 ...
2024-11-02 12:04:31,066 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:04:31,353 - INFO - Executing action action_3 ...
2024-11-02 12:04:31,595 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 10}}]
2024-11-02 12:04:31,957 - INFO - Executing action action_3 ...
2024-11-02 12:04:32,164 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 8}}]
2024-11-02 12:04:32,421 - INFO - Executing action action_3 ...
2024-11-02 12:04:32,684 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 6}}]
2024-11-02 12:04:33,013 - INFO - Plan thread terminated.
2024-11-02 12:04:33,082 - INFO - Belief set thread terminated.
2024-11-02 12:04:33,101 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_4', 'action_4', 'action_6', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 16}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 14}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 160, 'energy': 12}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 10}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 8}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 6}}]]
2024-11-02 12:04:33,101 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 6}, 'battery': {1: [2, 0]}, 'parcels': {9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:04:33,101 - INFO - Intention 14 has been executed with plan ['action_4', 'action_4', 'action_4', 'action_6', 'action_3', 'action_3', 'action_3'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 16}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 14}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 160, 'energy': 12}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 10}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 8}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 6}}]].
2024-11-02 12:04:34,134 - INFO - Invalidating desire 3 ...
2024-11-02 12:04:35,476 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to optimize its path to collect as many parcels as possible while maintaining sufficient energy levels, by strategically using battery spawn points for recharging.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location and pick up any parcels on the ground.
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords != parcel_coords:
                        if agent_coords[0] > parcel_coords[0]:
                            function_1()
                            agent_coords[0] -= 1
                        elif agent_coords[0] < parcel_coords[0]:
                            function_2()
                            agent_coords[0] += 1
                        if agent_coords[1] > parcel_coords[1]:
                            function_3()
                            agent_coords[1] -= 1
                        elif agent_coords[1] < parcel_coords[1]:
                            function_4()
                            agent_coords[1] += 1
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell to deliver the parcels it is carrying, and recharge its energy if the energy level is low.
                def function_8():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [2, 3]:
                        if belief_set['agent']['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] < 3:
                            function_4()
                        if belief_set['agent']['energy'] <= 40 and belief_set['agent'][
                            'coordinates'] == [2, 0]:
                            function_5()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to navigate towards the nearest parcel, pick it up and then move towards the delivery cell. If the energy level falls below 50, the agent should move towards the battery spawn cell to recharge.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcel_location = belief_set['parcels'][3]['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    battery_location = belief_set['battery'][1]
                    if agent['energy'] < 50:
                        if agent['coordinates'][0] > battery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                        else:
                            function_4()
                    elif len(agent['parcels_carried_ids']) == 0:
                        if agent['coordinates'][0] > parcel_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_5()
                    else:
                        if agent['coordinates'][0] > delivery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_6()
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards parcels, pick them up if present, and then move towards the battery spawn location when the energy level is below a certain threshold.
                def function_10():
                    global belief_set
                    current_position = belief_set['agent']['coordinates']
                    parcels_position = belief_set['map']['grid'][0]['cell_coordinates']
                    batteries_position = belief_set['map']['grid'][8]['cell_coordinates']
                    energy = belief_set['agent']['energy']
                    if energy < 30:
                        if current_position[0] > batteries_position[0]:
                            function_1()
                        elif current_position[0] < batteries_position[0]:
                            function_2()
                        elif current_position[1] > batteries_position[1]:
                            function_3()
                        elif current_position[1] < batteries_position[1]:
                            function_4()
                    else:
                        if current_position[0] > parcels_position[0]:
                            function_1()
                        elif current_position[0] < parcels_position[0]:
                            function_2()
                        elif current_position[1] > parcels_position[1]:
                            function_3()
                        elif current_position[1] < parcels_position[1]:
                            function_4()
                        if current_position == parcels_position:
                            function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent should aim to collect all parcels efficiently and deliver them to the delivery cell, while managing its energy levels by collecting batteries as needed.
    Intention ID: [11]
    Executable: False
    Description: The short-term goal is to navigate to the closest parcel, pick it up, and then move towards the delivery cell.
                def function_11():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent_location = belief_set['agent']['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    closest_parcel = min(parcels.values(), key=lambda x: abs(x[
                        'coordinates'][0] - agent_location[0]) + abs(x['coordinates'][1] -
                        agent_location[1]))
                    parcel_location = closest_parcel['coordinates']
                    while agent_location != parcel_location:
                        if agent_location[0] < parcel_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_location[0]:
                            function_1()
                        if agent_location[1] < parcel_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_location[1]:
                            function_3()
                    function_5()
                    while agent_location != delivery_location:
                        if agent_location[0] < delivery_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_location[0]:
                            function_1()
                        if agent_location[1] < delivery_location[1]:
                            function_4()
                        elif agent_location[1] > delivery_location[1]:
                            function_3()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent's immediate goal is to navigate to the nearest parcel, pick it up, and then move towards the delivery cell, while ensuring to update its location after each movement and avoid any infinite loops.
                def function_12():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent']
                    delivery_cell_coords = [cell['cell_coordinates'] for cell in belief_set
                        ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while True:
                        if len(parcels) == 0 or agent['energy'] <= 0:
                            break
                        else:
                            closest_parcel_coords = min(parcels.values(), key=lambda x: abs
                                (x['coordinates'][0] - agent['coordinates'][0]) + abs(x[
                                'coordinates'][1] - agent['coordinates'][1]))['coordinates']
                            while agent['coordinates'] != closest_parcel_coords:
                                if agent['coordinates'][0] < closest_parcel_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > closest_parcel_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < closest_parcel_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = closest_parcel_coords
                            function_5()
                            while agent['coordinates'] != delivery_cell_coords:
                                if agent['coordinates'][0] < delivery_cell_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > delivery_cell_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < delivery_cell_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = delivery_cell_coords
                            function_6()
                            parcels = {k: v for k, v in parcels.items() if v[
                                'carried_by_id'] is None}
                    return
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or battery, depending on its current energy level. If the energy level is sufficient, it should pick up a parcel. If the energy level is low, it should pick up a battery. After picking up a parcel, the agent should move towards the delivery cell.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcels']
                    battery_position = belief_set['battery'][1]
                    delivery_position = [2, 3]
                    while agent['coordinates'] != battery_position and agent['energy'] < 20:
                        if agent['coordinates'][0] < battery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > battery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < battery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > battery_position[1]:
                            function_3()
                    function_5()
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            target_position = parcel['coordinates']
                            while agent['coordinates'] != target_position:
                                if agent['coordinates'][0] < target_position[0]:
                                    function_2()
                                elif agent['coordinates'][0] > target_position[0]:
                                    function_1()
                                elif agent['coordinates'][1] < target_position[1]:
                                    function_4()
                                elif agent['coordinates'][1] > target_position[1]:
                                    function_3()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_position:
                        if agent['coordinates'][0] < delivery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_position[1]:
                            function_3()
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to collect as many parcels as possible and deliver them to the delivery cell, while ensuring that its energy level is sufficient for it to perform its tasks.
    Intention ID: [14]
    Executable: True
    Description: The short term goal is for the agent to move towards the delivery cell to deliver all the parcels it is carrying and then move towards the battery spawn location to recharge its energy.
                def function_14():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    while agent_coordinates != delivery_cell:
                        if agent_coordinates[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coordinates[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coordinates[1] < delivery_cell[1]:
                            function_4()
                        else:
                            function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                    function_6()
                    battery_spawn = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'batteries_spawn'][0]['cell_coordinates']
                    while agent_coordinates != battery_spawn:
                        if agent_coordinates[0] < battery_spawn[0]:
                            function_2()
                        elif agent_coordinates[0] > battery_spawn[0]:
                            function_1()
                        elif agent_coordinates[1] < battery_spawn[1]:
                            function_4()
                        else:
                            function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 5 and any(parcel['carried_by_id'] is
        None for parcel in belief_set['parcels'].values()):
        return True
    else:
        return False




2024-11-02 12:04:35,476 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-02 12:04:35,495 - INFO - No desire has been triggered.
2024-11-02 12:04:35,495 - INFO - No desire triggered.
2024-11-02 12:04:37,212 - INFO - Desire added: 4. Desires:
Desire 1: The agent's long term goal is to optimize its path to collect as many parcels as possible while maintaining sufficient energy levels, by strategically using battery spawn points for recharging.
    Intention ID: [7]
    Executable: True
    Description: The agent's short term goal is to move towards the parcel spawn location and pick up any parcels on the ground.
                def function_7():
                    global belief_set
                    agent_coords = belief_set['agent']['coordinates']
                    parcel_coords = belief_set['parcels'][1]['coordinates']
                    while agent_coords != parcel_coords:
                        if agent_coords[0] > parcel_coords[0]:
                            function_1()
                            agent_coords[0] -= 1
                        elif agent_coords[0] < parcel_coords[0]:
                            function_2()
                            agent_coords[0] += 1
                        if agent_coords[1] > parcel_coords[1]:
                            function_3()
                            agent_coords[1] -= 1
                        elif agent_coords[1] < parcel_coords[1]:
                            function_4()
                            agent_coords[1] += 1
                    function_5()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell to deliver the parcels it is carrying, and recharge its energy if the energy level is low.
                def function_8():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [2, 3]:
                        if belief_set['agent']['coordinates'][0] < 2:
                            function_2()
                        elif belief_set['agent']['coordinates'][1] < 3:
                            function_4()
                        if belief_set['agent']['energy'] <= 40 and belief_set['agent'][
                            'coordinates'] == [2, 0]:
                            function_5()
                    function_6()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to navigate towards the nearest parcel, pick it up and then move towards the delivery cell. If the energy level falls below 50, the agent should move towards the battery spawn cell to recharge.
                def function_9():
                    global belief_set
                    agent = belief_set['agent']
                    parcel_location = belief_set['parcels'][3]['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    battery_location = belief_set['battery'][1]
                    if agent['energy'] < 50:
                        if agent['coordinates'][0] > battery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < battery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > battery_location[1]:
                            function_3()
                        else:
                            function_4()
                    elif len(agent['parcels_carried_ids']) == 0:
                        if agent['coordinates'][0] > parcel_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < parcel_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > parcel_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_5()
                    else:
                        if agent['coordinates'][0] > delivery_location[0]:
                            function_1()
                        elif agent['coordinates'][0] < delivery_location[0]:
                            function_2()
                        elif agent['coordinates'][1] > delivery_location[1]:
                            function_3()
                        else:
                            function_4()
                        function_6()
                
    Intention ID: [10]
    Executable: False
    Description: The short term goal is to move the agent towards parcels, pick them up if present, and then move towards the battery spawn location when the energy level is below a certain threshold.
                def function_10():
                    global belief_set
                    current_position = belief_set['agent']['coordinates']
                    parcels_position = belief_set['map']['grid'][0]['cell_coordinates']
                    batteries_position = belief_set['map']['grid'][8]['cell_coordinates']
                    energy = belief_set['agent']['energy']
                    if energy < 30:
                        if current_position[0] > batteries_position[0]:
                            function_1()
                        elif current_position[0] < batteries_position[0]:
                            function_2()
                        elif current_position[1] > batteries_position[1]:
                            function_3()
                        elif current_position[1] < batteries_position[1]:
                            function_4()
                    else:
                        if current_position[0] > parcels_position[0]:
                            function_1()
                        elif current_position[0] < parcels_position[0]:
                            function_2()
                        elif current_position[1] > parcels_position[1]:
                            function_3()
                        elif current_position[1] < parcels_position[1]:
                            function_4()
                        if current_position == parcels_position:
                            function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent should aim to collect all parcels efficiently and deliver them to the delivery cell, while managing its energy levels by collecting batteries as needed.
    Intention ID: [11]
    Executable: False
    Description: The short-term goal is to navigate to the closest parcel, pick it up, and then move towards the delivery cell.
                def function_11():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent_location = belief_set['agent']['coordinates']
                    delivery_location = [cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    closest_parcel = min(parcels.values(), key=lambda x: abs(x[
                        'coordinates'][0] - agent_location[0]) + abs(x['coordinates'][1] -
                        agent_location[1]))
                    parcel_location = closest_parcel['coordinates']
                    while agent_location != parcel_location:
                        if agent_location[0] < parcel_location[0]:
                            function_2()
                        elif agent_location[0] > parcel_location[0]:
                            function_1()
                        if agent_location[1] < parcel_location[1]:
                            function_4()
                        elif agent_location[1] > parcel_location[1]:
                            function_3()
                    function_5()
                    while agent_location != delivery_location:
                        if agent_location[0] < delivery_location[0]:
                            function_2()
                        elif agent_location[0] > delivery_location[0]:
                            function_1()
                        if agent_location[1] < delivery_location[1]:
                            function_4()
                        elif agent_location[1] > delivery_location[1]:
                            function_3()
                    function_6()
                
    Intention ID: [12]
    Executable: False
    Description: The agent's immediate goal is to navigate to the nearest parcel, pick it up, and then move towards the delivery cell, while ensuring to update its location after each movement and avoid any infinite loops.
                def function_12():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent']
                    delivery_cell_coords = [cell['cell_coordinates'] for cell in belief_set
                        ['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    while True:
                        if len(parcels) == 0 or agent['energy'] <= 0:
                            break
                        else:
                            closest_parcel_coords = min(parcels.values(), key=lambda x: abs
                                (x['coordinates'][0] - agent['coordinates'][0]) + abs(x[
                                'coordinates'][1] - agent['coordinates'][1]))['coordinates']
                            while agent['coordinates'] != closest_parcel_coords:
                                if agent['coordinates'][0] < closest_parcel_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > closest_parcel_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < closest_parcel_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = closest_parcel_coords
                            function_5()
                            while agent['coordinates'] != delivery_cell_coords:
                                if agent['coordinates'][0] < delivery_cell_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > delivery_cell_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < delivery_cell_coords[1]:
                                    function_4()
                                else:
                                    function_3()
                                agent['coordinates'] = delivery_cell_coords
                            function_6()
                            parcels = {k: v for k, v in parcels.items() if v[
                                'carried_by_id'] is None}
                    return
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel or battery, depending on its current energy level. If the energy level is sufficient, it should pick up a parcel. If the energy level is low, it should pick up a battery. After picking up a parcel, the agent should move towards the delivery cell.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    parcels = belief_set['parcels']
                    battery_position = belief_set['battery'][1]
                    delivery_position = [2, 3]
                    while agent['coordinates'] != battery_position and agent['energy'] < 20:
                        if agent['coordinates'][0] < battery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > battery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < battery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > battery_position[1]:
                            function_3()
                    function_5()
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            target_position = parcel['coordinates']
                            while agent['coordinates'] != target_position:
                                if agent['coordinates'][0] < target_position[0]:
                                    function_2()
                                elif agent['coordinates'][0] > target_position[0]:
                                    function_1()
                                elif agent['coordinates'][1] < target_position[1]:
                                    function_4()
                                elif agent['coordinates'][1] > target_position[1]:
                                    function_3()
                            function_5()
                            break
                    while agent['coordinates'] != delivery_position:
                        if agent['coordinates'][0] < delivery_position[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_position[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_position[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_position[1]:
                            function_3()
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent should aim to collect as many parcels as possible and deliver them to the delivery cell, while ensuring that its energy level is sufficient for it to perform its tasks.
    Intention ID: [14]
    Executable: True
    Description: The short term goal is for the agent to move towards the delivery cell to deliver all the parcels it is carrying and then move towards the battery spawn location to recharge its energy.
                def function_14():
                    global belief_set
                    agent_coordinates = belief_set['agent']['coordinates']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    while agent_coordinates != delivery_cell:
                        if agent_coordinates[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coordinates[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coordinates[1] < delivery_cell[1]:
                            function_4()
                        else:
                            function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                    function_6()
                    battery_spawn = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'batteries_spawn'][0]['cell_coordinates']
                    while agent_coordinates != battery_spawn:
                        if agent_coordinates[0] < battery_spawn[0]:
                            function_2()
                        elif agent_coordinates[0] > battery_spawn[0]:
                            function_1()
                        elif agent_coordinates[1] < battery_spawn[1]:
                            function_4()
                        else:
                            function_3()
                        agent_coordinates = belief_set['agent']['coordinates']
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['agent']['energy'] > 5 and any(parcel['carried_by_id'] is
        None for parcel in belief_set['parcels'].values()):
        return True
    else:
        return False



Desire 4: The agent should aim to pick up as many parcels as possible, maintain a high energy level by collecting batteries, and deliver the parcels to the delivery cell to maximize its score.
Executable: False
Trigger function:
None



2024-11-02 12:04:40,821 - INFO - Testing intention 
def function():
    global belief_set
    function_14()
    function_7()
    function_5()
    function_14()
    function_6()
2024-11-02 12:04:40,821 - INFO - The intention is valid.
2024-11-02 12:04:40,822 - INFO - Intention added to desire 4
2024-11-02 12:04:40,840 - INFO - Running intention 15 ...
2024-11-02 12:04:40,996 - INFO - Belief set thread started ...
2024-11-02 12:04:41,015 - INFO - Plan thread started ...
2024-11-02 12:04:41,027 - INFO - Started subprocess...
2024-11-02 12:04:41,027 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 0], 'parcels_carried_ids': [], 'score': 160, 'energy': 6}, 'battery': {1: [2, 0]}, 'parcels': {9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:04:41,271 - INFO - Executing action action_4 ...
2024-11-02 12:04:41,552 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 4}}]
2024-11-02 12:04:41,854 - INFO - Executing action action_4 ...
2024-11-02 12:04:42,117 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 2}}]
2024-11-02 12:04:42,422 - INFO - Executing action action_4 ...
2024-11-02 12:04:42,678 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 160, 'energy': 0}}]
2024-11-02 12:04:43,043 - INFO - Executing action action_6 ...
2024-11-02 12:04:43,280 - INFO - Action action_6 executed. Events received: []
2024-11-02 12:04:43,611 - INFO - Executing action action_3 ...
2024-11-02 12:04:43,847 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:04:44,176 - INFO - Executing action action_3 ...
2024-11-02 12:04:44,411 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:04:44,756 - INFO - Executing action action_3 ...
2024-11-02 12:04:44,974 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:04:45,311 - INFO - Executing action action_3 ...
2024-11-02 12:04:45,516 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:04:45,869 - INFO - Executing action action_3 ...
2024-11-02 12:04:46,124 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:04:46,499 - INFO - Executing action action_3 ...
2024-11-02 12:04:46,744 - INFO - Action action_3 executed. Events received: []
2024-11-02 12:04:56,068 - ERROR - Error during intention 15 execution. Intention 15 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-02 12:04:56,073 - INFO - Plan thread terminated.
2024-11-02 12:04:56,073 - INFO - Belief set thread terminated.
2024-11-02 12:04:56,074 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_4', 'action_4', 'action_6', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 1], 'parcels_carried_ids': [], 'score': 160, 'energy': 4}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 2], 'parcels_carried_ids': [], 'score': 160, 'energy': 2}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 160, 'energy': 0}}], [], [], [], [], [], [], []]
2024-11-02 12:04:56,074 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [2, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [2, 3], 'parcels_carried_ids': [], 'score': 160, 'energy': 0}, 'battery': {1: [2, 0]}, 'parcels': {9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-02 12:04:56,076 - INFO - Invalidating intention 15 ...
