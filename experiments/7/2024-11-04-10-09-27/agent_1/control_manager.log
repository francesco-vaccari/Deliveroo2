2024-11-04 10:09:29,223 - INFO - Loading actions from agent_dir/actions.json ...
2024-11-04 10:09:29,267 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-11-04 10:10:06,641 - INFO - Checking if a desire has been triggered ...
Desires: Empty
2024-11-04 10:10:06,666 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 10:10:06,666 - INFO - No desire has been triggered.
2024-11-04 10:10:06,666 - INFO - No desire triggered.
2024-11-04 10:10:08,696 - INFO - Desire added: 1. Desires:
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
Executable: False
Trigger function:
None



2024-11-04 10:10:28,542 - INFO - Testing intention 
def function():
    global belief_set
    
    agent_position = belief_set['agent'][1]['coordinates']
    parcel_position = belief_set['parcels'][1]['coordinates']
    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for i in range(len(belief_set['map']['grid'])) if belief_set['map']['grid'][i]['cell_type'] == 'delivery_cell'][0]
    
    # Move towards the parcel
    while agent_position[0] != parcel_position[0]:
        if agent_position[0] > parcel_position[0]:
            function_1()
            agent_position[0] -= 1
        else:
            function_2()
            agent_position[0] += 1
    while agent_position[1] != parcel_position[1]:
        if agent_position[1] > parcel_position[1]:
            function_3()
            agent_position[1] -= 1
        else:
            function_4()
            agent_position[1] += 1
    
    # Pick up the parcel
    function_5()
    
    # Move towards the delivery cell
    while agent_position[0] != delivery_position[0]:
        if agent_position[0] > delivery_position[0]:
            function_1()
            agent_position[0] -= 1
        else:
            function_2()
            agent_position[0] += 1
    while agent_position[1] != delivery_position[1]:
        if agent_position[1] > delivery_position[1]:
            function_3()
            agent_position[1] -= 1
        else:
            function_4()
            agent_position[1] += 1
    
    # Delivery the parcel
    function_6()
2024-11-04 10:10:28,555 - INFO - The intention is valid.
2024-11-04 10:10:28,581 - INFO - Intention added to desire 1
2024-11-04 10:10:28,600 - INFO - Running intention 7 ...
2024-11-04 10:10:28,799 - INFO - Belief set thread started ...
2024-11-04 10:10:28,812 - INFO - Plan thread started ...
2024-11-04 10:10:28,830 - INFO - Started subprocess...
2024-11-04 10:10:28,830 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:10:29,121 - INFO - Executing action action_1 ...
2024-11-04 10:10:29,358 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-04 10:10:29,639 - INFO - Executing action action_3 ...
2024-11-04 10:10:29,881 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}]
2024-11-04 10:10:30,184 - INFO - Executing action action_5 ...
2024-11-04 10:10:30,400 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 94}}, {'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-04 10:10:30,701 - INFO - Executing action action_2 ...
2024-11-04 10:10:30,968 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 92}}]
2024-11-04 10:10:31,388 - INFO - Executing action action_4 ...
2024-11-04 10:10:31,688 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 90}}]
2024-11-04 10:10:32,049 - INFO - Executing action action_4 ...
2024-11-04 10:10:32,273 - INFO - Action action_4 executed. Events received: []
2024-11-04 10:10:32,577 - INFO - Executing action action_4 ...
2024-11-04 10:10:32,839 - INFO - Action action_4 executed. Events received: []
2024-11-04 10:10:33,174 - INFO - Executing action action_6 ...
2024-11-04 10:10:33,379 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 88}}]
2024-11-04 10:10:33,728 - INFO - Plan thread terminated.
2024-11-04 10:10:33,753 - INFO - Belief set thread terminated.
2024-11-04 10:10:33,772 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 94}}, {'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 92}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 90}}], [], [], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': None}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 88}}]]
2024-11-04 10:10:33,772 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 88}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': None}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:10:42,340 - INFO - Invalidating intention 7 ...
2024-11-04 10:10:49,239 - INFO - Testing intention 
def function():
    global belief_set
    parcels = belief_set['parcels']
    agent = belief_set['agent'][1]
    for parcel_id, parcel_info in parcels.items():
        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info['carried_by_id'] is None:
            function_5()
            break
2024-11-04 10:10:49,239 - INFO - The intention is valid.
2024-11-04 10:10:49,240 - INFO - Intention added to desire 1
2024-11-04 10:10:49,240 - INFO - Running intention 8 ...
2024-11-04 10:10:49,431 - INFO - Belief set thread started ...
2024-11-04 10:10:49,437 - INFO - Plan thread started ...
2024-11-04 10:10:49,443 - INFO - Started subprocess...
2024-11-04 10:10:49,486 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 88}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': None}, 2: {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': None}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:10:49,789 - INFO - Executing action action_5 ...
2024-11-04 10:10:50,059 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 86}}]
2024-11-04 10:10:50,412 - INFO - Belief set thread terminated.
2024-11-04 10:10:50,437 - INFO - Plan thread terminated.
2024-11-04 10:10:50,517 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 86}}]]
2024-11-04 10:10:50,530 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 86}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:11:03,876 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    for parcel in parcels.values():
        if parcel['carried_by_id'] is None:
            parcel_x, parcel_y = parcel['coordinates']
            while agent['coordinates'][0] > parcel_x:
                function_1()
            while agent['coordinates'][0] < parcel_x:
                function_2()
            while agent['coordinates'][1] > parcel_y:
                function_3()
            while agent['coordinates'][1] < parcel_y:
                function_4()
            function_5()
2024-11-04 10:11:03,888 - INFO - The intention is valid.
2024-11-04 10:11:03,895 - INFO - Intention added to desire 1
2024-11-04 10:11:03,895 - INFO - Running intention 9 ...
2024-11-04 10:11:04,007 - INFO - Belief set thread started ...
2024-11-04 10:11:04,026 - INFO - Plan thread started ...
2024-11-04 10:11:04,032 - INFO - Started subprocess...
2024-11-04 10:11:04,032 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 86}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:11:04,405 - INFO - Executing action action_1 ...
2024-11-04 10:11:04,642 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}]
2024-11-04 10:11:04,953 - INFO - Executing action action_1 ...
2024-11-04 10:11:05,192 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:05,466 - INFO - Executing action action_1 ...
2024-11-04 10:11:05,708 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:06,061 - INFO - Executing action action_1 ...
2024-11-04 10:11:06,306 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:06,654 - INFO - Executing action action_1 ...
2024-11-04 10:11:06,885 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:07,310 - INFO - Executing action action_1 ...
2024-11-04 10:11:07,535 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:07,965 - INFO - Executing action action_1 ...
2024-11-04 10:11:08,202 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:08,527 - INFO - Executing action action_1 ...
2024-11-04 10:11:08,762 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:09,143 - INFO - Executing action action_1 ...
2024-11-04 10:11:09,362 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:09,705 - INFO - Executing action action_1 ...
2024-11-04 10:11:10,003 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:10,332 - INFO - Executing action action_1 ...
2024-11-04 10:11:10,569 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:10,905 - INFO - Executing action action_1 ...
2024-11-04 10:11:11,178 - INFO - Action action_1 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-04 10:11:11,563 - INFO - Executing action action_1 ...
2024-11-04 10:11:11,781 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:12,145 - INFO - Executing action action_1 ...
2024-11-04 10:11:12,357 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:12,685 - INFO - Executing action action_1 ...
2024-11-04 10:11:12,927 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:13,313 - INFO - Executing action action_1 ...
2024-11-04 10:11:13,533 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:13,851 - INFO - Executing action action_1 ...
2024-11-04 10:11:14,089 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:14,388 - INFO - Executing action action_1 ...
2024-11-04 10:11:14,639 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:14,957 - INFO - Executing action action_1 ...
2024-11-04 10:11:15,189 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:15,549 - INFO - Executing action action_1 ...
2024-11-04 10:11:15,780 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:16,052 - INFO - Executing action action_1 ...
2024-11-04 10:11:16,313 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:16,662 - INFO - Executing action action_1 ...
2024-11-04 10:11:16,874 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:17,265 - INFO - Executing action action_1 ...
2024-11-04 10:11:17,515 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:17,812 - INFO - Executing action action_1 ...
2024-11-04 10:11:18,038 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:18,375 - INFO - Executing action action_1 ...
2024-11-04 10:11:18,643 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:18,992 - INFO - Executing action action_1 ...
2024-11-04 10:11:19,148 - ERROR - Error during intention 9 execution. Intention 9 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 10:11:19,216 - INFO - Belief set thread terminated.
2024-11-04 10:11:19,216 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:11:19,492 - INFO - Plan thread terminated.
2024-11-04 10:11:19,504 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}], [], [], [], [], [], [], [], [], [], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 10:11:19,504 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:11:28,915 - INFO - Invalidating intention 9 ...
2024-11-04 10:12:04,761 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell']

    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent['coordinates'][1]))
    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c['cell_coordinates'][0] - agent['coordinates'][0]) + abs(c['cell_coordinates'][1] - agent['coordinates'][1]))

    while agent['coordinates'] != target_parcel['coordinates']:
        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
            function_2()
            agent['coordinates'][0] += 1
        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
            function_1()
            agent['coordinates'][0] -= 1
        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
            function_4()
            agent['coordinates'][1] += 1
        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
            function_3()
            agent['coordinates'][1] -= 1

    function_5()

    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0]:
            function_2()
            agent['coordinates'][0] += 1
        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'][0]:
            function_1()
            agent['coordinates'][0] -= 1
        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1]:
            function_4()
            agent['coordinates'][1] += 1
        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'][1]:
            function_3()
            agent['coordinates'][1] -= 1
    function_6()

2024-11-04 10:12:04,787 - INFO - The intention is valid.
2024-11-04 10:12:04,808 - INFO - Intention added to desire 1
2024-11-04 10:12:04,814 - INFO - Running intention 10 ...
2024-11-04 10:12:04,996 - INFO - Belief set thread started ...
2024-11-04 10:12:05,020 - INFO - Plan thread started ...
2024-11-04 10:12:05,026 - INFO - Started subprocess...
2024-11-04 10:12:05,083 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': False, 'score': 0, 'energy': 84}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {1: {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, 2: {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, 3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:12:05,343 - INFO - Executing action action_5 ...
2024-11-04 10:12:05,556 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': True, 'score': 0, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 10:12:05,839 - INFO - Executing action action_2 ...
2024-11-04 10:12:06,078 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:12:06,355 - INFO - Executing action action_4 ...
2024-11-04 10:12:06,563 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [1, 2], 'has_key': True, 'score': 0, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 10:12:06,900 - INFO - Executing action action_4 ...
2024-11-04 10:12:07,137 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'has_key': True, 'score': 0, 'energy': 76}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 10:12:07,444 - INFO - Executing action action_6 ...
2024-11-04 10:12:07,665 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 74}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:12:08,045 - INFO - Belief set thread terminated.
2024-11-04 10:12:08,051 - INFO - Plan thread terminated.
2024-11-04 10:12:08,070 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_2', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2], 'has_key': True, 'score': 0, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [1, 2], 'has_key': True, 'score': 0, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2], 'has_key': True, 'score': 0, 'energy': 76}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 74}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-04 10:12:08,083 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 74}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:12:15,733 - INFO - Testing intention 
def function():
    global belief_set
    while len(belief_set['parcels']) > 0:
        function_10()
        if belief_set['agent'][1]['energy'] < 30:
            function_2()
            function_2()
            function_5()
            function_1()
            function_1()
        function_6()
2024-11-04 10:12:15,752 - INFO - The intention is valid.
2024-11-04 10:12:15,764 - INFO - Intention added to desire 1
2024-11-04 10:12:15,777 - INFO - Running intention 11 ...
2024-11-04 10:12:16,051 - INFO - Belief set thread started ...
2024-11-04 10:12:16,069 - INFO - Plan thread started ...
2024-11-04 10:12:16,076 - INFO - Started subprocess...
2024-11-04 10:12:16,082 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 74}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {3: {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 4: {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 5: {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 6: {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 7: {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 8: {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:12:16,378 - INFO - Executing action action_1 ...
2024-11-04 10:12:16,622 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 72}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-04 10:12:16,983 - INFO - Executing action action_3 ...
2024-11-04 10:12:17,196 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 70}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-04 10:12:17,563 - INFO - Executing action action_3 ...
2024-11-04 10:12:17,775 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 10:12:18,100 - INFO - Executing action action_3 ...
2024-11-04 10:12:18,325 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 66}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 10:12:18,662 - INFO - Executing action action_5 ...
2024-11-04 10:12:18,907 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:12:19,206 - INFO - Executing action action_2 ...
2024-11-04 10:12:19,436 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:12:19,740 - INFO - Executing action action_4 ...
2024-11-04 10:12:19,951 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'has_key': True, 'score': 40, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 10:12:20,307 - INFO - Executing action action_4 ...
2024-11-04 10:12:20,522 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'has_key': True, 'score': 40, 'energy': 58}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 10:12:20,834 - INFO - Executing action action_4 ...
2024-11-04 10:12:21,061 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'has_key': True, 'score': 40, 'energy': 56}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 10:12:21,405 - INFO - Executing action action_6 ...
2024-11-04 10:12:21,700 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 54}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:12:22,060 - INFO - Executing action action_6 ...
2024-11-04 10:12:22,277 - INFO - Action action_6 executed. Events received: []
2024-11-04 10:12:22,635 - INFO - Belief set thread terminated.
2024-11-04 10:12:22,641 - INFO - Plan thread terminated.
2024-11-04 10:12:22,666 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 72}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 70}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 40, 'energy': 66}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'has_key': True, 'score': 40, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'has_key': True, 'score': 40, 'energy': 58}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [3, 4, 5, 6, 7, 8], 'has_key': True, 'score': 40, 'energy': 56}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 54}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], []]
2024-11-04 10:12:22,685 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 54}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:12:27,810 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False
2024-11-04 10:12:27,810 - INFO - The trigger function is valid.
2024-11-04 10:12:27,811 - INFO - Trigger function added to desire 1.
2024-11-04 10:12:28,907 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: True
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False




2024-11-04 10:12:28,926 - INFO - Running trigger function for desire 1 ...
2024-11-04 10:12:28,926 - INFO - Trigger function for desire 1 has been executed. Result: False
2024-11-04 10:12:28,926 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 10:12:28,926 - INFO - No desire has been triggered.
2024-11-04 10:12:28,927 - INFO - No desire triggered.
2024-11-04 10:12:30,999 - INFO - Desire added: 2. Desires:
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: True
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False



Desire 2: The agent should strategically conserve energy by planning minimal distance routes and avoid unnecessary movements, while also aiming to quickly find and hold keys to unlock doors when encountered.
Executable: False
Trigger function:
None



2024-11-04 10:12:41,639 - INFO - Testing intention 
def function():
    global belief_set
    coordinates = belief_set['agent'][1]['coordinates']
    battery_coordinates = belief_set['batteries'][1]['coordinates']
    while coordinates != battery_coordinates:
        if coordinates[0] < battery_coordinates[0]:
            function_2()
        elif coordinates[0] > battery_coordinates[0]:
            function_1()
        elif coordinates[1] < battery_coordinates[1]:
            function_4()
        elif coordinates[1] > battery_coordinates[1]:
            function_3()
        coordinates = belief_set['agent'][1]['coordinates']
    function_5()
    coordinates = belief_set['agent'][1]['coordinates']
    key_coordinates = belief_set['keys'][1]['coordinates']
    while coordinates != key_coordinates:
        if coordinates[0] < key_coordinates[0]:
            function_2()
        elif coordinates[0] > key_coordinates[0]:
            function_1()
        elif coordinates[1] < key_coordinates[1]:
            function_4()
        elif coordinates[1] > key_coordinates[1]:
            function_3()
        coordinates = belief_set['agent'][1]['coordinates']
    function_5()
2024-11-04 10:12:41,658 - INFO - The intention is valid.
2024-11-04 10:12:41,659 - INFO - Intention added to desire 2
2024-11-04 10:12:41,678 - INFO - Running intention 12 ...
2024-11-04 10:12:41,790 - INFO - Belief set thread started ...
2024-11-04 10:12:41,815 - INFO - Plan thread started ...
2024-11-04 10:12:41,821 - INFO - Started subprocess...
2024-11-04 10:12:41,821 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 54}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {1: {'id': 1, 'coordinates': [1, 0]}}, 'parcels': {9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:12:42,105 - INFO - Executing action action_3 ...
2024-11-04 10:12:42,360 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 52}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 10:12:42,663 - INFO - Executing action action_3 ...
2024-11-04 10:12:42,888 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 50}}]
2024-11-04 10:12:43,212 - INFO - Executing action action_3 ...
2024-11-04 10:12:43,417 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 48}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 10:12:43,753 - INFO - Executing action action_5 ...
2024-11-04 10:12:44,007 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [1, 0]}}]
2024-11-04 10:12:44,395 - INFO - Executing action action_5 ...
2024-11-04 10:12:44,606 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:12:44,990 - INFO - Plan thread terminated.
2024-11-04 10:12:45,011 - INFO - Belief set thread terminated.
2024-11-04 10:12:45,080 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_3', 'action_5', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 52}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 50}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 48}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [1, 0]}}], []]
2024-11-04 10:12:45,092 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 100}}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {}, 'parcels': {9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:12:50,946 - INFO - Invalidating intention 12 ...
2024-11-04 10:13:02,573 - INFO - Testing intention 
def function():
    global belief_set
    
    # First, check if the agent has a key
    if belief_set['agent'][1]['has_key']:
        # If the agent has a key, move towards the nearest parcel
        function_10()
    else:
        # If the agent does not have a key, find and hold a key
        function_8()
    
    # Once the agent has a parcel and a key, move towards the nearest delivery cell and deliver the parcel
    function_11()
    
    # If the agent encounters a door, use the key to unlock it and continue towards the delivery cell
    if belief_set['map']['grid'][belief_set['agent'][1]['coordinates'][0]][belief_set['agent'][1]['coordinates'][1]]['cell_type'] == 'door':
        function_5()
    
    # Finally, if the agent's energy is below a certain threshold, find and consume a battery
    if belief_set['agent'][1]['energy'] < 30:
        function_1()
        function_2()
        function_3()
        function_4()
2024-11-04 10:13:02,579 - INFO - The intention is valid.
2024-11-04 10:13:02,611 - INFO - Intention added to desire 2
2024-11-04 10:13:02,618 - INFO - Running intention 13 ...
2024-11-04 10:13:02,767 - INFO - Belief set thread started ...
2024-11-04 10:13:02,786 - INFO - Plan thread started ...
2024-11-04 10:13:02,835 - INFO - Started subprocess...
2024-11-04 10:13:02,835 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 100}}, 'keys': {1: {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {9: {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 10: {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:13:03,128 - INFO - Executing action action_1 ...
2024-11-04 10:13:03,348 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 98}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 10:13:03,725 - INFO - Executing action action_5 ...
2024-11-04 10:13:03,947 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [9, 10], 'has_key': True, 'score': 160, 'energy': 96}}]
2024-11-04 10:13:04,259 - INFO - Executing action action_2 ...
2024-11-04 10:13:04,484 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:13:04,803 - INFO - Executing action action_4 ...
2024-11-04 10:13:05,028 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [9, 10], 'has_key': True, 'score': 160, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 10:13:05,394 - INFO - Executing action action_4 ...
2024-11-04 10:13:05,600 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [9, 10], 'has_key': True, 'score': 160, 'energy': 90}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 10:13:05,900 - INFO - Executing action action_4 ...
2024-11-04 10:13:06,177 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [9, 10], 'has_key': True, 'score': 160, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 10:13:06,489 - INFO - Executing action action_6 ...
2024-11-04 10:13:06,715 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 86}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:13:17,850 - ERROR - Error during intention 13 execution. Intention 13 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 10:13:17,999 - INFO - Plan thread terminated.
2024-11-04 10:13:18,030 - INFO - Belief set thread terminated.
2024-11-04 10:13:18,037 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 160, 'energy': 98}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [9, 10], 'has_key': True, 'score': 160, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [9, 10], 'has_key': True, 'score': 160, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [9, 10], 'has_key': True, 'score': 160, 'energy': 90}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [9, 10], 'has_key': True, 'score': 160, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 86}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-04 10:13:18,062 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 86}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:13:27,458 - INFO - Invalidating intention 13 ...
2024-11-04 10:13:47,893 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    if agent['energy'] < 30:
        # If energy is low, find the nearest battery to recharge
        # This is a placeholder for the actual implementation
        # The agent should find the shortest path to the battery and move towards it
        pass
    else:
        # If the agent has a parcel, deliver it
        if agent['parcels_carried_ids']:
            function_10()
        else:
            # If the agent doesn't have a parcel, find the nearest one and pick it up
            function_11()
        # If the agent encounters a door and has a key, unlock it
        # This is a placeholder for the actual implementation
        # The agent should check if it is in the same cell as a door and if it has a key
        pass
2024-11-04 10:13:47,899 - INFO - The intention is valid.
2024-11-04 10:13:47,906 - INFO - Intention added to desire 2
2024-11-04 10:13:47,930 - INFO - Running intention 14 ...
2024-11-04 10:13:48,216 - INFO - Belief set thread started ...
2024-11-04 10:13:48,235 - INFO - Plan thread started ...
2024-11-04 10:13:48,247 - INFO - Started subprocess...
2024-11-04 10:13:48,248 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 86}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {11: {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 12: {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:13:48,523 - INFO - Executing action action_1 ...
2024-11-04 10:13:48,743 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:13:49,023 - INFO - Executing action action_3 ...
2024-11-04 10:13:49,253 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-04 10:13:49,520 - INFO - Executing action action_3 ...
2024-11-04 10:13:49,725 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 10:13:50,036 - INFO - Executing action action_3 ...
2024-11-04 10:13:50,248 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 10:13:50,611 - INFO - Executing action action_5 ...
2024-11-04 10:13:50,864 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [11, 12], 'has_key': True, 'score': 200, 'energy': 76}}]
2024-11-04 10:13:51,207 - INFO - Executing action action_2 ...
2024-11-04 10:13:51,464 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [11, 12], 'has_key': True, 'score': 200, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 10:13:51,811 - INFO - Executing action action_4 ...
2024-11-04 10:13:52,046 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [11, 12], 'has_key': True, 'score': 200, 'energy': 72}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 10:13:52,422 - INFO - Executing action action_4 ...
2024-11-04 10:13:52,652 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:13:52,981 - INFO - Executing action action_4 ...
2024-11-04 10:13:53,203 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [11, 12], 'has_key': True, 'score': 200, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 10:13:53,514 - INFO - Executing action action_6 ...
2024-11-04 10:13:53,782 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:13:54,119 - INFO - Executing action action_6 ...
2024-11-04 10:13:54,343 - INFO - Action action_6 executed. Events received: []
2024-11-04 10:13:54,748 - INFO - Plan thread terminated.
2024-11-04 10:13:54,779 - INFO - Belief set thread terminated.
2024-11-04 10:13:54,842 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_6']. Events: [[], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 200, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [11, 12], 'has_key': True, 'score': 200, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [11, 12], 'has_key': True, 'score': 200, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [11, 12], 'has_key': True, 'score': 200, 'energy': 72}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [11, 12], 'has_key': True, 'score': 200, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], []]
2024-11-04 10:13:54,842 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:14:00,323 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 50:
        return True
    if belief_set['doors'] and not agent['has_key'] and agent['energy'] > 50:
        return True
    return False
2024-11-04 10:14:00,329 - INFO - The trigger function is valid.
2024-11-04 10:14:00,329 - INFO - Trigger function added to desire 2.
2024-11-04 10:14:01,989 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: True
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False



Desire 2: The agent should strategically conserve energy by planning minimal distance routes and avoid unnecessary movements, while also aiming to quickly find and hold keys to unlock doors when encountered.
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to move to the nearest battery, pick it up, recharge and then move towards the nearest key.
                def function_12():
                    global belief_set
                    coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][1]['coordinates']
                    while coordinates != battery_coordinates:
                        if coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif coordinates[1] > battery_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    coordinates = belief_set['agent'][1]['coordinates']
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    while coordinates != key_coordinates:
                        if coordinates[0] < key_coordinates[0]:
                            function_2()
                        elif coordinates[0] > key_coordinates[0]:
                            function_1()
                        elif coordinates[1] < key_coordinates[1]:
                            function_4()
                        elif coordinates[1] > key_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered.
                def function_13():
                    global belief_set
                    if belief_set['agent'][1]['has_key']:
                        function_10()
                    else:
                        function_8()
                    function_11()
                    if belief_set['map']['grid'][belief_set['agent'][1]['coordinates'][0]][
                        belief_set['agent'][1]['coordinates'][1]]['cell_type'] == 'door':
                        function_5()
                    if belief_set['agent'][1]['energy'] < 30:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short-term goal is to move towards the nearest parcel, if energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered. If energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        pass
                    else:
                        if agent['parcels_carried_ids']:
                            function_10()
                        else:
                            function_11()
                        pass
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 50:
        return True
    if belief_set['doors'] and not agent['has_key'] and agent['energy'] > 50:
        return True
    return False




2024-11-04 10:14:01,989 - INFO - Running trigger function for desire 1 ...
2024-11-04 10:14:01,989 - INFO - Trigger function for desire 1 has been executed. Result: True
2024-11-04 10:14:01,989 - INFO - Desire 1 could be triggered. Adding it to the list...
2024-11-04 10:14:01,989 - INFO - Running trigger function for desire 2 ...
2024-11-04 10:14:01,989 - INFO - Trigger function for desire 2 has been executed. Result: True
2024-11-04 10:14:01,989 - INFO - Desire 2 could be triggered. Adding it to the list...
2024-11-04 10:14:01,989 - INFO - Desires triggered: [1, 2]. Now randomly choosing which one to run.
2024-11-04 10:14:02,001 - INFO - Desire 2 was randomly chosen. Desire 2 has been triggered.
2024-11-04 10:14:02,001 - INFO - Desire 2 is about to be executed ...
2024-11-04 10:14:02,001 - INFO - Executing all valid intentions for desire 2 ...
2024-11-04 10:14:02,001 - INFO - Executing intention 14 ...
2024-11-04 10:14:02,001 - INFO - Running intention 14 ...
2024-11-04 10:14:02,208 - INFO - Belief set thread started ...
2024-11-04 10:14:02,215 - INFO - Plan thread started ...
2024-11-04 10:14:02,259 - INFO - Started subprocess...
2024-11-04 10:14:02,259 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {13: {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:14:02,505 - INFO - Executing action action_1 ...
2024-11-04 10:14:02,745 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 64}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-04 10:14:03,071 - INFO - Executing action action_3 ...
2024-11-04 10:14:03,308 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 62}}]
2024-11-04 10:14:03,683 - INFO - Executing action action_3 ...
2024-11-04 10:14:03,945 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 10:14:04,365 - INFO - Executing action action_3 ...
2024-11-04 10:14:04,620 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 58}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 10:14:04,987 - INFO - Executing action action_5 ...
2024-11-04 10:14:05,212 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 56}}]
2024-11-04 10:14:05,506 - INFO - Executing action action_2 ...
2024-11-04 10:14:05,729 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 54}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 10:14:06,079 - INFO - Executing action action_4 ...
2024-11-04 10:14:06,339 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 52}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 10:14:06,713 - INFO - Executing action action_4 ...
2024-11-04 10:14:06,918 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 50}}]
2024-11-04 10:14:07,225 - INFO - Executing action action_4 ...
2024-11-04 10:14:07,463 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 48}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 10:14:07,808 - INFO - Executing action action_6 ...
2024-11-04 10:14:08,044 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 46}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:14:08,400 - INFO - Executing action action_6 ...
2024-11-04 10:14:08,645 - INFO - Action action_6 executed. Events received: []
2024-11-04 10:14:08,941 - INFO - Plan thread terminated.
2024-11-04 10:14:08,978 - INFO - Belief set thread terminated.
2024-11-04 10:14:09,047 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 64}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 62}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 58}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 56}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 54}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 52}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 50}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 48}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 46}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], []]
2024-11-04 10:14:09,072 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 46}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:14:09,072 - INFO - Intention 14 has been executed with plan ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_6'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 64}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 62}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 58}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 56}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 54}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 52}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 50}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [13], 'has_key': True, 'score': 240, 'energy': 48}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 46}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], []].
2024-11-04 10:14:14,277 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: True
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False



Desire 2: The agent should strategically conserve energy by planning minimal distance routes and avoid unnecessary movements, while also aiming to quickly find and hold keys to unlock doors when encountered.
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to move to the nearest battery, pick it up, recharge and then move towards the nearest key.
                def function_12():
                    global belief_set
                    coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][1]['coordinates']
                    while coordinates != battery_coordinates:
                        if coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif coordinates[1] > battery_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    coordinates = belief_set['agent'][1]['coordinates']
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    while coordinates != key_coordinates:
                        if coordinates[0] < key_coordinates[0]:
                            function_2()
                        elif coordinates[0] > key_coordinates[0]:
                            function_1()
                        elif coordinates[1] < key_coordinates[1]:
                            function_4()
                        elif coordinates[1] > key_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered.
                def function_13():
                    global belief_set
                    if belief_set['agent'][1]['has_key']:
                        function_10()
                    else:
                        function_8()
                    function_11()
                    if belief_set['map']['grid'][belief_set['agent'][1]['coordinates'][0]][
                        belief_set['agent'][1]['coordinates'][1]]['cell_type'] == 'door':
                        function_5()
                    if belief_set['agent'][1]['energy'] < 30:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short-term goal is to move towards the nearest parcel, if energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered. If energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        pass
                    else:
                        if agent['parcels_carried_ids']:
                            function_10()
                        else:
                            function_11()
                        pass
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 50:
        return True
    if belief_set['doors'] and not agent['has_key'] and agent['energy'] > 50:
        return True
    return False




2024-11-04 10:14:14,277 - INFO - Running trigger function for desire 1 ...
2024-11-04 10:14:14,277 - INFO - Trigger function for desire 1 has been executed. Result: False
2024-11-04 10:14:14,277 - INFO - Running trigger function for desire 2 ...
2024-11-04 10:14:14,277 - INFO - Trigger function for desire 2 has been executed. Result: False
2024-11-04 10:14:14,277 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 10:14:14,277 - INFO - No desire has been triggered.
2024-11-04 10:14:14,340 - INFO - No desire triggered.
2024-11-04 10:14:17,714 - INFO - Desire added: 3. Desires:
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: True
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False



Desire 2: The agent should strategically conserve energy by planning minimal distance routes and avoid unnecessary movements, while also aiming to quickly find and hold keys to unlock doors when encountered.
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to move to the nearest battery, pick it up, recharge and then move towards the nearest key.
                def function_12():
                    global belief_set
                    coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][1]['coordinates']
                    while coordinates != battery_coordinates:
                        if coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif coordinates[1] > battery_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    coordinates = belief_set['agent'][1]['coordinates']
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    while coordinates != key_coordinates:
                        if coordinates[0] < key_coordinates[0]:
                            function_2()
                        elif coordinates[0] > key_coordinates[0]:
                            function_1()
                        elif coordinates[1] < key_coordinates[1]:
                            function_4()
                        elif coordinates[1] > key_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered.
                def function_13():
                    global belief_set
                    if belief_set['agent'][1]['has_key']:
                        function_10()
                    else:
                        function_8()
                    function_11()
                    if belief_set['map']['grid'][belief_set['agent'][1]['coordinates'][0]][
                        belief_set['agent'][1]['coordinates'][1]]['cell_type'] == 'door':
                        function_5()
                    if belief_set['agent'][1]['energy'] < 30:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short-term goal is to move towards the nearest parcel, if energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered. If energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        pass
                    else:
                        if agent['parcels_carried_ids']:
                            function_10()
                        else:
                            function_11()
                        pass
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 50:
        return True
    if belief_set['doors'] and not agent['has_key'] and agent['energy'] > 50:
        return True
    return False



Desire 3: The agent should aim to learn and remember the layout of the environment, including the locations of obstacles, in order to optimize its path-finding. The agent should also prioritize actions that increase its score and energy level over actions that do not contribute to these goals.
Executable: False
Trigger function:
None



2024-11-04 10:14:22,062 - INFO - Testing intention 
def function():
    global belief_set
    if belief_set['agent'][1]['energy'] > 10:
        function_10()
    else:
        function_14()

2024-11-04 10:14:22,081 - INFO - The intention is valid.
2024-11-04 10:14:22,081 - INFO - Intention added to desire 3
2024-11-04 10:14:22,088 - INFO - Running intention 15 ...
2024-11-04 10:14:22,329 - INFO - Belief set thread started ...
2024-11-04 10:14:22,354 - INFO - Plan thread started ...
2024-11-04 10:14:22,361 - INFO - Started subprocess...
2024-11-04 10:14:22,361 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 46}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {14: {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:14:22,631 - INFO - Executing action action_1 ...
2024-11-04 10:14:22,887 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 44}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-04 10:14:23,201 - INFO - Executing action action_3 ...
2024-11-04 10:14:23,450 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 42}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-04 10:14:23,750 - INFO - Executing action action_3 ...
2024-11-04 10:14:23,955 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 40}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 10:14:24,254 - INFO - Executing action action_3 ...
2024-11-04 10:14:24,474 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 38}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 10:14:24,762 - INFO - Executing action action_5 ...
2024-11-04 10:14:24,993 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 36}}]
2024-11-04 10:14:25,352 - INFO - Executing action action_2 ...
2024-11-04 10:14:25,564 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 34}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 10:14:25,897 - INFO - Executing action action_4 ...
2024-11-04 10:14:26,138 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 32}}]
2024-11-04 10:14:26,541 - INFO - Executing action action_4 ...
2024-11-04 10:14:26,798 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 30}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 10:14:27,145 - INFO - Executing action action_4 ...
2024-11-04 10:14:27,351 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 28}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 10:14:27,694 - INFO - Executing action action_6 ...
2024-11-04 10:14:27,944 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 26}}]
2024-11-04 10:14:28,362 - INFO - Plan thread terminated.
2024-11-04 10:14:28,437 - INFO - Belief set thread terminated.
2024-11-04 10:14:28,488 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 44}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 42}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 40}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 38}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 36}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 34}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 32}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 30}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [14], 'has_key': True, 'score': 260, 'energy': 28}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 26}}]]
2024-11-04 10:14:28,488 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 26}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:14:34,457 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent'][1]
    if 'non_walkable' not in [cell['cell_type'] for cell in belief_set['map']['grid']] and agent['score'] > 200 and agent['energy'] > 20:
        return True
    else:
        return False
2024-11-04 10:14:34,463 - ERROR - Trigger function does not return the boolean True for the prior belief set.
2024-11-04 10:14:35,999 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: True
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False



Desire 2: The agent should strategically conserve energy by planning minimal distance routes and avoid unnecessary movements, while also aiming to quickly find and hold keys to unlock doors when encountered.
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to move to the nearest battery, pick it up, recharge and then move towards the nearest key.
                def function_12():
                    global belief_set
                    coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][1]['coordinates']
                    while coordinates != battery_coordinates:
                        if coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif coordinates[1] > battery_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    coordinates = belief_set['agent'][1]['coordinates']
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    while coordinates != key_coordinates:
                        if coordinates[0] < key_coordinates[0]:
                            function_2()
                        elif coordinates[0] > key_coordinates[0]:
                            function_1()
                        elif coordinates[1] < key_coordinates[1]:
                            function_4()
                        elif coordinates[1] > key_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered.
                def function_13():
                    global belief_set
                    if belief_set['agent'][1]['has_key']:
                        function_10()
                    else:
                        function_8()
                    function_11()
                    if belief_set['map']['grid'][belief_set['agent'][1]['coordinates'][0]][
                        belief_set['agent'][1]['coordinates'][1]]['cell_type'] == 'door':
                        function_5()
                    if belief_set['agent'][1]['energy'] < 30:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short-term goal is to move towards the nearest parcel, if energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered. If energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        pass
                    else:
                        if agent['parcels_carried_ids']:
                            function_10()
                        else:
                            function_11()
                        pass
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 50:
        return True
    if belief_set['doors'] and not agent['has_key'] and agent['energy'] > 50:
        return True
    return False



Desire 3: The agent should aim to learn and remember the layout of the environment, including the locations of obstacles, in order to optimize its path-finding. The agent should also prioritize actions that increase its score and energy level over actions that do not contribute to these goals.
    Intention ID: [15]
    Executable: True
    Description: The agent should navigate towards the nearest parcel if the energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel. If the energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_15():
                    global belief_set
                    if belief_set['agent'][1]['energy'] > 10:
                        function_10()
                    else:
                        function_14()
                
Executable: False
Trigger function:
None



2024-11-04 10:14:35,999 - INFO - Running trigger function for desire 1 ...
2024-11-04 10:14:35,999 - INFO - Trigger function for desire 1 has been executed. Result: True
2024-11-04 10:14:35,999 - INFO - Desire 1 could be triggered. Adding it to the list...
2024-11-04 10:14:35,999 - INFO - Running trigger function for desire 2 ...
2024-11-04 10:14:35,999 - INFO - Trigger function for desire 2 has been executed. Result: False
2024-11-04 10:14:35,999 - INFO - Desires triggered: [1]. Now randomly choosing which one to run.
2024-11-04 10:14:35,999 - INFO - Desire 1 was randomly chosen. Desire 1 has been triggered.
2024-11-04 10:14:35,999 - INFO - Desire 1 is about to be executed ...
2024-11-04 10:14:35,999 - INFO - Executing all valid intentions for desire 1 ...
2024-11-04 10:14:35,999 - INFO - Executing intention 8 ...
2024-11-04 10:14:36,005 - INFO - Running intention 8 ...
2024-11-04 10:14:36,217 - INFO - Belief set thread started ...
2024-11-04 10:14:36,241 - INFO - Plan thread started ...
2024-11-04 10:14:36,309 - INFO - Started subprocess...
2024-11-04 10:14:36,309 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 26}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:14:36,675 - INFO - Belief set thread terminated.
2024-11-04 10:14:36,675 - INFO - Plan thread terminated.
2024-11-04 10:14:36,744 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-04 10:14:36,757 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 26}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:14:36,757 - INFO - Intention 8 has been executed with plan [] and events [].
2024-11-04 10:14:36,757 - INFO - Executing intention 10 ...
2024-11-04 10:14:36,757 - INFO - Running intention 10 ...
2024-11-04 10:14:36,950 - INFO - Belief set thread started ...
2024-11-04 10:14:36,957 - INFO - Plan thread started ...
2024-11-04 10:14:36,969 - INFO - Started subprocess...
2024-11-04 10:14:36,976 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 26}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {15: {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:14:37,264 - INFO - Executing action action_1 ...
2024-11-04 10:14:37,471 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 24}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-04 10:14:37,762 - INFO - Executing action action_3 ...
2024-11-04 10:14:37,992 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 22}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-04 10:14:38,329 - INFO - Executing action action_3 ...
2024-11-04 10:14:38,559 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 20}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 10:14:38,895 - INFO - Executing action action_3 ...
2024-11-04 10:14:39,113 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 18}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 10:14:39,487 - INFO - Executing action action_5 ...
2024-11-04 10:14:39,704 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 16}}]
2024-11-04 10:14:40,059 - INFO - Executing action action_2 ...
2024-11-04 10:14:40,271 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 14}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 10:14:40,638 - INFO - Executing action action_4 ...
2024-11-04 10:14:40,862 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:14:41,205 - INFO - Executing action action_4 ...
2024-11-04 10:14:41,473 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 10}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 10:14:41,804 - INFO - Executing action action_4 ...
2024-11-04 10:14:42,023 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 8}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 10:14:42,311 - INFO - Executing action action_6 ...
2024-11-04 10:14:42,561 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 10:14:42,884 - INFO - Plan thread terminated.
2024-11-04 10:14:42,916 - INFO - Belief set thread terminated.
2024-11-04 10:14:42,947 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 24}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 22}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 20}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 18}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 16}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 14}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 10}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 8}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-04 10:14:42,959 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:14:42,959 - INFO - Intention 10 has been executed with plan ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 24}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 22}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 20}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 280, 'energy': 18}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 16}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 14}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 10}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [15], 'has_key': True, 'score': 280, 'energy': 8}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]].
2024-11-04 10:14:42,959 - INFO - Executing intention 11 ...
2024-11-04 10:14:42,959 - INFO - Running intention 11 ...
2024-11-04 10:14:43,122 - INFO - Belief set thread started ...
2024-11-04 10:14:43,141 - INFO - Plan thread started ...
2024-11-04 10:14:43,147 - INFO - Started subprocess...
2024-11-04 10:14:43,178 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:14:43,539 - INFO - Belief set thread terminated.
2024-11-04 10:14:43,558 - INFO - Plan thread terminated.
2024-11-04 10:14:43,602 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-04 10:14:43,602 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:14:43,602 - INFO - Intention 11 has been executed with plan [] and events [].
2024-11-04 10:14:47,151 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: True
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: True
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False



Desire 2: The agent should strategically conserve energy by planning minimal distance routes and avoid unnecessary movements, while also aiming to quickly find and hold keys to unlock doors when encountered.
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to move to the nearest battery, pick it up, recharge and then move towards the nearest key.
                def function_12():
                    global belief_set
                    coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][1]['coordinates']
                    while coordinates != battery_coordinates:
                        if coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif coordinates[1] > battery_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    coordinates = belief_set['agent'][1]['coordinates']
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    while coordinates != key_coordinates:
                        if coordinates[0] < key_coordinates[0]:
                            function_2()
                        elif coordinates[0] > key_coordinates[0]:
                            function_1()
                        elif coordinates[1] < key_coordinates[1]:
                            function_4()
                        elif coordinates[1] > key_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered.
                def function_13():
                    global belief_set
                    if belief_set['agent'][1]['has_key']:
                        function_10()
                    else:
                        function_8()
                    function_11()
                    if belief_set['map']['grid'][belief_set['agent'][1]['coordinates'][0]][
                        belief_set['agent'][1]['coordinates'][1]]['cell_type'] == 'door':
                        function_5()
                    if belief_set['agent'][1]['energy'] < 30:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short-term goal is to move towards the nearest parcel, if energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered. If energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        pass
                    else:
                        if agent['parcels_carried_ids']:
                            function_10()
                        else:
                            function_11()
                        pass
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 50:
        return True
    if belief_set['doors'] and not agent['has_key'] and agent['energy'] > 50:
        return True
    return False



Desire 3: The agent should aim to learn and remember the layout of the environment, including the locations of obstacles, in order to optimize its path-finding. The agent should also prioritize actions that increase its score and energy level over actions that do not contribute to these goals.
    Intention ID: [15]
    Executable: True
    Description: The agent should navigate towards the nearest parcel if the energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel. If the energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_15():
                    global belief_set
                    if belief_set['agent'][1]['energy'] > 10:
                        function_10()
                    else:
                        function_14()
                
Executable: False
Trigger function:
None



2024-11-04 10:14:47,151 - INFO - Running trigger function for desire 1 ...
2024-11-04 10:14:47,151 - INFO - Trigger function for desire 1 has been executed. Result: True
2024-11-04 10:14:47,151 - INFO - Desire 1 could be triggered. Adding it to the list...
2024-11-04 10:14:47,151 - INFO - Running trigger function for desire 2 ...
2024-11-04 10:14:47,151 - INFO - Trigger function for desire 2 has been executed. Result: False
2024-11-04 10:14:47,151 - INFO - Desires triggered: [1]. Now randomly choosing which one to run.
2024-11-04 10:14:47,151 - INFO - Desire 1 was randomly chosen. Desire 1 has been triggered.
2024-11-04 10:14:47,151 - INFO - Desire 1 is about to be executed ...
2024-11-04 10:14:47,151 - INFO - Executing all valid intentions for desire 1 ...
2024-11-04 10:14:47,151 - INFO - Executing intention 8 ...
2024-11-04 10:14:47,151 - INFO - Running intention 8 ...
2024-11-04 10:14:47,287 - INFO - Belief set thread started ...
2024-11-04 10:14:47,305 - INFO - Plan thread started ...
2024-11-04 10:14:47,336 - INFO - Started subprocess...
2024-11-04 10:14:47,348 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:14:47,625 - INFO - Belief set thread terminated.
2024-11-04 10:14:47,693 - INFO - Plan thread terminated.
2024-11-04 10:14:47,724 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-04 10:14:47,724 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:14:47,724 - INFO - Intention 8 has been executed with plan [] and events [].
2024-11-04 10:14:47,724 - INFO - Executing intention 10 ...
2024-11-04 10:14:47,724 - INFO - Running intention 10 ...
2024-11-04 10:14:47,893 - INFO - Belief set thread started ...
2024-11-04 10:14:47,900 - INFO - Plan thread started ...
2024-11-04 10:14:47,931 - INFO - Started subprocess...
2024-11-04 10:14:47,931 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {}}
2024-11-04 10:15:02,961 - ERROR - Error during intention 10 execution. Intention 10 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 10:15:02,986 - INFO - Belief set thread terminated.
2024-11-04 10:15:03,030 - INFO - Plan thread terminated.
2024-11-04 10:15:03,049 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-04 10:15:03,049 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:15:03,049 - INFO - Invalidating intention 10 ...
2024-11-04 10:15:03,049 - INFO - Invalidating intention 11 ...
2024-11-04 10:15:03,049 - INFO - Invalidating intention 13 ...
2024-11-04 10:15:03,049 - INFO - Invalidating intention 14 ...
2024-11-04 10:15:03,049 - INFO - Invalidating intention 15 ...
2024-11-04 10:15:03,049 - INFO - Invalidating intention 13 ...
2024-11-04 10:15:03,068 - INFO - Invalidating intention 14 ...
2024-11-04 10:15:03,068 - INFO - Invalidating intention 15 ...
2024-11-04 10:15:03,087 - INFO - Invalidating intention 15 ...
2024-11-04 10:15:03,093 - ERROR - Error during intention 10 execution. Desire 1 is now invalid and intention 10 has been invalidated.
2024-11-04 10:15:04,111 - INFO - Invalidating desire 1 ...
2024-11-04 10:15:05,258 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: False
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False



Desire 2: The agent should strategically conserve energy by planning minimal distance routes and avoid unnecessary movements, while also aiming to quickly find and hold keys to unlock doors when encountered.
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to move to the nearest battery, pick it up, recharge and then move towards the nearest key.
                def function_12():
                    global belief_set
                    coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][1]['coordinates']
                    while coordinates != battery_coordinates:
                        if coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif coordinates[1] > battery_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    coordinates = belief_set['agent'][1]['coordinates']
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    while coordinates != key_coordinates:
                        if coordinates[0] < key_coordinates[0]:
                            function_2()
                        elif coordinates[0] > key_coordinates[0]:
                            function_1()
                        elif coordinates[1] < key_coordinates[1]:
                            function_4()
                        elif coordinates[1] > key_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered.
                def function_13():
                    global belief_set
                    if belief_set['agent'][1]['has_key']:
                        function_10()
                    else:
                        function_8()
                    function_11()
                    if belief_set['map']['grid'][belief_set['agent'][1]['coordinates'][0]][
                        belief_set['agent'][1]['coordinates'][1]]['cell_type'] == 'door':
                        function_5()
                    if belief_set['agent'][1]['energy'] < 30:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                
    Intention ID: [14]
    Executable: False
    Description: The agent's short-term goal is to move towards the nearest parcel, if energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered. If energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        pass
                    else:
                        if agent['parcels_carried_ids']:
                            function_10()
                        else:
                            function_11()
                        pass
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 50:
        return True
    if belief_set['doors'] and not agent['has_key'] and agent['energy'] > 50:
        return True
    return False



Desire 3: The agent should aim to learn and remember the layout of the environment, including the locations of obstacles, in order to optimize its path-finding. The agent should also prioritize actions that increase its score and energy level over actions that do not contribute to these goals.
    Intention ID: [15]
    Executable: False
    Description: The agent should navigate towards the nearest parcel if the energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel. If the energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_15():
                    global belief_set
                    if belief_set['agent'][1]['energy'] > 10:
                        function_10()
                    else:
                        function_14()
                
Executable: False
Trigger function:
None



2024-11-04 10:15:05,258 - INFO - Running trigger function for desire 2 ...
2024-11-04 10:15:05,258 - INFO - Trigger function for desire 2 has been executed. Result: False
2024-11-04 10:15:05,258 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 10:15:05,258 - INFO - No desire has been triggered.
2024-11-04 10:15:05,258 - INFO - No desire triggered.
2024-11-04 10:15:07,137 - INFO - Desire added: 4. Desires:
Desire 1: The agent should aim to efficiently collect all the parcels, recharge energy when necessary, unlock doors using keys, and deliver the parcels to the delivery cells to maximize its score.
    Intention ID: [7]
    Executable: False
    Description: The short term goal is to have the agent move towards the parcel, pick it up and then move towards the delivery cell to deliver it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent'][1]['coordinates']
                    parcel_position = belief_set['parcels'][1]['coordinates']
                    delivery_position = [belief_set['map']['grid'][i]['cell_coordinates'] for
                        i in range(len(belief_set['map']['grid'])) if belief_set['map'][
                        'grid'][i]['cell_type'] == 'delivery_cell'][0]
                    while agent_position[0] != parcel_position[0]:
                        if agent_position[0] > parcel_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != parcel_position[1]:
                        if agent_position[1] > parcel_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_5()
                    while agent_position[0] != delivery_position[0]:
                        if agent_position[0] > delivery_position[0]:
                            function_1()
                            agent_position[0] -= 1
                        else:
                            function_2()
                            agent_position[0] += 1
                    while agent_position[1] != delivery_position[1]:
                        if agent_position[1] > delivery_position[1]:
                            function_3()
                            agent_position[1] -= 1
                        else:
                            function_4()
                            agent_position[1] += 1
                    function_6()
                
    Intention ID: [8]
    Executable: True
    Description: The agent's short term goal is to pick up any parcels available in its current location.
                def function_8():
                    global belief_set
                    parcels = belief_set['parcels']
                    agent = belief_set['agent'][1]
                    for parcel_id, parcel_info in parcels.items():
                        if parcel_info['coordinates'] == agent['coordinates'] and parcel_info[
                            'carried_by_id'] is None:
                            function_5()
                            break
                
    Intention ID: [9]
    Executable: False
    Description: The agent's short term goal is to move towards the cell where the parcels are located and pick them up.
                def function_9():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels.values():
                        if parcel['carried_by_id'] is None:
                            parcel_x, parcel_y = parcel['coordinates']
                            while agent['coordinates'][0] > parcel_x:
                                function_1()
                            while agent['coordinates'][0] < parcel_x:
                                function_2()
                            while agent['coordinates'][1] > parcel_y:
                                function_3()
                            while agent['coordinates'][1] < parcel_y:
                                function_4()
                            function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up and then move towards the nearest delivery cell to deliver the parcel.
                def function_10():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    delivery_cells = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    target_parcel = min(parcels.values(), key=lambda p: abs(p['coordinates'
                        ][0] - agent['coordinates'][0]) + abs(p['coordinates'][1] - agent[
                        'coordinates'][1]))
                    target_delivery_cell = min(delivery_cells, key=lambda c: abs(c[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(c[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'] != target_parcel['coordinates']:
                        if agent['coordinates'][0] < target_parcel['coordinates'][0]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_parcel['coordinates'][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_parcel['coordinates'][1]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_parcel['coordinates'][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_5()
                    while agent['coordinates'] != target_delivery_cell['cell_coordinates']:
                        if agent['coordinates'][0] < target_delivery_cell['cell_coordinates'][0
                            ]:
                            function_2()
                            agent['coordinates'][0] += 1
                        elif agent['coordinates'][0] > target_delivery_cell['cell_coordinates'
                            ][0]:
                            function_1()
                            agent['coordinates'][0] -= 1
                        if agent['coordinates'][1] < target_delivery_cell['cell_coordinates'][1
                            ]:
                            function_4()
                            agent['coordinates'][1] += 1
                        elif agent['coordinates'][1] > target_delivery_cell['cell_coordinates'
                            ][1]:
                            function_3()
                            agent['coordinates'][1] -= 1
                    function_6()
                
    Intention ID: [11]
    Executable: False
    Description: The short term goal of the agent is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel.
                def function_11():
                    global belief_set
                    while len(belief_set['parcels']) > 0:
                        function_10()
                        if belief_set['agent'][1]['energy'] < 30:
                            function_2()
                            function_2()
                            function_5()
                            function_1()
                            function_1()
                        function_6()
                
Executable: False
Trigger function:
def function_dtf_1(belief_set):
    if belief_set['parcels'] or belief_set['agent'][1]['energy'] < 25:
        return True
    else:
        return False



Desire 2: The agent should strategically conserve energy by planning minimal distance routes and avoid unnecessary movements, while also aiming to quickly find and hold keys to unlock doors when encountered.
    Intention ID: [12]
    Executable: False
    Description: The agent's short term goal is to move to the nearest battery, pick it up, recharge and then move towards the nearest key.
                def function_12():
                    global belief_set
                    coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][1]['coordinates']
                    while coordinates != battery_coordinates:
                        if coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif coordinates[1] > battery_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    coordinates = belief_set['agent'][1]['coordinates']
                    key_coordinates = belief_set['keys'][1]['coordinates']
                    while coordinates != key_coordinates:
                        if coordinates[0] < key_coordinates[0]:
                            function_2()
                        elif coordinates[0] > key_coordinates[0]:
                            function_1()
                        elif coordinates[1] < key_coordinates[1]:
                            function_4()
                        elif coordinates[1] > key_coordinates[1]:
                            function_3()
                        coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered.
                def function_13():
                    global belief_set
                    if belief_set['agent'][1]['has_key']:
                        function_10()
                    else:
                        function_8()
                    function_11()
                    if belief_set['map']['grid'][belief_set['agent'][1]['coordinates'][0]][
                        belief_set['agent'][1]['coordinates'][1]]['cell_type'] == 'door':
                        function_5()
                    if belief_set['agent'][1]['energy'] < 30:
                        function_1()
                        function_2()
                        function_3()
                        function_4()
                
    Intention ID: [14]
    Executable: False
    Description: The agent's short-term goal is to move towards the nearest parcel, if energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel, while also conserving energy and holding keys in case a door is encountered. If energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    if agent['energy'] < 30:
                        pass
                    else:
                        if agent['parcels_carried_ids']:
                            function_10()
                        else:
                            function_11()
                        pass
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent'][1]
    if agent['has_key'] and agent['energy'] > 50:
        return True
    if belief_set['doors'] and not agent['has_key'] and agent['energy'] > 50:
        return True
    return False



Desire 3: The agent should aim to learn and remember the layout of the environment, including the locations of obstacles, in order to optimize its path-finding. The agent should also prioritize actions that increase its score and energy level over actions that do not contribute to these goals.
    Intention ID: [15]
    Executable: False
    Description: The agent should navigate towards the nearest parcel if the energy levels permit, pick it up, and then move towards the nearest delivery cell to deliver the parcel. If the energy levels are low, the agent should move towards the nearest battery to recharge.
                def function_15():
                    global belief_set
                    if belief_set['agent'][1]['energy'] > 10:
                        function_10()
                    else:
                        function_14()
                
Executable: False
Trigger function:
None


Desire 4: The agent should focus on efficient parcel collection and delivery, ensuring it picks up parcels from spawn points and delivers them to the delivery cell as swiftly as possible, while also actively seeking batteries to maintain energy levels for uninterrupted operations.
Executable: False
Trigger function:
None



2024-11-04 10:15:20,203 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    parcel_coords = sorted(parcels.values(), key=lambda x: abs(x['coordinates'][0] - agent['coordinates'][0]) + abs(x['coordinates'][1] - agent['coordinates'][1]))[0]['coordinates']
    while agent['coordinates'] != parcel_coords:
        if agent['coordinates'][0] < parcel_coords[0]:
            function_2()
        elif agent['coordinates'][0] > parcel_coords[0]:
            function_1()
        if agent['coordinates'][1] < parcel_coords[1]:
            function_4()
        elif agent['coordinates'][1] > parcel_coords[1]:
            function_3()
    function_5()
    while agent['coordinates'] != delivery_cell['coordinates']:
        if agent['coordinates'][0] < delivery_cell['coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell['coordinates'][0]:
            function_1()
        if agent['coordinates'][1] < delivery_cell['coordinates'][1]:
            function_4()
        elif agent['coordinates'][1] > delivery_cell['coordinates'][1]:
            function_3()
    function_6()
2024-11-04 10:15:20,209 - INFO - The intention is valid.
2024-11-04 10:15:20,217 - INFO - Intention added to desire 4
2024-11-04 10:15:20,230 - INFO - Running intention 16 ...
2024-11-04 10:15:20,406 - INFO - Belief set thread started ...
2024-11-04 10:15:20,418 - INFO - Plan thread started ...
2024-11-04 10:15:20,437 - INFO - Started subprocess...
2024-11-04 10:15:20,437 - INFO - Belief set before intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 6}}, 'keys': {1: {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:15:20,754 - INFO - Executing action action_1 ...
2024-11-04 10:15:21,023 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 4}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-04 10:15:21,321 - INFO - Executing action action_3 ...
2024-11-04 10:15:21,589 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 2}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-04 10:15:21,914 - INFO - Executing action action_1 ...
2024-11-04 10:15:22,155 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:22,484 - INFO - Executing action action_3 ...
2024-11-04 10:15:22,721 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 10:15:23,016 - INFO - Executing action action_1 ...
2024-11-04 10:15:23,283 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:23,601 - INFO - Executing action action_3 ...
2024-11-04 10:15:23,819 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:24,149 - INFO - Executing action action_1 ...
2024-11-04 10:15:24,429 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:24,787 - INFO - Executing action action_3 ...
2024-11-04 10:15:25,029 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:25,347 - INFO - Executing action action_1 ...
2024-11-04 10:15:25,579 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:25,971 - INFO - Executing action action_3 ...
2024-11-04 10:15:26,239 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:26,595 - INFO - Executing action action_1 ...
2024-11-04 10:15:26,831 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:27,130 - INFO - Executing action action_3 ...
2024-11-04 10:15:27,379 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:27,661 - INFO - Executing action action_1 ...
2024-11-04 10:15:27,917 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:28,233 - INFO - Executing action action_3 ...
2024-11-04 10:15:28,463 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:28,774 - INFO - Executing action action_1 ...
2024-11-04 10:15:28,994 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:29,362 - INFO - Executing action action_3 ...
2024-11-04 10:15:29,573 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:29,915 - INFO - Executing action action_1 ...
2024-11-04 10:15:30,159 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:30,470 - INFO - Executing action action_3 ...
2024-11-04 10:15:30,774 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:31,168 - INFO - Executing action action_1 ...
2024-11-04 10:15:31,422 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:31,769 - INFO - Executing action action_3 ...
2024-11-04 10:15:32,011 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:32,322 - INFO - Executing action action_1 ...
2024-11-04 10:15:32,564 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:32,851 - INFO - Executing action action_3 ...
2024-11-04 10:15:33,062 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:33,399 - INFO - Executing action action_1 ...
2024-11-04 10:15:33,649 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:33,960 - INFO - Executing action action_3 ...
2024-11-04 10:15:34,210 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:34,557 - INFO - Executing action action_1 ...
2024-11-04 10:15:34,780 - INFO - Action action_1 executed. Events received: []
2024-11-04 10:15:35,213 - INFO - Executing action action_3 ...
2024-11-04 10:15:35,423 - INFO - Action action_3 executed. Events received: []
2024-11-04 10:15:35,473 - ERROR - Error during intention 16 execution. Intention 16 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 10:15:35,535 - INFO - Belief set thread terminated.
2024-11-04 10:15:35,685 - INFO - Plan thread terminated.
2024-11-04 10:15:35,735 - INFO - Intention 16 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3', 'action_1', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 4}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 2}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 0}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 10:15:35,735 - INFO - Belief set after intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 0}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:15:42,763 - INFO - Invalidating intention 16 ...
2024-11-04 10:16:01,284 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    batteries = belief_set['batteries']
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
    if agent['energy'] == 0:
        for battery in batteries.values():
            if agent['coordinates'] == battery['coordinates']:
                function_5()
                break
            else:
                if agent['coordinates'][0] < battery['coordinates'][0]:
                    function_2()
                elif agent['coordinates'][0] > battery['coordinates'][0]:
                    function_1()
                elif agent['coordinates'][1] < battery['coordinates'][1]:
                    function_4()
                elif agent['coordinates'][1] > battery['coordinates'][1]:
                    function_3()
    else:
        for parcel in parcels.values():
            if agent['coordinates'] == parcel['coordinates']:
                function_5()
                break
            else:
                if agent['coordinates'][0] < parcel['coordinates'][0]:
                    function_2()
                elif agent['coordinates'][0] > parcel['coordinates'][0]:
                    function_1()
                elif agent['coordinates'][1] < parcel['coordinates'][1]:
                    function_4()
                elif agent['coordinates'][1] > parcel['coordinates'][1]:
                    function_3()
        if agent['coordinates'] == delivery_cell:
            function_6()
        else:
            if agent['coordinates'][0] < delivery_cell[0]:
                function_2()
            elif agent['coordinates'][0] > delivery_cell[0]:
                function_1()
            elif agent['coordinates'][1] < delivery_cell[1]:
                function_4()
            elif agent['coordinates'][1] > delivery_cell[1]:
                function_3()

2024-11-04 10:16:01,323 - INFO - The intention is valid.
2024-11-04 10:16:01,343 - INFO - Intention added to desire 4
2024-11-04 10:16:01,368 - INFO - Running intention 17 ...
2024-11-04 10:16:01,536 - INFO - Belief set thread started ...
2024-11-04 10:16:01,548 - INFO - Plan thread started ...
2024-11-04 10:16:01,560 - INFO - Started subprocess...
2024-11-04 10:16:01,585 - INFO - Belief set before intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 0}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 18: {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 19: {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:16:01,912 - INFO - Executing action action_2 ...
2024-11-04 10:16:02,132 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:02,435 - INFO - Plan thread terminated.
2024-11-04 10:16:02,446 - INFO - Belief set thread terminated.
2024-11-04 10:16:02,509 - INFO - Intention 17 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[]]
2024-11-04 10:16:02,509 - INFO - Belief set after intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 0}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 18: {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 19: {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:16:07,441 - INFO - Invalidating intention 17 ...
2024-11-04 10:16:26,057 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    batteries_spawn_location = next(cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn')
    parcels_spawn_location = next(cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'parcels_spawn')
    delivery_location = next(cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell')
    while agent['energy'] <= 0:
        if agent['coordinates'][0] < batteries_spawn_location[0]:
            function_2()
        elif agent['coordinates'][0] > batteries_spawn_location[0]:
            function_1()
        elif agent['coordinates'][1] < batteries_spawn_location[1]:
            function_4()
        elif agent['coordinates'][1] > batteries_spawn_location[1]:
            function_3()
        function_5()
    while agent['coordinates'] != parcels_spawn_location:
        if agent['coordinates'][0] < parcels_spawn_location[0]:
            function_2()
        elif agent['coordinates'][0] > parcels_spawn_location[0]:
            function_1()
        elif agent['coordinates'][1] < parcels_spawn_location[1]:
            function_4()
        elif agent['coordinates'][1] > parcels_spawn_location[1]:
            function_3()
    function_5()
    while agent['coordinates'] != delivery_location:
        if agent['coordinates'][0] < delivery_location[0]:
            function_2()
        elif agent['coordinates'][0] > delivery_location[0]:
            function_1()
        elif agent['coordinates'][1] < delivery_location[1]:
            function_4()
        elif agent['coordinates'][1] > delivery_location[1]:
            function_3()
    function_6()
2024-11-04 10:16:26,060 - INFO - The intention is valid.
2024-11-04 10:16:26,066 - INFO - Intention added to desire 4
2024-11-04 10:16:26,066 - INFO - Running intention 18 ...
2024-11-04 10:16:26,068 - INFO - Belief set thread started ...
2024-11-04 10:16:26,068 - INFO - Plan thread started ...
2024-11-04 10:16:26,068 - INFO - Started subprocess...
2024-11-04 10:16:26,069 - INFO - Belief set before intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 0}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 18: {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 19: {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 20: {'id': 20, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:16:26,343 - INFO - Executing action action_2 ...
2024-11-04 10:16:26,549 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:26,802 - INFO - Executing action action_5 ...
2024-11-04 10:16:27,004 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:27,257 - INFO - Executing action action_2 ...
2024-11-04 10:16:27,463 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:27,693 - INFO - Executing action action_5 ...
2024-11-04 10:16:27,895 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:28,143 - INFO - Executing action action_2 ...
2024-11-04 10:16:28,344 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:28,599 - INFO - Executing action action_5 ...
2024-11-04 10:16:28,804 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:29,057 - INFO - Executing action action_2 ...
2024-11-04 10:16:29,263 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:29,515 - INFO - Executing action action_5 ...
2024-11-04 10:16:29,719 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:29,976 - INFO - Executing action action_2 ...
2024-11-04 10:16:30,180 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:30,434 - INFO - Executing action action_5 ...
2024-11-04 10:16:30,638 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:30,889 - INFO - Executing action action_2 ...
2024-11-04 10:16:31,095 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:31,347 - INFO - Executing action action_5 ...
2024-11-04 10:16:31,553 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:31,808 - INFO - Executing action action_2 ...
2024-11-04 10:16:32,013 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:32,264 - INFO - Executing action action_5 ...
2024-11-04 10:16:32,468 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:32,722 - INFO - Executing action action_2 ...
2024-11-04 10:16:32,926 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:33,177 - INFO - Executing action action_5 ...
2024-11-04 10:16:33,381 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:33,634 - INFO - Executing action action_2 ...
2024-11-04 10:16:33,840 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:34,093 - INFO - Executing action action_5 ...
2024-11-04 10:16:34,298 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:34,548 - INFO - Executing action action_2 ...
2024-11-04 10:16:34,753 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:35,005 - INFO - Executing action action_5 ...
2024-11-04 10:16:35,210 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:35,482 - INFO - Executing action action_2 ...
2024-11-04 10:16:35,687 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:35,918 - INFO - Executing action action_5 ...
2024-11-04 10:16:36,120 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:36,366 - INFO - Executing action action_2 ...
2024-11-04 10:16:36,569 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:36,820 - INFO - Executing action action_5 ...
2024-11-04 10:16:37,026 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:37,279 - INFO - Executing action action_2 ...
2024-11-04 10:16:37,482 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:37,731 - INFO - Executing action action_5 ...
2024-11-04 10:16:37,936 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:38,186 - INFO - Executing action action_2 ...
2024-11-04 10:16:38,388 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:38,644 - INFO - Executing action action_5 ...
2024-11-04 10:16:38,848 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:39,081 - INFO - Executing action action_2 ...
2024-11-04 10:16:39,286 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:39,539 - INFO - Executing action action_5 ...
2024-11-04 10:16:39,742 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:39,968 - INFO - Executing action action_2 ...
2024-11-04 10:16:40,174 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:40,431 - INFO - Executing action action_5 ...
2024-11-04 10:16:40,636 - INFO - Action action_5 executed. Events received: []
2024-11-04 10:16:40,887 - INFO - Executing action action_2 ...
2024-11-04 10:16:41,083 - ERROR - Error during intention 18 execution. Intention 18 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 10:16:41,091 - INFO - Action action_2 executed. Events received: []
2024-11-04 10:16:41,100 - INFO - Belief set thread terminated.
2024-11-04 10:16:41,315 - INFO - Plan thread terminated.
2024-11-04 10:16:41,316 - INFO - Intention 18 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2', 'action_5', 'action_2']. Events: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 10:16:41,316 - INFO - Belief set after intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 300, 'energy': 0}}, 'keys': {1: {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}, 'doors': {1: {'id': 1, 'coordinates': [0, 2]}, 2: {'id': 2, 'coordinates': [1, 2]}}, 'batteries': {2: {'id': 2, 'coordinates': [1, 0]}}, 'parcels': {16: {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 17: {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 18: {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 19: {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, 20: {'id': 20, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}}
2024-11-04 10:16:41,319 - INFO - Invalidating intention 18 ...
