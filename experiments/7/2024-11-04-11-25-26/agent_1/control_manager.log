2024-11-04 11:25:30,038 - INFO - Loading actions from agent_dir/actions.json ...
2024-11-04 11:25:30,107 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-11-04 11:26:08,011 - INFO - Checking if a desire has been triggered ...
Desires: Empty
2024-11-04 11:26:08,049 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 11:26:08,049 - INFO - No desire has been triggered.
2024-11-04 11:26:08,049 - INFO - No desire triggered.
2024-11-04 11:26:09,885 - INFO - Desire added: 1. Desires:
Desire 1: The agent's long term goal is to explore the entire map, identify all important locations (like spawn and delivery cells), and map the fastest routes between these locations while avoiding non-walkable cells.
Executable: False
Trigger function:
None



2024-11-04 11:26:18,503 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    map = belief_set['map']['grid']
    unvisited_cells = [cell for cell in map if cell['cell_type'] in ['parcels_spawn', 'batteries_spawn', 'delivery_cell'] and cell['cell_coordinates'] != agent['coordinates']]
    if not unvisited_cells:
        return
    nearest_cell = min(unvisited_cells, key=lambda cell: abs(cell['cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell['cell_coordinates'][1] - agent['coordinates'][1]))
    if nearest_cell['cell_coordinates'][0] < agent['coordinates'][0]:
        function_1()
    elif nearest_cell['cell_coordinates'][0] > agent['coordinates'][0]:
        function_2()
    elif nearest_cell['cell_coordinates'][1] < agent['coordinates'][1]:
        function_3()
    elif nearest_cell['cell_coordinates'][1] > agent['coordinates'][1]:
        function_4()
2024-11-04 11:26:18,503 - INFO - The intention is valid.
2024-11-04 11:26:18,516 - INFO - Intention added to desire 1
2024-11-04 11:26:18,516 - INFO - Running intention 7 ...
2024-11-04 11:26:18,653 - INFO - Belief set thread started ...
2024-11-04 11:26:18,659 - INFO - Plan thread started ...
2024-11-04 11:26:18,659 - INFO - Started subprocess...
2024-11-04 11:26:18,660 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:26:18,924 - INFO - Executing action action_3 ...
2024-11-04 11:26:19,180 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-04 11:26:19,493 - INFO - Plan thread terminated.
2024-11-04 11:26:19,505 - INFO - Belief set thread terminated.
2024-11-04 11:26:19,585 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]]
2024-11-04 11:26:19,598 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:26:25,762 - INFO - Testing intention 
def function():
    global belief_set
    agent_id = 1
    agent_position = belief_set['agent'][agent_id]['coordinates']
    parcels = [parcel for parcel in belief_set['parcels'] if parcel['carried_by_id'] == None and parcel['coordinates'] == agent_position]
    if parcels:
        function_5()
    else:
        function_7()
2024-11-04 11:26:25,798 - INFO - The intention is valid.
2024-11-04 11:26:25,811 - INFO - Intention added to desire 1
2024-11-04 11:26:25,811 - INFO - Running intention 8 ...
2024-11-04 11:26:26,016 - INFO - Belief set thread started ...
2024-11-04 11:26:26,022 - INFO - Plan thread started ...
2024-11-04 11:26:26,028 - INFO - Started subprocess...
2024-11-04 11:26:26,028 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:26:26,302 - INFO - Executing action action_1 ...
2024-11-04 11:26:26,526 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}]
2024-11-04 11:26:26,944 - INFO - Belief set thread terminated.
2024-11-04 11:26:26,982 - INFO - Plan thread terminated.
2024-11-04 11:26:26,982 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}]]
2024-11-04 11:26:26,982 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:26:31,221 - INFO - Invalidating intention 8 ...
2024-11-04 11:26:33,710 - INFO - Testing intention 
def function():
    global belief_set
    function_7()
    function_5()
2024-11-04 11:26:33,710 - INFO - The intention is valid.
2024-11-04 11:26:33,723 - INFO - Intention added to desire 1
2024-11-04 11:26:33,723 - INFO - Running intention 9 ...
2024-11-04 11:26:33,840 - INFO - Belief set thread started ...
2024-11-04 11:26:33,847 - INFO - Plan thread started ...
2024-11-04 11:26:33,847 - INFO - Started subprocess...
2024-11-04 11:26:33,847 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:26:34,190 - INFO - Executing action action_2 ...
2024-11-04 11:26:34,421 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 94}}]
2024-11-04 11:26:34,780 - INFO - Executing action action_5 ...
2024-11-04 11:26:35,015 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [1, 0]}}]
2024-11-04 11:26:35,309 - INFO - Plan thread terminated.
2024-11-04 11:26:35,309 - INFO - Belief set thread terminated.
2024-11-04 11:26:35,365 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 94}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [1, 0]}}]]
2024-11-04 11:26:35,365 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:26:41,815 - INFO - Invalidating intention 9 ...
2024-11-04 11:26:45,681 - INFO - Testing intention 
def function():
    global belief_set
    function_7()
    for cell in belief_set['map']['grid']:
        if cell['cell_coordinates'] == belief_set['agent'][1]['coordinates'] and 'spawn' in cell['cell_type']:
            function_5()
    return
2024-11-04 11:26:45,681 - INFO - The intention is valid.
2024-11-04 11:26:45,718 - INFO - Intention added to desire 1
2024-11-04 11:26:45,718 - INFO - Running intention 10 ...
2024-11-04 11:26:45,850 - INFO - Belief set thread started ...
2024-11-04 11:26:45,856 - INFO - Plan thread started ...
2024-11-04 11:26:45,875 - INFO - Started subprocess...
2024-11-04 11:26:45,925 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:26:46,271 - INFO - Executing action action_1 ...
2024-11-04 11:26:46,503 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-04 11:26:46,852 - INFO - Executing action action_5 ...
2024-11-04 11:26:47,076 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 96}}]
2024-11-04 11:26:47,467 - INFO - Plan thread terminated.
2024-11-04 11:26:47,498 - INFO - Belief set thread terminated.
2024-11-04 11:26:47,579 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 96}}]]
2024-11-04 11:26:47,579 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}]}
2024-11-04 11:26:52,269 - INFO - Invalidating intention 10 ...
2024-11-04 11:26:52,288 - INFO - Invalidating intention 1 ...
2024-11-04 11:26:52,288 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-04 11:26:52,295 - INFO - Invalidating intention 2 ...
2024-11-04 11:26:52,295 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-04 11:26:52,295 - INFO - Invalidating intention 3 ...
2024-11-04 11:26:52,295 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-04 11:26:52,301 - INFO - Invalidating intention 4 ...
2024-11-04 11:26:52,301 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-04 11:26:52,301 - INFO - Invalidating intention 5 ...
2024-11-04 11:26:52,301 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-04 11:26:52,301 - INFO - Invalidating intention 7 ...
2024-11-04 11:26:52,301 - INFO - Invalidating intention 8 ...
2024-11-04 11:26:52,301 - INFO - Invalidating intention 9 ...
2024-11-04 11:26:52,307 - INFO - Invalidating intention 10 ...
2024-11-04 11:26:56,150 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to explore the entire map, identify all important locations (like spawn and delivery cells), and map the fastest routes between these locations while avoiding non-walkable cells.
    Intention ID: [7]
    Executable: False
    Description: The agent's short term goal is to move one cell towards the nearest important location (like spawn and delivery cells) that has not been visited yet.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    map = belief_set['map']['grid']
                    unvisited_cells = [cell for cell in map if cell['cell_type'] in [
                        'parcels_spawn', 'batteries_spawn', 'delivery_cell'] and cell[
                        'cell_coordinates'] != agent['coordinates']]
                    if not unvisited_cells:
                        return
                    nearest_cell = min(unvisited_cells, key=lambda cell: abs(cell[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    if nearest_cell['cell_coordinates'][0] < agent['coordinates'][0]:
                        function_1()
                    elif nearest_cell['cell_coordinates'][0] > agent['coordinates'][0]:
                        function_2()
                    elif nearest_cell['cell_coordinates'][1] < agent['coordinates'][1]:
                        function_3()
                    elif nearest_cell['cell_coordinates'][1] > agent['coordinates'][1]:
                        function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location and pick up any uncollected parcel on the way.
                def function_8():
                    global belief_set
                    agent_id = 1
                    agent_position = belief_set['agent'][agent_id]['coordinates']
                    parcels = [parcel for parcel in belief_set['parcels'] if parcel[
                        'carried_by_id'] == None and parcel['coordinates'] == agent_position]
                    if parcels:
                        function_5()
                    else:
                        function_7()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest unvisited important location, such as spawn or delivery cells, and pick up any objects found in the cell.
                def function_9():
                    global belief_set
                    function_7()
                    function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location. If the agent encounters any pickups on the way, it should pick them up.
                def function_10():
                    global belief_set
                    function_7()
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == belief_set['agent'][1]['coordinates'
                            ] and 'spawn' in cell['cell_type']:
                            function_5()
                    return
                
Executable: False
Trigger function:
None



2024-11-04 11:26:56,150 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 11:26:56,150 - INFO - No desire has been triggered.
2024-11-04 11:26:56,151 - INFO - No desire triggered.
2024-11-04 11:26:58,484 - INFO - Desire added: 2. Desires:
Desire 1: The agent's long term goal is to explore the entire map, identify all important locations (like spawn and delivery cells), and map the fastest routes between these locations while avoiding non-walkable cells.
    Intention ID: [7]
    Executable: False
    Description: The agent's short term goal is to move one cell towards the nearest important location (like spawn and delivery cells) that has not been visited yet.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    map = belief_set['map']['grid']
                    unvisited_cells = [cell for cell in map if cell['cell_type'] in [
                        'parcels_spawn', 'batteries_spawn', 'delivery_cell'] and cell[
                        'cell_coordinates'] != agent['coordinates']]
                    if not unvisited_cells:
                        return
                    nearest_cell = min(unvisited_cells, key=lambda cell: abs(cell[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    if nearest_cell['cell_coordinates'][0] < agent['coordinates'][0]:
                        function_1()
                    elif nearest_cell['cell_coordinates'][0] > agent['coordinates'][0]:
                        function_2()
                    elif nearest_cell['cell_coordinates'][1] < agent['coordinates'][1]:
                        function_3()
                    elif nearest_cell['cell_coordinates'][1] > agent['coordinates'][1]:
                        function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location and pick up any uncollected parcel on the way.
                def function_8():
                    global belief_set
                    agent_id = 1
                    agent_position = belief_set['agent'][agent_id]['coordinates']
                    parcels = [parcel for parcel in belief_set['parcels'] if parcel[
                        'carried_by_id'] == None and parcel['coordinates'] == agent_position]
                    if parcels:
                        function_5()
                    else:
                        function_7()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest unvisited important location, such as spawn or delivery cells, and pick up any objects found in the cell.
                def function_9():
                    global belief_set
                    function_7()
                    function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location. If the agent encounters any pickups on the way, it should pick them up.
                def function_10():
                    global belief_set
                    function_7()
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == belief_set['agent'][1]['coordinates'
                            ] and 'spawn' in cell['cell_type']:
                            function_5()
                    return
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all the parcels, navigate through the grid avoiding non-walkable cells, pick up keys to unlock doors when necessary, recharge energy using batteries, and finally deliver all parcels to the delivery cell to maximize the score while maintaining sufficient energy.
Executable: False
Trigger function:
None



2024-11-04 11:27:09,960 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    key = belief_set['keys'][0]
    door = belief_set['doors'][0]
    while agent['coordinates'] != key['coordinates']:
        if agent['coordinates'][0] < key['coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > key['coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < key['coordinates'][1]:
            function_4()
        elif agent['coordinates'][1] > key['coordinates'][1]:
            function_3()
    function_5()
    while agent['coordinates'] != door['coordinates']:
        if agent['coordinates'][0] < door['coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > door['coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < door['coordinates'][1]:
            function_4()
        elif agent['coordinates'][1] > door['coordinates'][1]:
            function_3()
    function_5()
2024-11-04 11:27:09,979 - INFO - The intention is valid.
2024-11-04 11:27:10,005 - INFO - Intention added to desire 2
2024-11-04 11:27:10,005 - INFO - Running intention 11 ...
2024-11-04 11:27:10,203 - INFO - Belief set thread started ...
2024-11-04 11:27:10,222 - INFO - Plan thread started ...
2024-11-04 11:27:10,241 - INFO - Started subprocess...
2024-11-04 11:27:10,247 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 2, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:27:10,543 - INFO - Executing action action_4 ...
2024-11-04 11:27:10,760 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 94}}]
2024-11-04 11:27:11,054 - INFO - Executing action action_4 ...
2024-11-04 11:27:11,265 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:11,619 - INFO - Executing action action_4 ...
2024-11-04 11:27:11,839 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:12,151 - INFO - Executing action action_4 ...
2024-11-04 11:27:12,370 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:12,700 - INFO - Executing action action_4 ...
2024-11-04 11:27:12,936 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:13,224 - INFO - Executing action action_4 ...
2024-11-04 11:27:13,436 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:13,751 - INFO - Executing action action_4 ...
2024-11-04 11:27:14,013 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:14,294 - INFO - Executing action action_4 ...
2024-11-04 11:27:14,517 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:14,898 - INFO - Executing action action_4 ...
2024-11-04 11:27:15,117 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:15,429 - INFO - Executing action action_4 ...
2024-11-04 11:27:15,679 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:15,994 - INFO - Executing action action_4 ...
2024-11-04 11:27:16,213 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:16,526 - INFO - Executing action action_4 ...
2024-11-04 11:27:16,769 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:17,167 - INFO - Executing action action_4 ...
2024-11-04 11:27:17,398 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:17,699 - INFO - Executing action action_4 ...
2024-11-04 11:27:17,914 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:18,243 - INFO - Executing action action_4 ...
2024-11-04 11:27:18,461 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:18,798 - INFO - Executing action action_4 ...
2024-11-04 11:27:19,058 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:19,439 - INFO - Executing action action_4 ...
2024-11-04 11:27:19,644 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:19,962 - INFO - Executing action action_4 ...
2024-11-04 11:27:20,235 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:20,542 - INFO - Executing action action_4 ...
2024-11-04 11:27:20,772 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:21,242 - INFO - Executing action action_4 ...
2024-11-04 11:27:21,530 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:21,846 - INFO - Executing action action_4 ...
2024-11-04 11:27:22,052 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:22,360 - INFO - Executing action action_4 ...
2024-11-04 11:27:22,597 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:22,917 - INFO - Executing action action_4 ...
2024-11-04 11:27:23,168 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:23,493 - INFO - Executing action action_4 ...
2024-11-04 11:27:23,749 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:24,123 - INFO - Executing action action_4 ...
2024-11-04 11:27:24,345 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:24,659 - INFO - Executing action action_4 ...
2024-11-04 11:27:24,922 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:25,259 - INFO - Executing action action_4 ...
2024-11-04 11:27:25,290 - ERROR - Error during intention 11 execution. Intention 11 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 11:27:25,302 - INFO - Belief set thread terminated.
2024-11-04 11:27:25,489 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:25,765 - INFO - Plan thread terminated.
2024-11-04 11:27:25,813 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 94}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 11:27:25,826 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 94}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 2, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:27:32,200 - INFO - Invalidating intention 11 ...
2024-11-04 11:27:42,708 - INFO - Testing intention 
def function():
    global belief_set
    agent_coordinates = belief_set['agent'][1]['coordinates']
    battery_coordinates = belief_set['batteries'][0]['coordinates']
    delivery_coordinates = [i['cell_coordinates'] for i in belief_set['map']['grid'] if i['cell_type'] == 'delivery_cell'][0]
    while agent_coordinates != battery_coordinates:
        if agent_coordinates[0] < battery_coordinates[0]:
            function_2()
        elif agent_coordinates[0] > battery_coordinates[0]:
            function_1()
        elif agent_coordinates[1] < battery_coordinates[1]:
            function_4()
        elif agent_coordinates[1] > battery_coordinates[1]:
            function_3()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    function_5()
    while agent_coordinates != delivery_coordinates:
        if agent_coordinates[0] < delivery_coordinates[0]:
            function_2()
        elif agent_coordinates[0] > delivery_coordinates[0]:
            function_1()
        elif agent_coordinates[1] < delivery_coordinates[1]:
            function_4()
        elif agent_coordinates[1] > delivery_coordinates[1]:
            function_3()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    function_6()

2024-11-04 11:27:42,708 - INFO - The intention is valid.
2024-11-04 11:27:42,734 - INFO - Intention added to desire 2
2024-11-04 11:27:42,734 - INFO - Running intention 12 ...
2024-11-04 11:27:42,915 - INFO - Belief set thread started ...
2024-11-04 11:27:42,953 - INFO - Plan thread started ...
2024-11-04 11:27:42,953 - INFO - Started subprocess...
2024-11-04 11:27:42,966 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 94}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 2, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:27:43,333 - INFO - Executing action action_2 ...
2024-11-04 11:27:43,571 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 92}}]
2024-11-04 11:27:43,950 - INFO - Executing action action_3 ...
2024-11-04 11:27:44,192 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 90}}]
2024-11-04 11:27:44,572 - INFO - Executing action action_5 ...
2024-11-04 11:27:44,809 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 2, 'coordinates': [1, 0]}}]
2024-11-04 11:27:45,127 - INFO - Executing action action_4 ...
2024-11-04 11:27:45,379 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-04 11:27:45,711 - INFO - Executing action action_4 ...
2024-11-04 11:27:45,999 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:46,328 - INFO - Executing action action_4 ...
2024-11-04 11:27:46,546 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:46,869 - INFO - Executing action action_4 ...
2024-11-04 11:27:47,082 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:47,411 - INFO - Executing action action_4 ...
2024-11-04 11:27:47,649 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:47,985 - INFO - Executing action action_4 ...
2024-11-04 11:27:48,216 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:48,559 - INFO - Executing action action_4 ...
2024-11-04 11:27:48,788 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:49,153 - INFO - Executing action action_4 ...
2024-11-04 11:27:49,386 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:49,683 - INFO - Executing action action_4 ...
2024-11-04 11:27:49,919 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:50,213 - INFO - Executing action action_4 ...
2024-11-04 11:27:50,425 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:50,730 - INFO - Executing action action_4 ...
2024-11-04 11:27:50,988 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:51,382 - INFO - Executing action action_4 ...
2024-11-04 11:27:51,616 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:51,931 - INFO - Executing action action_4 ...
2024-11-04 11:27:52,154 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:52,424 - INFO - Executing action action_4 ...
2024-11-04 11:27:52,665 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:52,943 - INFO - Executing action action_4 ...
2024-11-04 11:27:53,180 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:53,505 - INFO - Executing action action_4 ...
2024-11-04 11:27:53,724 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:54,002 - INFO - Executing action action_4 ...
2024-11-04 11:27:54,228 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:54,535 - INFO - Executing action action_4 ...
2024-11-04 11:27:54,753 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:55,102 - INFO - Executing action action_4 ...
2024-11-04 11:27:55,328 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:55,621 - INFO - Executing action action_4 ...
2024-11-04 11:27:55,838 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:56,195 - INFO - Executing action action_4 ...
2024-11-04 11:27:56,449 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:56,775 - INFO - Executing action action_4 ...
2024-11-04 11:27:57,055 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:57,434 - INFO - Executing action action_4 ...
2024-11-04 11:27:57,639 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:58,008 - INFO - Executing action action_4 ...
2024-11-04 11:27:58,008 - ERROR - Error during intention 12 execution. Intention 12 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 11:27:58,043 - INFO - Belief set thread terminated.
2024-11-04 11:27:58,220 - INFO - Action action_4 executed. Events received: []
2024-11-04 11:27:58,559 - INFO - Plan thread terminated.
2024-11-04 11:27:58,597 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_3', 'action_5', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 92}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 2, 'coordinates': [1, 0]}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 98}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 11:27:58,641 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 98}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': [{'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:28:05,429 - INFO - Invalidating intention 12 ...
2024-11-04 11:28:29,701 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    batteries = belief_set['batteries']
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    max_movements = 10
    movement_count = 0
    while agent['coordinates'] != batteries[0]['coordinates'] and movement_count < max_movements:
        if agent['coordinates'][0] > batteries[0]['coordinates'][0] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent['coordinates'][1]]['cell_type'] != 'non_walkable':
            function_1()
        elif agent['coordinates'][0] < batteries[0]['coordinates'][0] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent['coordinates'][1]]['cell_type'] != 'non_walkable':
            function_2()
        elif agent['coordinates'][1] > batteries[0]['coordinates'][1] and belief_set['map']['grid'][agent['coordinates'][0]][agent['coordinates'][1] - 1]['cell_type'] != 'non_walkable':
            function_3()
        elif agent['coordinates'][1] < batteries[0]['coordinates'][1] and belief_set['map']['grid'][agent['coordinates'][0]][agent['coordinates'][1] + 1]['cell_type'] != 'non_walkable':
            function_4()
        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent['coordinates'][1] + i[1]]
        movement_count += 1
    if agent['coordinates'] == batteries[0]['coordinates']:
        function_5()
    while agent['coordinates'] != delivery_cell['cell_coordinates'] and movement_count < max_movements:
        if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent['coordinates'][1]]['cell_type'] != 'non_walkable':
            function_1()
        elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent['coordinates'][1]]['cell_type'] != 'non_walkable':
            function_2()
        elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1] and belief_set['map']['grid'][agent['coordinates'][0]][agent['coordinates'][1] - 1]['cell_type'] != 'non_walkable':
            function_3()
        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1] and belief_set['map']['grid'][agent['coordinates'][0]][agent['coordinates'][1] + 1]['cell_type'] != 'non_walkable':
            function_4()
        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent['coordinates'][1] + i[1]]
        movement_count += 1
    if agent['coordinates'] == delivery_cell['cell_coordinates']:
        function_6()
2024-11-04 11:28:29,746 - INFO - The intention is valid.
2024-11-04 11:28:29,761 - INFO - Intention added to desire 2
2024-11-04 11:28:29,773 - INFO - Running intention 13 ...
2024-11-04 11:28:29,986 - INFO - Belief set thread started ...
2024-11-04 11:28:30,005 - INFO - Plan thread started ...
2024-11-04 11:28:30,017 - INFO - Started subprocess...
2024-11-04 11:28:30,024 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 98}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:28:45,090 - ERROR - Error during intention 13 execution. Intention 13 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 11:28:45,140 - INFO - Plan thread terminated.
2024-11-04 11:28:45,158 - INFO - Belief set thread terminated.
2024-11-04 11:28:45,202 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-04 11:28:45,203 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 98}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:28:52,645 - INFO - Invalidating intention 13 ...
2024-11-04 11:28:52,645 - INFO - Invalidating intention 1 ...
2024-11-04 11:28:52,645 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-04 11:28:52,658 - INFO - Invalidating intention 2 ...
2024-11-04 11:28:52,658 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-04 11:28:52,658 - INFO - Invalidating intention 3 ...
2024-11-04 11:28:52,658 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-04 11:28:52,683 - INFO - Invalidating intention 4 ...
2024-11-04 11:28:52,696 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-04 11:28:52,696 - INFO - Invalidating intention 5 ...
2024-11-04 11:28:52,696 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-04 11:28:53,670 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to explore the entire map, identify all important locations (like spawn and delivery cells), and map the fastest routes between these locations while avoiding non-walkable cells.
    Intention ID: [7]
    Executable: False
    Description: The agent's short term goal is to move one cell towards the nearest important location (like spawn and delivery cells) that has not been visited yet.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    map = belief_set['map']['grid']
                    unvisited_cells = [cell for cell in map if cell['cell_type'] in [
                        'parcels_spawn', 'batteries_spawn', 'delivery_cell'] and cell[
                        'cell_coordinates'] != agent['coordinates']]
                    if not unvisited_cells:
                        return
                    nearest_cell = min(unvisited_cells, key=lambda cell: abs(cell[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    if nearest_cell['cell_coordinates'][0] < agent['coordinates'][0]:
                        function_1()
                    elif nearest_cell['cell_coordinates'][0] > agent['coordinates'][0]:
                        function_2()
                    elif nearest_cell['cell_coordinates'][1] < agent['coordinates'][1]:
                        function_3()
                    elif nearest_cell['cell_coordinates'][1] > agent['coordinates'][1]:
                        function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location and pick up any uncollected parcel on the way.
                def function_8():
                    global belief_set
                    agent_id = 1
                    agent_position = belief_set['agent'][agent_id]['coordinates']
                    parcels = [parcel for parcel in belief_set['parcels'] if parcel[
                        'carried_by_id'] == None and parcel['coordinates'] == agent_position]
                    if parcels:
                        function_5()
                    else:
                        function_7()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest unvisited important location, such as spawn or delivery cells, and pick up any objects found in the cell.
                def function_9():
                    global belief_set
                    function_7()
                    function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location. If the agent encounters any pickups on the way, it should pick them up.
                def function_10():
                    global belief_set
                    function_7()
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == belief_set['agent'][1]['coordinates'
                            ] and 'spawn' in cell['cell_type']:
                            function_5()
                    return
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all the parcels, navigate through the grid avoiding non-walkable cells, pick up keys to unlock doors when necessary, recharge energy using batteries, and finally deliver all parcels to the delivery cell to maximize the score while maintaining sufficient energy.
    Intention ID: [11]
    Executable: False
    Description: The agent's short term goal is to navigate towards the key, pick it up and then move towards the closest door to unlock it.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][0]
                    door = belief_set['doors'][0]
                    while agent['coordinates'] != key['coordinates']:
                        if agent['coordinates'][0] < key['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > key['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < key['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > key['coordinates'][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != door['coordinates']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                    function_5()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the closest battery, pick it up and then move towards the delivery cell to drop the parcels and increase the score.
                def function_12():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][0]['coordinates']
                    delivery_coordinates = [i['cell_coordinates'] for i in belief_set['map'
                        ]['grid'] if i['cell_type'] == 'delivery_cell'][0]
                    while agent_coordinates != battery_coordinates:
                        if agent_coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > battery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_coordinates != delivery_coordinates:
                        if agent_coordinates[0] < delivery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > delivery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < delivery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > delivery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_6()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the closest battery if the battery is reachable and not blocked by non-walkable cells, pick it up to recharge energy and then move towards the delivery cell to drop the parcels and increase the score. The agent should ensure that it's not stuck in an infinite loop by limiting the number of movements and check if the target cells are reachable.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    batteries = belief_set['batteries']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    max_movements = 10
                    movement_count = 0
                    while agent['coordinates'] != batteries[0]['coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == batteries[0]['coordinates']:
                        function_5()
                    while agent['coordinates'] != delivery_cell['cell_coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == delivery_cell['cell_coordinates']:
                        function_6()
                
Executable: False
Trigger function:
None



2024-11-04 11:28:53,683 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 11:28:53,695 - INFO - No desire has been triggered.
2024-11-04 11:28:53,708 - INFO - No desire triggered.
2024-11-04 11:28:55,329 - INFO - Desire added: 3. Desires:
Desire 1: The agent's long term goal is to explore the entire map, identify all important locations (like spawn and delivery cells), and map the fastest routes between these locations while avoiding non-walkable cells.
    Intention ID: [7]
    Executable: False
    Description: The agent's short term goal is to move one cell towards the nearest important location (like spawn and delivery cells) that has not been visited yet.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    map = belief_set['map']['grid']
                    unvisited_cells = [cell for cell in map if cell['cell_type'] in [
                        'parcels_spawn', 'batteries_spawn', 'delivery_cell'] and cell[
                        'cell_coordinates'] != agent['coordinates']]
                    if not unvisited_cells:
                        return
                    nearest_cell = min(unvisited_cells, key=lambda cell: abs(cell[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    if nearest_cell['cell_coordinates'][0] < agent['coordinates'][0]:
                        function_1()
                    elif nearest_cell['cell_coordinates'][0] > agent['coordinates'][0]:
                        function_2()
                    elif nearest_cell['cell_coordinates'][1] < agent['coordinates'][1]:
                        function_3()
                    elif nearest_cell['cell_coordinates'][1] > agent['coordinates'][1]:
                        function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location and pick up any uncollected parcel on the way.
                def function_8():
                    global belief_set
                    agent_id = 1
                    agent_position = belief_set['agent'][agent_id]['coordinates']
                    parcels = [parcel for parcel in belief_set['parcels'] if parcel[
                        'carried_by_id'] == None and parcel['coordinates'] == agent_position]
                    if parcels:
                        function_5()
                    else:
                        function_7()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest unvisited important location, such as spawn or delivery cells, and pick up any objects found in the cell.
                def function_9():
                    global belief_set
                    function_7()
                    function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location. If the agent encounters any pickups on the way, it should pick them up.
                def function_10():
                    global belief_set
                    function_7()
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == belief_set['agent'][1]['coordinates'
                            ] and 'spawn' in cell['cell_type']:
                            function_5()
                    return
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all the parcels, navigate through the grid avoiding non-walkable cells, pick up keys to unlock doors when necessary, recharge energy using batteries, and finally deliver all parcels to the delivery cell to maximize the score while maintaining sufficient energy.
    Intention ID: [11]
    Executable: False
    Description: The agent's short term goal is to navigate towards the key, pick it up and then move towards the closest door to unlock it.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][0]
                    door = belief_set['doors'][0]
                    while agent['coordinates'] != key['coordinates']:
                        if agent['coordinates'][0] < key['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > key['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < key['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > key['coordinates'][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != door['coordinates']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                    function_5()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the closest battery, pick it up and then move towards the delivery cell to drop the parcels and increase the score.
                def function_12():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][0]['coordinates']
                    delivery_coordinates = [i['cell_coordinates'] for i in belief_set['map'
                        ]['grid'] if i['cell_type'] == 'delivery_cell'][0]
                    while agent_coordinates != battery_coordinates:
                        if agent_coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > battery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_coordinates != delivery_coordinates:
                        if agent_coordinates[0] < delivery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > delivery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < delivery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > delivery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_6()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the closest battery if the battery is reachable and not blocked by non-walkable cells, pick it up to recharge energy and then move towards the delivery cell to drop the parcels and increase the score. The agent should ensure that it's not stuck in an infinite loop by limiting the number of movements and check if the target cells are reachable.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    batteries = belief_set['batteries']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    max_movements = 10
                    movement_count = 0
                    while agent['coordinates'] != batteries[0]['coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == batteries[0]['coordinates']:
                        function_5()
                    while agent['coordinates'] != delivery_cell['cell_coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == delivery_cell['cell_coordinates']:
                        function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect and deliver as many parcels as possible while maintaining a sufficient energy level by collecting batteries when needed.
Executable: False
Trigger function:
None



2024-11-04 11:29:02,576 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    for parcel in parcels:
        if parcel['carried_by_id'] is None:
            parcel_coords = parcel['coordinates']
            while agent['coordinates'] != parcel_coords:
                if agent['coordinates'][0] < parcel_coords[0]:
                    function_2()
                elif agent['coordinates'][0] > parcel_coords[0]:
                    function_1()
                elif agent['coordinates'][1] < parcel_coords[1]:
                    function_4()
                elif agent['coordinates'][1] > parcel_coords[1]:
                    function_3()
            function_5()
            break
2024-11-04 11:29:02,595 - INFO - The intention is valid.
2024-11-04 11:29:02,596 - INFO - Intention added to desire 3
2024-11-04 11:29:02,608 - INFO - Running intention 14 ...
2024-11-04 11:29:02,895 - INFO - Belief set thread started ...
2024-11-04 11:29:02,902 - INFO - Plan thread started ...
2024-11-04 11:29:02,920 - INFO - Started subprocess...
2024-11-04 11:29:02,983 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 98}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:29:03,308 - INFO - Executing action action_1 ...
2024-11-04 11:29:03,544 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:29:03,863 - INFO - Executing action action_1 ...
2024-11-04 11:29:04,081 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:04,407 - INFO - Executing action action_1 ...
2024-11-04 11:29:04,689 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:05,018 - INFO - Executing action action_1 ...
2024-11-04 11:29:05,286 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:05,573 - INFO - Executing action action_1 ...
2024-11-04 11:29:05,791 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:06,106 - INFO - Executing action action_1 ...
2024-11-04 11:29:06,336 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:06,646 - INFO - Executing action action_1 ...
2024-11-04 11:29:06,895 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:07,189 - INFO - Executing action action_1 ...
2024-11-04 11:29:07,446 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:07,731 - INFO - Executing action action_1 ...
2024-11-04 11:29:07,975 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:08,326 - INFO - Executing action action_1 ...
2024-11-04 11:29:08,565 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:08,956 - INFO - Executing action action_1 ...
2024-11-04 11:29:09,217 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:09,604 - INFO - Executing action action_1 ...
2024-11-04 11:29:09,846 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:10,214 - INFO - Executing action action_1 ...
2024-11-04 11:29:10,456 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:10,751 - INFO - Executing action action_1 ...
2024-11-04 11:29:10,996 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:11,296 - INFO - Executing action action_1 ...
2024-11-04 11:29:11,514 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:11,899 - INFO - Executing action action_1 ...
2024-11-04 11:29:12,174 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:12,505 - INFO - Executing action action_1 ...
2024-11-04 11:29:12,759 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:13,072 - INFO - Executing action action_1 ...
2024-11-04 11:29:13,295 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:13,646 - INFO - Executing action action_1 ...
2024-11-04 11:29:13,865 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:14,219 - INFO - Executing action action_1 ...
2024-11-04 11:29:14,432 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:14,901 - INFO - Executing action action_1 ...
2024-11-04 11:29:15,112 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:15,434 - INFO - Executing action action_1 ...
2024-11-04 11:29:15,678 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:16,044 - INFO - Executing action action_1 ...
2024-11-04 11:29:16,294 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:16,568 - INFO - Executing action action_1 ...
2024-11-04 11:29:16,776 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:17,127 - INFO - Executing action action_1 ...
2024-11-04 11:29:17,358 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:17,714 - INFO - Executing action action_1 ...
2024-11-04 11:29:17,982 - INFO - Action action_1 executed. Events received: []
2024-11-04 11:29:18,033 - ERROR - Error during intention 14 execution. Intention 14 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 11:29:18,076 - INFO - Belief set thread terminated.
2024-11-04 11:29:18,245 - INFO - Plan thread terminated.
2024-11-04 11:29:18,270 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 11:29:18,289 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:29:23,552 - INFO - Invalidating intention 14 ...
2024-11-04 11:29:33,242 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    map_grid = belief_set['map']['grid']
    max_iterations = belief_set['map']['width'] * belief_set['map']['height']
    iterations = 0
    while iterations < max_iterations:
        for parcel in parcels:
            if parcel['carried_by_id'] is None:
                parcel_coordinates = parcel['coordinates']
                for cell in map_grid:
                    if cell['cell_coordinates'] == parcel_coordinates and cell['cell_type'] == 'walkable':
                        if agent['coordinates'][0] < parcel_coordinates[0]:
                            function_2()
                        elif agent['coordinates'][0] > parcel_coordinates[0]:
                            function_1()
                        elif agent['coordinates'][1] < parcel_coordinates[1]:
                            function_4()
                        elif agent['coordinates'][1] > parcel_coordinates[1]:
                            function_3()
                        elif agent['coordinates'] == parcel_coordinates:
                            function_5()
                            return
        iterations += 1
2024-11-04 11:29:33,255 - INFO - The intention is valid.
2024-11-04 11:29:33,268 - INFO - Intention added to desire 3
2024-11-04 11:29:33,280 - INFO - Running intention 15 ...
2024-11-04 11:29:33,386 - INFO - Belief set thread started ...
2024-11-04 11:29:33,405 - INFO - Plan thread started ...
2024-11-04 11:29:33,417 - INFO - Started subprocess...
2024-11-04 11:29:33,418 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:29:33,763 - INFO - Belief set thread terminated.
2024-11-04 11:29:33,869 - INFO - Plan thread terminated.
2024-11-04 11:29:33,894 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: []. Events: []
2024-11-04 11:29:33,894 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:29:38,149 - INFO - Invalidating intention 15 ...
2024-11-04 11:29:54,309 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    parcels = belief_set['parcels']
    batteries = belief_set['batteries']
    
    # Find the nearest parcel
    nearest_parcel = min(parcels, key=lambda x: abs(x['coordinates'][0] - agent['coordinates'][0]) + abs(x['coordinates'][1] - agent['coordinates'][1]))
    
    # Move towards the nearest parcel
    while agent['coordinates'] != nearest_parcel['coordinates']:
        if agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
            function_4()
        else:
            function_3()
    
    # Collect the parcel
    function_5()
    
    # Check if energy is sufficient
    if agent['energy'] < 20:
        nearest_battery = min(batteries, key=lambda x: abs(x['coordinates'][0] - agent['coordinates'][0]) + abs(x['coordinates'][1] - agent['coordinates'][1]))
        
        # Move towards the nearest battery
        while agent['coordinates'] != nearest_battery['coordinates']:
            if agent['coordinates'][0] < nearest_battery['coordinates'][0]:
                function_2()
            elif agent['coordinates'][0] > nearest_battery['coordinates'][0]:
                function_1()
            elif agent['coordinates'][1] < nearest_battery['coordinates'][1]:
                function_4()
            else:
                function_3()
        
        # Collect the battery
        function_5()
2024-11-04 11:29:54,359 - INFO - The intention is valid.
2024-11-04 11:29:54,379 - INFO - Intention added to desire 3
2024-11-04 11:29:54,435 - INFO - Running intention 16 ...
2024-11-04 11:29:54,630 - INFO - Belief set thread started ...
2024-11-04 11:29:54,674 - INFO - Plan thread started ...
2024-11-04 11:29:54,680 - INFO - Started subprocess...
2024-11-04 11:29:54,680 - INFO - Belief set before intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': False, 'score': 0, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:29:54,957 - INFO - Executing action action_5 ...
2024-11-04 11:29:55,202 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': True, 'score': 0, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 11:29:55,552 - INFO - Plan thread terminated.
2024-11-04 11:29:55,571 - INFO - Belief set thread terminated.
2024-11-04 11:29:55,657 - INFO - Intention 16 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': True, 'score': 0, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]]
2024-11-04 11:29:55,657 - INFO - Belief set after intention 16 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': True, 'score': 0, 'energy': 94}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:30:02,310 - INFO - Invalidating intention 16 ...
2024-11-04 11:30:02,329 - INFO - Invalidating intention 1 ...
2024-11-04 11:30:02,329 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-04 11:30:02,341 - INFO - Invalidating intention 2 ...
2024-11-04 11:30:02,341 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-04 11:30:02,347 - INFO - Invalidating intention 3 ...
2024-11-04 11:30:02,347 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-04 11:30:02,353 - INFO - Invalidating intention 4 ...
2024-11-04 11:30:02,353 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-04 11:30:02,353 - INFO - Invalidating intention 5 ...
2024-11-04 11:30:02,353 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-04 11:30:03,825 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to explore the entire map, identify all important locations (like spawn and delivery cells), and map the fastest routes between these locations while avoiding non-walkable cells.
    Intention ID: [7]
    Executable: False
    Description: The agent's short term goal is to move one cell towards the nearest important location (like spawn and delivery cells) that has not been visited yet.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    map = belief_set['map']['grid']
                    unvisited_cells = [cell for cell in map if cell['cell_type'] in [
                        'parcels_spawn', 'batteries_spawn', 'delivery_cell'] and cell[
                        'cell_coordinates'] != agent['coordinates']]
                    if not unvisited_cells:
                        return
                    nearest_cell = min(unvisited_cells, key=lambda cell: abs(cell[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    if nearest_cell['cell_coordinates'][0] < agent['coordinates'][0]:
                        function_1()
                    elif nearest_cell['cell_coordinates'][0] > agent['coordinates'][0]:
                        function_2()
                    elif nearest_cell['cell_coordinates'][1] < agent['coordinates'][1]:
                        function_3()
                    elif nearest_cell['cell_coordinates'][1] > agent['coordinates'][1]:
                        function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location and pick up any uncollected parcel on the way.
                def function_8():
                    global belief_set
                    agent_id = 1
                    agent_position = belief_set['agent'][agent_id]['coordinates']
                    parcels = [parcel for parcel in belief_set['parcels'] if parcel[
                        'carried_by_id'] == None and parcel['coordinates'] == agent_position]
                    if parcels:
                        function_5()
                    else:
                        function_7()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest unvisited important location, such as spawn or delivery cells, and pick up any objects found in the cell.
                def function_9():
                    global belief_set
                    function_7()
                    function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location. If the agent encounters any pickups on the way, it should pick them up.
                def function_10():
                    global belief_set
                    function_7()
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == belief_set['agent'][1]['coordinates'
                            ] and 'spawn' in cell['cell_type']:
                            function_5()
                    return
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all the parcels, navigate through the grid avoiding non-walkable cells, pick up keys to unlock doors when necessary, recharge energy using batteries, and finally deliver all parcels to the delivery cell to maximize the score while maintaining sufficient energy.
    Intention ID: [11]
    Executable: False
    Description: The agent's short term goal is to navigate towards the key, pick it up and then move towards the closest door to unlock it.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][0]
                    door = belief_set['doors'][0]
                    while agent['coordinates'] != key['coordinates']:
                        if agent['coordinates'][0] < key['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > key['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < key['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > key['coordinates'][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != door['coordinates']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                    function_5()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the closest battery, pick it up and then move towards the delivery cell to drop the parcels and increase the score.
                def function_12():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][0]['coordinates']
                    delivery_coordinates = [i['cell_coordinates'] for i in belief_set['map'
                        ]['grid'] if i['cell_type'] == 'delivery_cell'][0]
                    while agent_coordinates != battery_coordinates:
                        if agent_coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > battery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_coordinates != delivery_coordinates:
                        if agent_coordinates[0] < delivery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > delivery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < delivery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > delivery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_6()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the closest battery if the battery is reachable and not blocked by non-walkable cells, pick it up to recharge energy and then move towards the delivery cell to drop the parcels and increase the score. The agent should ensure that it's not stuck in an infinite loop by limiting the number of movements and check if the target cells are reachable.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    batteries = belief_set['batteries']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    max_movements = 10
                    movement_count = 0
                    while agent['coordinates'] != batteries[0]['coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == batteries[0]['coordinates']:
                        function_5()
                    while agent['coordinates'] != delivery_cell['cell_coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == delivery_cell['cell_coordinates']:
                        function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect and deliver as many parcels as possible while maintaining a sufficient energy level by collecting batteries when needed.
    Intention ID: [14]
    Executable: False
    Description: The agent's short term goal is to find and pick up a parcel if there is one in its vicinity. The agent will move towards the parcel, pick it up and increase its score.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels:
                        if parcel['carried_by_id'] is None:
                            parcel_coords = parcel['coordinates']
                            while agent['coordinates'] != parcel_coords:
                                if agent['coordinates'][0] < parcel_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > parcel_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < parcel_coords[1]:
                                    function_4()
                                elif agent['coordinates'][1] > parcel_coords[1]:
                                    function_3()
                            function_5()
                            break
                
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, if it's reachable, and collect it. If the parcel is not reachable or there is no parcel in its vicinity, the agent will break the loop and stop moving.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_grid = belief_set['map']['grid']
                    max_iterations = belief_set['map']['width'] * belief_set['map']['height']
                    iterations = 0
                    while iterations < max_iterations:
                        for parcel in parcels:
                            if parcel['carried_by_id'] is None:
                                parcel_coordinates = parcel['coordinates']
                                for cell in map_grid:
                                    if cell['cell_coordinates'] == parcel_coordinates and cell[
                                        'cell_type'] == 'walkable':
                                        if agent['coordinates'][0] < parcel_coordinates[0]:
                                            function_2()
                                        elif agent['coordinates'][0] > parcel_coordinates[0]:
                                            function_1()
                                        elif agent['coordinates'][1] < parcel_coordinates[1]:
                                            function_4()
                                        elif agent['coordinates'][1] > parcel_coordinates[1]:
                                            function_3()
                                        elif agent['coordinates'] == parcel_coordinates:
                                            function_5()
                                            return
                        iterations += 1
                
    Intention ID: [16]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel on the map, collect it, and then check if the energy level is sufficient. If not, the agent should move towards the nearest battery and collect it as well.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    batteries = belief_set['batteries']
                    nearest_parcel = min(parcels, key=lambda x: abs(x['coordinates'][0] -
                        agent['coordinates'][0]) + abs(x['coordinates'][1] - agent[
                        'coordinates'][1]))
                    while agent['coordinates'] != nearest_parcel['coordinates']:
                        if agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_5()
                    if agent['energy'] < 20:
                        nearest_battery = min(batteries, key=lambda x: abs(x['coordinates']
                            [0] - agent['coordinates'][0]) + abs(x['coordinates'][1] -
                            agent['coordinates'][1]))
                        while agent['coordinates'] != nearest_battery['coordinates']:
                            if agent['coordinates'][0] < nearest_battery['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > nearest_battery['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < nearest_battery['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        function_5()
                
Executable: False
Trigger function:
None



2024-11-04 11:30:03,826 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 11:30:03,851 - INFO - No desire has been triggered.
2024-11-04 11:30:03,851 - INFO - No desire triggered.
2024-11-04 11:30:05,806 - INFO - Desire added: 4. Desires:
Desire 1: The agent's long term goal is to explore the entire map, identify all important locations (like spawn and delivery cells), and map the fastest routes between these locations while avoiding non-walkable cells.
    Intention ID: [7]
    Executable: False
    Description: The agent's short term goal is to move one cell towards the nearest important location (like spawn and delivery cells) that has not been visited yet.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    map = belief_set['map']['grid']
                    unvisited_cells = [cell for cell in map if cell['cell_type'] in [
                        'parcels_spawn', 'batteries_spawn', 'delivery_cell'] and cell[
                        'cell_coordinates'] != agent['coordinates']]
                    if not unvisited_cells:
                        return
                    nearest_cell = min(unvisited_cells, key=lambda cell: abs(cell[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    if nearest_cell['cell_coordinates'][0] < agent['coordinates'][0]:
                        function_1()
                    elif nearest_cell['cell_coordinates'][0] > agent['coordinates'][0]:
                        function_2()
                    elif nearest_cell['cell_coordinates'][1] < agent['coordinates'][1]:
                        function_3()
                    elif nearest_cell['cell_coordinates'][1] > agent['coordinates'][1]:
                        function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location and pick up any uncollected parcel on the way.
                def function_8():
                    global belief_set
                    agent_id = 1
                    agent_position = belief_set['agent'][agent_id]['coordinates']
                    parcels = [parcel for parcel in belief_set['parcels'] if parcel[
                        'carried_by_id'] == None and parcel['coordinates'] == agent_position]
                    if parcels:
                        function_5()
                    else:
                        function_7()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest unvisited important location, such as spawn or delivery cells, and pick up any objects found in the cell.
                def function_9():
                    global belief_set
                    function_7()
                    function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location. If the agent encounters any pickups on the way, it should pick them up.
                def function_10():
                    global belief_set
                    function_7()
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == belief_set['agent'][1]['coordinates'
                            ] and 'spawn' in cell['cell_type']:
                            function_5()
                    return
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all the parcels, navigate through the grid avoiding non-walkable cells, pick up keys to unlock doors when necessary, recharge energy using batteries, and finally deliver all parcels to the delivery cell to maximize the score while maintaining sufficient energy.
    Intention ID: [11]
    Executable: False
    Description: The agent's short term goal is to navigate towards the key, pick it up and then move towards the closest door to unlock it.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][0]
                    door = belief_set['doors'][0]
                    while agent['coordinates'] != key['coordinates']:
                        if agent['coordinates'][0] < key['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > key['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < key['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > key['coordinates'][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != door['coordinates']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                    function_5()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the closest battery, pick it up and then move towards the delivery cell to drop the parcels and increase the score.
                def function_12():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][0]['coordinates']
                    delivery_coordinates = [i['cell_coordinates'] for i in belief_set['map'
                        ]['grid'] if i['cell_type'] == 'delivery_cell'][0]
                    while agent_coordinates != battery_coordinates:
                        if agent_coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > battery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_coordinates != delivery_coordinates:
                        if agent_coordinates[0] < delivery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > delivery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < delivery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > delivery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_6()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the closest battery if the battery is reachable and not blocked by non-walkable cells, pick it up to recharge energy and then move towards the delivery cell to drop the parcels and increase the score. The agent should ensure that it's not stuck in an infinite loop by limiting the number of movements and check if the target cells are reachable.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    batteries = belief_set['batteries']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    max_movements = 10
                    movement_count = 0
                    while agent['coordinates'] != batteries[0]['coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == batteries[0]['coordinates']:
                        function_5()
                    while agent['coordinates'] != delivery_cell['cell_coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == delivery_cell['cell_coordinates']:
                        function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect and deliver as many parcels as possible while maintaining a sufficient energy level by collecting batteries when needed.
    Intention ID: [14]
    Executable: False
    Description: The agent's short term goal is to find and pick up a parcel if there is one in its vicinity. The agent will move towards the parcel, pick it up and increase its score.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels:
                        if parcel['carried_by_id'] is None:
                            parcel_coords = parcel['coordinates']
                            while agent['coordinates'] != parcel_coords:
                                if agent['coordinates'][0] < parcel_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > parcel_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < parcel_coords[1]:
                                    function_4()
                                elif agent['coordinates'][1] > parcel_coords[1]:
                                    function_3()
                            function_5()
                            break
                
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, if it's reachable, and collect it. If the parcel is not reachable or there is no parcel in its vicinity, the agent will break the loop and stop moving.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_grid = belief_set['map']['grid']
                    max_iterations = belief_set['map']['width'] * belief_set['map']['height']
                    iterations = 0
                    while iterations < max_iterations:
                        for parcel in parcels:
                            if parcel['carried_by_id'] is None:
                                parcel_coordinates = parcel['coordinates']
                                for cell in map_grid:
                                    if cell['cell_coordinates'] == parcel_coordinates and cell[
                                        'cell_type'] == 'walkable':
                                        if agent['coordinates'][0] < parcel_coordinates[0]:
                                            function_2()
                                        elif agent['coordinates'][0] > parcel_coordinates[0]:
                                            function_1()
                                        elif agent['coordinates'][1] < parcel_coordinates[1]:
                                            function_4()
                                        elif agent['coordinates'][1] > parcel_coordinates[1]:
                                            function_3()
                                        elif agent['coordinates'] == parcel_coordinates:
                                            function_5()
                                            return
                        iterations += 1
                
    Intention ID: [16]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel on the map, collect it, and then check if the energy level is sufficient. If not, the agent should move towards the nearest battery and collect it as well.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    batteries = belief_set['batteries']
                    nearest_parcel = min(parcels, key=lambda x: abs(x['coordinates'][0] -
                        agent['coordinates'][0]) + abs(x['coordinates'][1] - agent[
                        'coordinates'][1]))
                    while agent['coordinates'] != nearest_parcel['coordinates']:
                        if agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_5()
                    if agent['energy'] < 20:
                        nearest_battery = min(batteries, key=lambda x: abs(x['coordinates']
                            [0] - agent['coordinates'][0]) + abs(x['coordinates'][1] -
                            agent['coordinates'][1]))
                        while agent['coordinates'] != nearest_battery['coordinates']:
                            if agent['coordinates'][0] < nearest_battery['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > nearest_battery['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < nearest_battery['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to collect all the parcels from the spawn point, deliver them to the delivery cell, and ensure that its energy level is maintained by regularly collecting batteries from the batteries spawn point.
Executable: False
Trigger function:
None



2024-11-04 11:30:13,895 - INFO - Testing intention 
def function():
    global belief_set
    # Find the coordinates of the parcel spawn point
    for cell in belief_set['map']['grid']:
        if cell['cell_type'] == 'parcels_spawn':
            parcel_spawn_coordinates = cell['cell_coordinates']
    # Find the current coordinates of the agent
    agent_coordinates = belief_set['agent'][1]['coordinates']
    # Navigate to the parcel spawn point
    while agent_coordinates != parcel_spawn_coordinates:
        if agent_coordinates[0] < parcel_spawn_coordinates[0]:
            function_2()
        elif agent_coordinates[0] > parcel_spawn_coordinates[0]:
            function_1()
        elif agent_coordinates[1] < parcel_spawn_coordinates[1]:
            function_4()
        elif agent_coordinates[1] > parcel_spawn_coordinates[1]:
            function_3()
        agent_coordinates = belief_set['agent'][1]['coordinates']
    # Pick up any parcels at the parcel spawn point
    function_5()
2024-11-04 11:30:13,901 - INFO - The intention is valid.
2024-11-04 11:30:13,908 - INFO - Intention added to desire 4
2024-11-04 11:30:13,921 - INFO - Running intention 17 ...
2024-11-04 11:30:14,045 - INFO - Belief set thread started ...
2024-11-04 11:30:14,051 - INFO - Plan thread started ...
2024-11-04 11:30:14,063 - INFO - Started subprocess...
2024-11-04 11:30:14,064 - INFO - Belief set before intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [1, 2, 3], 'has_key': True, 'score': 0, 'energy': 94}}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 1], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:30:14,364 - INFO - Executing action action_3 ...
2024-11-04 11:30:14,596 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': True, 'score': 0, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 11:30:14,957 - INFO - Executing action action_5 ...
2024-11-04 11:30:15,164 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:30:15,423 - INFO - Plan thread terminated.
2024-11-04 11:30:15,447 - INFO - Belief set thread terminated.
2024-11-04 11:30:15,466 - INFO - Intention 17 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3], 'has_key': True, 'score': 0, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}]]
2024-11-04 11:30:15,466 - INFO - Belief set after intention 17 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 90}}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}]}
2024-11-04 11:30:24,307 - INFO - Testing intention 
def function():
    global belief_set
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell']
    agent = belief_set['agent'][1]
    while agent['coordinates'] != delivery_cell[0]['cell_coordinates']:
        if agent['coordinates'][0] < delivery_cell[0]['cell_coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell[0]['cell_coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < delivery_cell[0]['cell_coordinates'][1]:
            function_4()
        elif agent['coordinates'][1] > delivery_cell[0]['cell_coordinates'][1]:
            function_3()
    function_6()

2024-11-04 11:30:24,319 - INFO - The intention is valid.
2024-11-04 11:30:24,326 - INFO - Intention added to desire 4
2024-11-04 11:30:24,351 - INFO - Running intention 18 ...
2024-11-04 11:30:24,566 - INFO - Belief set thread started ...
2024-11-04 11:30:24,577 - INFO - Plan thread started ...
2024-11-04 11:30:24,577 - INFO - Started subprocess...
2024-11-04 11:30:24,577 - INFO - Belief set before intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 90}}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 13, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:30:24,982 - INFO - Executing action action_2 ...
2024-11-04 11:30:25,220 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 11:30:25,561 - INFO - Executing action action_2 ...
2024-11-04 11:30:25,774 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:26,105 - INFO - Executing action action_2 ...
2024-11-04 11:30:26,372 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:26,696 - INFO - Executing action action_2 ...
2024-11-04 11:30:26,921 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:27,314 - INFO - Executing action action_2 ...
2024-11-04 11:30:27,597 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:27,922 - INFO - Executing action action_2 ...
2024-11-04 11:30:28,129 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:28,487 - INFO - Executing action action_2 ...
2024-11-04 11:30:28,712 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:29,005 - INFO - Executing action action_2 ...
2024-11-04 11:30:29,265 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:29,716 - INFO - Executing action action_2 ...
2024-11-04 11:30:29,923 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:30,285 - INFO - Executing action action_2 ...
2024-11-04 11:30:30,520 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:30,857 - INFO - Executing action action_2 ...
2024-11-04 11:30:31,106 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:31,473 - INFO - Executing action action_2 ...
2024-11-04 11:30:31,686 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:32,081 - INFO - Executing action action_2 ...
2024-11-04 11:30:32,292 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:32,649 - INFO - Executing action action_2 ...
2024-11-04 11:30:32,855 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:33,236 - INFO - Executing action action_2 ...
2024-11-04 11:30:33,509 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:33,907 - INFO - Executing action action_2 ...
2024-11-04 11:30:34,140 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:34,482 - INFO - Executing action action_2 ...
2024-11-04 11:30:34,712 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:35,026 - INFO - Executing action action_2 ...
2024-11-04 11:30:35,271 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:35,570 - INFO - Executing action action_2 ...
2024-11-04 11:30:35,808 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:36,191 - INFO - Executing action action_2 ...
2024-11-04 11:30:36,421 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:36,708 - INFO - Executing action action_2 ...
2024-11-04 11:30:36,914 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:37,237 - INFO - Executing action action_2 ...
2024-11-04 11:30:37,455 - INFO - Action action_2 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-04 11:30:37,806 - INFO - Executing action action_2 ...
2024-11-04 11:30:38,042 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:38,372 - INFO - Executing action action_2 ...
2024-11-04 11:30:38,628 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:38,934 - INFO - Executing action action_2 ...
2024-11-04 11:30:39,153 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:39,488 - INFO - Executing action action_2 ...
2024-11-04 11:30:39,707 - ERROR - Error during intention 18 execution. Intention 18 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 11:30:39,713 - INFO - Action action_2 executed. Events received: []
2024-11-04 11:30:39,817 - INFO - Belief set thread terminated.
2024-11-04 11:30:40,049 - INFO - Plan thread terminated.
2024-11-04 11:30:40,050 - INFO - Intention 18 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2', 'action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [], [], [], []]
2024-11-04 11:30:40,050 - INFO - Belief set after intention 18 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 88}}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 10, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:30:46,701 - INFO - Invalidating intention 18 ...
2024-11-04 11:30:54,500 - INFO - Testing intention 
def function():
    global belief_set
    MAX_ITERATIONS = 1000
    iteration = 0
    delivery_cell = [c['cell_coordinates'] for c in belief_set['map']['grid'] if c['cell_type'] == 'delivery_cell'][0]
    while belief_set['agent'][1]['coordinates'] != delivery_cell and iteration < MAX_ITERATIONS:
        x_diff = belief_set['agent'][1]['coordinates'][0] - delivery_cell[0]
        y_diff = belief_set['agent'][1]['coordinates'][1] - delivery_cell[1]
        if x_diff > 0:
            function_1()
        elif x_diff < 0:
            function_2()
        if y_diff > 0:
            function_3()
        elif y_diff < 0:
            function_4()
        iteration += 1
    function_6()
2024-11-04 11:30:54,500 - INFO - The intention is valid.
2024-11-04 11:30:54,519 - INFO - Intention added to desire 4
2024-11-04 11:30:54,519 - INFO - Running intention 19 ...
2024-11-04 11:30:54,757 - INFO - Belief set thread started ...
2024-11-04 11:30:54,776 - INFO - Plan thread started ...
2024-11-04 11:30:54,789 - INFO - Started subprocess...
2024-11-04 11:30:54,827 - INFO - Belief set before intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 88}}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 10, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 13, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:30:55,089 - INFO - Executing action action_4 ...
2024-11-04 11:30:55,381 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:30:55,744 - INFO - Executing action action_4 ...
2024-11-04 11:30:55,999 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 11:30:56,367 - INFO - Executing action action_4 ...
2024-11-04 11:30:56,580 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 11:30:56,952 - INFO - Executing action action_6 ...
2024-11-04 11:30:57,198 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 80}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:30:57,516 - INFO - Plan thread terminated.
2024-11-04 11:30:57,528 - INFO - Belief set thread terminated.
2024-11-04 11:30:57,572 - INFO - Intention 19 execution has finished. Threads and subprocess terminated. Plan: ['action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 13, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 'has_key': True, 'score': 0, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 80}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-04 11:30:57,591 - INFO - Belief set after intention 19 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 80}}, 'keys': [{'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:31:07,993 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent'][1]
    battery_spawn = next(cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn')
    while agent['coordinates'] != battery_spawn['cell_coordinates']:
        if agent['coordinates'][0] < battery_spawn['cell_coordinates'][0]:
            function_2()
        elif agent['coordinates'][0] > battery_spawn['cell_coordinates'][0]:
            function_1()
        elif agent['coordinates'][1] < battery_spawn['cell_coordinates'][1]:
            function_4()
        elif agent['coordinates'][1] > battery_spawn['cell_coordinates'][1]:
            function_3()
    function_5()
2024-11-04 11:31:08,018 - INFO - The intention is valid.
2024-11-04 11:31:08,038 - INFO - Intention added to desire 4
2024-11-04 11:31:08,038 - INFO - Running intention 20 ...
2024-11-04 11:31:08,226 - INFO - Belief set thread started ...
2024-11-04 11:31:08,232 - INFO - Plan thread started ...
2024-11-04 11:31:08,308 - INFO - Started subprocess...
2024-11-04 11:31:08,308 - INFO - Belief set before intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 80}}, 'keys': [{'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:31:08,647 - INFO - Executing action action_3 ...
2024-11-04 11:31:08,859 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 11:31:09,240 - INFO - Executing action action_3 ...
2024-11-04 11:31:09,522 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 76}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 11:31:09,825 - INFO - Executing action action_3 ...
2024-11-04 11:31:10,093 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 11:31:10,422 - INFO - Executing action action_3 ...
2024-11-04 11:31:10,634 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:11,014 - INFO - Executing action action_3 ...
2024-11-04 11:31:11,225 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:11,527 - INFO - Executing action action_3 ...
2024-11-04 11:31:11,732 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:12,039 - INFO - Executing action action_3 ...
2024-11-04 11:31:12,247 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:12,602 - INFO - Executing action action_3 ...
2024-11-04 11:31:12,857 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:13,190 - INFO - Executing action action_3 ...
2024-11-04 11:31:13,426 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:13,786 - INFO - Executing action action_3 ...
2024-11-04 11:31:14,035 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:14,405 - INFO - Executing action action_3 ...
2024-11-04 11:31:14,618 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:14,919 - INFO - Executing action action_3 ...
2024-11-04 11:31:15,135 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:15,477 - INFO - Executing action action_3 ...
2024-11-04 11:31:15,694 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:16,020 - INFO - Executing action action_3 ...
2024-11-04 11:31:16,283 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:16,601 - INFO - Executing action action_3 ...
2024-11-04 11:31:16,861 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:17,224 - INFO - Executing action action_3 ...
2024-11-04 11:31:17,456 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:17,789 - INFO - Executing action action_3 ...
2024-11-04 11:31:18,013 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:18,331 - INFO - Executing action action_3 ...
2024-11-04 11:31:18,567 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:19,002 - INFO - Executing action action_3 ...
2024-11-04 11:31:19,272 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:19,672 - INFO - Executing action action_3 ...
2024-11-04 11:31:19,897 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:20,202 - INFO - Executing action action_3 ...
2024-11-04 11:31:20,464 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:20,814 - INFO - Executing action action_3 ...
2024-11-04 11:31:21,027 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:21,372 - INFO - Executing action action_3 ...
2024-11-04 11:31:21,626 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:21,949 - INFO - Executing action action_3 ...
2024-11-04 11:31:22,185 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:22,552 - INFO - Executing action action_3 ...
2024-11-04 11:31:22,770 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:23,099 - INFO - Executing action action_3 ...
2024-11-04 11:31:23,305 - INFO - Action action_3 executed. Events received: []
2024-11-04 11:31:23,349 - ERROR - Error during intention 20 execution. Intention 20 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 11:31:23,355 - INFO - Belief set thread terminated.
2024-11-04 11:31:23,606 - INFO - Plan thread terminated.
2024-11-04 11:31:23,644 - INFO - Intention 20 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 76}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 11:31:23,656 - INFO - Belief set after intention 20 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 74}}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:31:29,540 - INFO - Invalidating intention 20 ...
2024-11-04 11:31:38,962 - INFO - Testing intention 
def function():
    global belief_set
    battery_spawn = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
    agent_pos = belief_set['agent'][1]['coordinates']
    
    while True:
        if agent_pos[0] > battery_spawn[0]:
            function_1()
        elif agent_pos[0] < battery_spawn[0]:
            function_2()
        elif agent_pos[1] > battery_spawn[1]:
            function_3()
        elif agent_pos[1] < battery_spawn[1]:
            function_4()
        
        agent_pos = belief_set['agent'][1]['coordinates']
        
        if agent_pos == battery_spawn:
            function_5()
            break
2024-11-04 11:31:38,988 - INFO - The intention is valid.
2024-11-04 11:31:38,995 - INFO - Intention added to desire 4
2024-11-04 11:31:39,002 - INFO - Running intention 21 ...
2024-11-04 11:31:39,227 - INFO - Belief set thread started ...
2024-11-04 11:31:39,233 - INFO - Plan thread started ...
2024-11-04 11:31:39,240 - INFO - Started subprocess...
2024-11-04 11:31:39,240 - INFO - Belief set before intention 21 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 74}}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 3, 'coordinates': [1, 0]}], 'parcels': [{'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:31:39,534 - INFO - Executing action action_5 ...
2024-11-04 11:31:39,802 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 3, 'coordinates': [1, 0]}}]
2024-11-04 11:31:40,188 - INFO - Plan thread terminated.
2024-11-04 11:31:40,195 - INFO - Belief set thread terminated.
2024-11-04 11:31:40,257 - INFO - Intention 21 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 3, 'coordinates': [1, 0]}}]]
2024-11-04 11:31:40,257 - INFO - Belief set after intention 21 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 100}}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': [{'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:31:48,005 - INFO - Testing intention 
def function():
    global belief_set
    while True:
        if belief_set['agent'][1]['energy'] < 50:
            function_21()
        elif len(belief_set['agent'][1]['parcels_carried_ids']) == 0:
            function_17()
        else:
            function_19()
2024-11-04 11:31:48,005 - INFO - The intention is valid.
2024-11-04 11:31:48,043 - INFO - Intention added to desire 4
2024-11-04 11:31:48,056 - INFO - Running intention 22 ...
2024-11-04 11:31:48,168 - INFO - Belief set thread started ...
2024-11-04 11:31:48,169 - INFO - Plan thread started ...
2024-11-04 11:31:48,188 - INFO - Started subprocess...
2024-11-04 11:31:48,188 - INFO - Belief set before intention 22 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 100}}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': [{'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 16, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 17, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 18, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:31:48,512 - INFO - Executing action action_1 ...
2024-11-04 11:31:48,719 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 98}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 11:31:49,029 - INFO - Executing action action_5 ...
2024-11-04 11:31:49,278 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:31:49,568 - INFO - Executing action action_2 ...
2024-11-04 11:31:49,795 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'has_key': True, 'score': 260, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 11:31:50,117 - INFO - Executing action action_4 ...
2024-11-04 11:31:50,343 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'has_key': True, 'score': 260, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 11:31:50,693 - INFO - Executing action action_4 ...
2024-11-04 11:31:50,936 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'has_key': True, 'score': 260, 'energy': 90}}]
2024-11-04 11:31:51,290 - INFO - Executing action action_4 ...
2024-11-04 11:31:51,498 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'has_key': True, 'score': 260, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 11:31:51,860 - INFO - Executing action action_6 ...
2024-11-04 11:31:52,136 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 86}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:31:52,499 - INFO - Executing action action_1 ...
2024-11-04 11:31:52,718 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-04 11:31:53,086 - INFO - Executing action action_3 ...
2024-11-04 11:31:53,324 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-04 11:31:53,643 - INFO - Executing action action_3 ...
2024-11-04 11:31:53,873 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 11:31:54,242 - INFO - Executing action action_3 ...
2024-11-04 11:31:54,469 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 11:31:54,764 - INFO - Executing action action_5 ...
2024-11-04 11:31:54,968 - INFO - Action action_5 executed. Events received: [{'event_type': 'object added', 'object_type': 'battery', 'object': {'id': 4, 'coordinates': [1, 0]}}]
2024-11-04 11:31:55,258 - INFO - Executing action action_5 ...
2024-11-04 11:31:55,478 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:31:55,822 - INFO - Executing action action_5 ...
2024-11-04 11:31:56,053 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:31:56,406 - INFO - Executing action action_5 ...
2024-11-04 11:31:56,631 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:31:56,972 - INFO - Executing action action_5 ...
2024-11-04 11:31:57,179 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:31:57,527 - INFO - Executing action action_5 ...
2024-11-04 11:31:57,764 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:31:58,095 - INFO - Executing action action_5 ...
2024-11-04 11:31:58,331 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:31:58,618 - INFO - Executing action action_5 ...
2024-11-04 11:31:58,830 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:31:59,186 - INFO - Executing action action_5 ...
2024-11-04 11:31:59,392 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [19], 'has_key': True, 'score': 360, 'energy': 76}}]
2024-11-04 11:31:59,715 - INFO - Executing action action_2 ...
2024-11-04 11:31:59,921 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [19], 'has_key': True, 'score': 360, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 11:32:00,237 - INFO - Executing action action_4 ...
2024-11-04 11:32:00,469 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [19], 'has_key': True, 'score': 360, 'energy': 72}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 11:32:00,874 - INFO - Executing action action_4 ...
2024-11-04 11:32:01,081 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [19], 'has_key': True, 'score': 360, 'energy': 70}}]
2024-11-04 11:32:01,370 - INFO - Executing action action_4 ...
2024-11-04 11:32:01,586 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:32:01,929 - INFO - Executing action action_6 ...
2024-11-04 11:32:02,197 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 66}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:32:02,527 - INFO - Executing action action_1 ...
2024-11-04 11:32:02,763 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 64}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-04 11:32:03,145 - INFO - Executing action action_3 ...
2024-11-04 11:32:03,268 - ERROR - Error during intention 22 execution. Intention 22 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 11:32:03,374 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 62}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-04 11:32:03,405 - INFO - Belief set thread terminated.
2024-11-04 11:32:03,643 - INFO - Plan thread terminated.
2024-11-04 11:32:03,643 - INFO - Intention 22 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_1', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 260, 'energy': 98}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'has_key': True, 'score': 260, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'has_key': True, 'score': 260, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'has_key': True, 'score': 260, 'energy': 90}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [14, 15, 16, 17, 18], 'has_key': True, 'score': 260, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 86}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 14, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 15, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 16, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 17, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 18, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 82}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 360, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object added', 'object_type': 'battery', 'object': {'id': 4, 'coordinates': [1, 0]}}], [], [], [], [], [], [], [], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [19], 'has_key': True, 'score': 360, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [19], 'has_key': True, 'score': 360, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [19], 'has_key': True, 'score': 360, 'energy': 72}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [19], 'has_key': True, 'score': 360, 'energy': 70}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 66}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 19, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 64}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 62}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]]
2024-11-04 11:32:03,643 - INFO - Belief set after intention 22 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 62}}, 'keys': [{'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 4, 'coordinates': [1, 0]}], 'parcels': []}
2024-11-04 11:32:13,858 - INFO - Invalidating intention 22 ...
2024-11-04 11:32:20,954 - INFO - Testing intention 
def function():
    global belief_set
    counter = 0
    while True:
        counter += 1
        if counter > 100: break
        if belief_set['agent'][1]['energy'] < 50:
            function_21()
            continue
        if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
            function_19()
        else:
            function_17()
2024-11-04 11:32:20,980 - INFO - The intention is valid.
2024-11-04 11:32:21,011 - INFO - Intention added to desire 4
2024-11-04 11:32:21,011 - INFO - Running intention 23 ...
2024-11-04 11:32:21,198 - INFO - Belief set thread started ...
2024-11-04 11:32:21,205 - INFO - Plan thread started ...
2024-11-04 11:32:21,217 - INFO - Started subprocess...
2024-11-04 11:32:21,291 - INFO - Belief set before intention 23 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 62}}, 'keys': [{'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 4, 'coordinates': [1, 0]}], 'parcels': [{'id': 20, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:32:21,653 - INFO - Executing action action_3 ...
2024-11-04 11:32:21,896 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 11:32:22,184 - INFO - Executing action action_3 ...
2024-11-04 11:32:22,391 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 58}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 11:32:22,757 - INFO - Executing action action_5 ...
2024-11-04 11:32:23,006 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 56}}]
2024-11-04 11:32:23,381 - INFO - Executing action action_2 ...
2024-11-04 11:32:23,641 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 54}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 11:32:23,989 - INFO - Executing action action_4 ...
2024-11-04 11:32:24,208 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 52}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 11:32:24,610 - INFO - Executing action action_4 ...
2024-11-04 11:32:24,841 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 50}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 11:32:25,134 - INFO - Executing action action_4 ...
2024-11-04 11:32:25,357 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 48}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 11:32:25,706 - INFO - Executing action action_6 ...
2024-11-04 11:32:25,969 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 46}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 11:32:26,337 - INFO - Executing action action_3 ...
2024-11-04 11:32:26,551 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 44}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 11:32:26,835 - INFO - Executing action action_3 ...
2024-11-04 11:32:27,054 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 42}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 11:32:27,371 - INFO - Executing action action_3 ...
2024-11-04 11:32:27,627 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 40}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 11:32:27,975 - INFO - Executing action action_5 ...
2024-11-04 11:32:28,218 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 4, 'coordinates': [1, 0]}}]
2024-11-04 11:32:28,547 - INFO - Executing action action_1 ...
2024-11-04 11:32:28,802 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 98}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 11:32:29,159 - INFO - Executing action action_5 ...
2024-11-04 11:32:29,388 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:29,707 - INFO - Executing action action_5 ...
2024-11-04 11:32:29,945 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:30,264 - INFO - Executing action action_5 ...
2024-11-04 11:32:30,484 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:30,828 - INFO - Executing action action_5 ...
2024-11-04 11:32:31,048 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:31,402 - INFO - Executing action action_5 ...
2024-11-04 11:32:31,634 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:31,926 - INFO - Executing action action_5 ...
2024-11-04 11:32:32,138 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:32,513 - INFO - Executing action action_5 ...
2024-11-04 11:32:32,739 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:33,050 - INFO - Executing action action_5 ...
2024-11-04 11:32:33,268 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:33,605 - INFO - Executing action action_5 ...
2024-11-04 11:32:33,817 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:34,149 - INFO - Executing action action_5 ...
2024-11-04 11:32:34,393 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:34,723 - INFO - Executing action action_5 ...
2024-11-04 11:32:34,930 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:35,267 - INFO - Executing action action_5 ...
2024-11-04 11:32:35,486 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:35,815 - INFO - Executing action action_5 ...
2024-11-04 11:32:36,045 - INFO - Action action_5 executed. Events received: []
2024-11-04 11:32:36,332 - ERROR - Error during intention 23 execution. Intention 23 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 11:32:36,332 - INFO - Belief set thread terminated.
2024-11-04 11:32:36,387 - INFO - Plan thread terminated.
2024-11-04 11:32:36,413 - INFO - Intention 23 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6', 'action_3', 'action_3', 'action_3', 'action_5', 'action_1', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 380, 'energy': 58}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 56}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 54}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 52}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 50}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [20], 'has_key': True, 'score': 380, 'energy': 48}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 46}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 20, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 44}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 42}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 40}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 4, 'coordinates': [1, 0]}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 98}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 11:32:36,413 - INFO - Belief set after intention 23 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 98}}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': []}
2024-11-04 11:32:42,005 - INFO - Invalidating intention 23 ...
2024-11-04 11:32:47,554 - INFO - Testing intention 
def function():
    global belief_set
    while True:
        if belief_set['agent'][1]['energy'] < 50:
            function_21()
        elif len(belief_set['agent'][1]['parcels_carried_ids']) == 0:
            function_17()
        else:
            function_19()
        if belief_set['agent'][1]['score'] == belief_set['agent'][1]['score']:
            break
2024-11-04 11:32:47,560 - INFO - The intention is valid.
2024-11-04 11:32:47,579 - INFO - Intention added to desire 4
2024-11-04 11:32:47,623 - INFO - Running intention 24 ...
2024-11-04 11:32:47,824 - INFO - Belief set thread started ...
2024-11-04 11:32:47,837 - INFO - Plan thread started ...
2024-11-04 11:32:47,843 - INFO - Started subprocess...
2024-11-04 11:32:47,843 - INFO - Belief set before intention 24 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 400, 'energy': 98}}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 5, 'coordinates': [1, 0]}], 'parcels': [{'id': 21, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 11:32:48,186 - INFO - Executing action action_5 ...
2024-11-04 11:32:48,414 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [21], 'has_key': True, 'score': 400, 'energy': 96}}]
2024-11-04 11:32:48,793 - INFO - Plan thread terminated.
2024-11-04 11:32:48,849 - INFO - Belief set thread terminated.
2024-11-04 11:32:48,881 - INFO - Intention 24 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 21, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [21], 'has_key': True, 'score': 400, 'energy': 96}}]]
2024-11-04 11:32:48,893 - INFO - Belief set after intention 24 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {1: {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [21], 'has_key': True, 'score': 400, 'energy': 96}}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 5, 'coordinates': [1, 0]}], 'parcels': [{'id': 21, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}]}
2024-11-04 11:32:53,868 - INFO - Invalidating intention 24 ...
2024-11-04 11:32:53,893 - INFO - Invalidating intention 1 ...
2024-11-04 11:32:53,893 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-04 11:32:53,893 - INFO - Invalidating intention 2 ...
2024-11-04 11:32:53,893 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-04 11:32:53,893 - INFO - Invalidating intention 3 ...
2024-11-04 11:32:53,893 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-04 11:32:53,893 - INFO - Invalidating intention 4 ...
2024-11-04 11:32:53,893 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-04 11:32:53,893 - INFO - Invalidating intention 5 ...
2024-11-04 11:32:53,906 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-04 11:32:53,918 - INFO - Invalidating intention 6 ...
2024-11-04 11:32:53,924 - INFO - Intention 6 is a base action. It cannot be invalidated.
2024-11-04 11:32:53,937 - INFO - Invalidating intention 17 ...
2024-11-04 11:32:53,937 - INFO - Invalidating intention 22 ...
2024-11-04 11:32:53,943 - INFO - Invalidating intention 23 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 24 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 19 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 22 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 23 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 24 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 21 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 22 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 23 ...
2024-11-04 11:32:53,956 - INFO - Invalidating intention 24 ...
2024-11-04 11:32:56,515 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent's long term goal is to explore the entire map, identify all important locations (like spawn and delivery cells), and map the fastest routes between these locations while avoiding non-walkable cells.
    Intention ID: [7]
    Executable: False
    Description: The agent's short term goal is to move one cell towards the nearest important location (like spawn and delivery cells) that has not been visited yet.
                def function_7():
                    global belief_set
                    agent = belief_set['agent'][1]
                    map = belief_set['map']['grid']
                    unvisited_cells = [cell for cell in map if cell['cell_type'] in [
                        'parcels_spawn', 'batteries_spawn', 'delivery_cell'] and cell[
                        'cell_coordinates'] != agent['coordinates']]
                    if not unvisited_cells:
                        return
                    nearest_cell = min(unvisited_cells, key=lambda cell: abs(cell[
                        'cell_coordinates'][0] - agent['coordinates'][0]) + abs(cell[
                        'cell_coordinates'][1] - agent['coordinates'][1]))
                    if nearest_cell['cell_coordinates'][0] < agent['coordinates'][0]:
                        function_1()
                    elif nearest_cell['cell_coordinates'][0] > agent['coordinates'][0]:
                        function_2()
                    elif nearest_cell['cell_coordinates'][1] < agent['coordinates'][1]:
                        function_3()
                    elif nearest_cell['cell_coordinates'][1] > agent['coordinates'][1]:
                        function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location and pick up any uncollected parcel on the way.
                def function_8():
                    global belief_set
                    agent_id = 1
                    agent_position = belief_set['agent'][agent_id]['coordinates']
                    parcels = [parcel for parcel in belief_set['parcels'] if parcel[
                        'carried_by_id'] == None and parcel['coordinates'] == agent_position]
                    if parcels:
                        function_5()
                    else:
                        function_7()
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is to move the agent towards the nearest unvisited important location, such as spawn or delivery cells, and pick up any objects found in the cell.
                def function_9():
                    global belief_set
                    function_7()
                    function_5()
                
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest unvisited important location. If the agent encounters any pickups on the way, it should pick them up.
                def function_10():
                    global belief_set
                    function_7()
                    for cell in belief_set['map']['grid']:
                        if cell['cell_coordinates'] == belief_set['agent'][1]['coordinates'
                            ] and 'spawn' in cell['cell_type']:
                            function_5()
                    return
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to collect all the parcels, navigate through the grid avoiding non-walkable cells, pick up keys to unlock doors when necessary, recharge energy using batteries, and finally deliver all parcels to the delivery cell to maximize the score while maintaining sufficient energy.
    Intention ID: [11]
    Executable: False
    Description: The agent's short term goal is to navigate towards the key, pick it up and then move towards the closest door to unlock it.
                def function_11():
                    global belief_set
                    agent = belief_set['agent'][1]
                    key = belief_set['keys'][0]
                    door = belief_set['doors'][0]
                    while agent['coordinates'] != key['coordinates']:
                        if agent['coordinates'][0] < key['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > key['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < key['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > key['coordinates'][1]:
                            function_3()
                    function_5()
                    while agent['coordinates'] != door['coordinates']:
                        if agent['coordinates'][0] < door['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > door['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < door['coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > door['coordinates'][1]:
                            function_3()
                    function_5()
                
    Intention ID: [12]
    Executable: False
    Description: The agent should move towards the closest battery, pick it up and then move towards the delivery cell to drop the parcels and increase the score.
                def function_12():
                    global belief_set
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    battery_coordinates = belief_set['batteries'][0]['coordinates']
                    delivery_coordinates = [i['cell_coordinates'] for i in belief_set['map'
                        ]['grid'] if i['cell_type'] == 'delivery_cell'][0]
                    while agent_coordinates != battery_coordinates:
                        if agent_coordinates[0] < battery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > battery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < battery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > battery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                    while agent_coordinates != delivery_coordinates:
                        if agent_coordinates[0] < delivery_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > delivery_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < delivery_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > delivery_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_6()
                
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to move towards the closest battery if the battery is reachable and not blocked by non-walkable cells, pick it up to recharge energy and then move towards the delivery cell to drop the parcels and increase the score. The agent should ensure that it's not stuck in an infinite loop by limiting the number of movements and check if the target cells are reachable.
                def function_13():
                    global belief_set
                    agent = belief_set['agent'][1]
                    batteries = belief_set['batteries']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]
                    max_movements = 10
                    movement_count = 0
                    while agent['coordinates'] != batteries[0]['coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < batteries[0]['coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < batteries[0]['coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == batteries[0]['coordinates']:
                        function_5()
                    while agent['coordinates'] != delivery_cell['cell_coordinates'
                        ] and movement_count < max_movements:
                        if agent['coordinates'][0] > delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] - 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_1()
                        elif agent['coordinates'][0] < delivery_cell['cell_coordinates'][0
                            ] and belief_set['map']['grid'][agent['coordinates'][0] + 1][agent
                            ['coordinates'][1]]['cell_type'] != 'non_walkable':
                            function_2()
                        elif agent['coordinates'][1] > delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] - 1]['cell_type'] != 'non_walkable':
                            function_3()
                        elif agent['coordinates'][1] < delivery_cell['cell_coordinates'][1
                            ] and belief_set['map']['grid'][agent['coordinates'][0]][agent[
                            'coordinates'][1] + 1]['cell_type'] != 'non_walkable':
                            function_4()
                        agent['coordinates'] = [agent['coordinates'][0] + i[0], agent[
                            'coordinates'][1] + i[1]]
                        movement_count += 1
                    if agent['coordinates'] == delivery_cell['cell_coordinates']:
                        function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect and deliver as many parcels as possible while maintaining a sufficient energy level by collecting batteries when needed.
    Intention ID: [14]
    Executable: False
    Description: The agent's short term goal is to find and pick up a parcel if there is one in its vicinity. The agent will move towards the parcel, pick it up and increase its score.
                def function_14():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    for parcel in parcels:
                        if parcel['carried_by_id'] is None:
                            parcel_coords = parcel['coordinates']
                            while agent['coordinates'] != parcel_coords:
                                if agent['coordinates'][0] < parcel_coords[0]:
                                    function_2()
                                elif agent['coordinates'][0] > parcel_coords[0]:
                                    function_1()
                                elif agent['coordinates'][1] < parcel_coords[1]:
                                    function_4()
                                elif agent['coordinates'][1] > parcel_coords[1]:
                                    function_3()
                            function_5()
                            break
                
    Intention ID: [15]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel, if it's reachable, and collect it. If the parcel is not reachable or there is no parcel in its vicinity, the agent will break the loop and stop moving.
                def function_15():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    map_grid = belief_set['map']['grid']
                    max_iterations = belief_set['map']['width'] * belief_set['map']['height']
                    iterations = 0
                    while iterations < max_iterations:
                        for parcel in parcels:
                            if parcel['carried_by_id'] is None:
                                parcel_coordinates = parcel['coordinates']
                                for cell in map_grid:
                                    if cell['cell_coordinates'] == parcel_coordinates and cell[
                                        'cell_type'] == 'walkable':
                                        if agent['coordinates'][0] < parcel_coordinates[0]:
                                            function_2()
                                        elif agent['coordinates'][0] > parcel_coordinates[0]:
                                            function_1()
                                        elif agent['coordinates'][1] < parcel_coordinates[1]:
                                            function_4()
                                        elif agent['coordinates'][1] > parcel_coordinates[1]:
                                            function_3()
                                        elif agent['coordinates'] == parcel_coordinates:
                                            function_5()
                                            return
                        iterations += 1
                
    Intention ID: [16]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest parcel on the map, collect it, and then check if the energy level is sufficient. If not, the agent should move towards the nearest battery and collect it as well.
                def function_16():
                    global belief_set
                    agent = belief_set['agent'][1]
                    parcels = belief_set['parcels']
                    batteries = belief_set['batteries']
                    nearest_parcel = min(parcels, key=lambda x: abs(x['coordinates'][0] -
                        agent['coordinates'][0]) + abs(x['coordinates'][1] - agent[
                        'coordinates'][1]))
                    while agent['coordinates'] != nearest_parcel['coordinates']:
                        if agent['coordinates'][0] < nearest_parcel['coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > nearest_parcel['coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < nearest_parcel['coordinates'][1]:
                            function_4()
                        else:
                            function_3()
                    function_5()
                    if agent['energy'] < 20:
                        nearest_battery = min(batteries, key=lambda x: abs(x['coordinates']
                            [0] - agent['coordinates'][0]) + abs(x['coordinates'][1] -
                            agent['coordinates'][1]))
                        while agent['coordinates'] != nearest_battery['coordinates']:
                            if agent['coordinates'][0] < nearest_battery['coordinates'][0]:
                                function_2()
                            elif agent['coordinates'][0] > nearest_battery['coordinates'][0]:
                                function_1()
                            elif agent['coordinates'][1] < nearest_battery['coordinates'][1]:
                                function_4()
                            else:
                                function_3()
                        function_5()
                
Executable: False
Trigger function:
None


Desire 4: The agent's long term goal is to collect all the parcels from the spawn point, deliver them to the delivery cell, and ensure that its energy level is maintained by regularly collecting batteries from the batteries spawn point.
    Intention ID: [17]
    Executable: False
    Description: The short term goal is to navigate the agent to the parcel spawn point and pick up any parcels it finds there.
                def function_17():
                    global belief_set
                    for cell in belief_set['map']['grid']:
                        if cell['cell_type'] == 'parcels_spawn':
                            parcel_spawn_coordinates = cell['cell_coordinates']
                    agent_coordinates = belief_set['agent'][1]['coordinates']
                    while agent_coordinates != parcel_spawn_coordinates:
                        if agent_coordinates[0] < parcel_spawn_coordinates[0]:
                            function_2()
                        elif agent_coordinates[0] > parcel_spawn_coordinates[0]:
                            function_1()
                        elif agent_coordinates[1] < parcel_spawn_coordinates[1]:
                            function_4()
                        elif agent_coordinates[1] > parcel_spawn_coordinates[1]:
                            function_3()
                        agent_coordinates = belief_set['agent'][1]['coordinates']
                    function_5()
                
    Intention ID: [18]
    Executable: False
    Description: The short term goal is to deliver the parcels the agent is currently carrying to the delivery cell.
                def function_18():
                    global belief_set
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell']
                    agent = belief_set['agent'][1]
                    while agent['coordinates'] != delivery_cell[0]['cell_coordinates']:
                        if agent['coordinates'][0] < delivery_cell[0]['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[0]['cell_coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[0]['cell_coordinates'][1]:
                            function_3()
                    function_6()
                
    Intention ID: [19]
    Executable: False
    Description: The short term goal is to navigate the agent to the delivery cell, avoiding any non-walkable cells, and deliver all the parcels it is carrying.
                def function_19():
                    global belief_set
                    MAX_ITERATIONS = 1000
                    iteration = 0
                    delivery_cell = [c['cell_coordinates'] for c in belief_set['map'][
                        'grid'] if c['cell_type'] == 'delivery_cell'][0]
                    while belief_set['agent'][1]['coordinates'
                        ] != delivery_cell and iteration < MAX_ITERATIONS:
                        x_diff = belief_set['agent'][1]['coordinates'][0] - delivery_cell[0]
                        y_diff = belief_set['agent'][1]['coordinates'][1] - delivery_cell[1]
                        if x_diff > 0:
                            function_1()
                        elif x_diff < 0:
                            function_2()
                        if y_diff > 0:
                            function_3()
                        elif y_diff < 0:
                            function_4()
                        iteration += 1
                    function_6()
                
    Intention ID: [20]
    Executable: False
    Description: The agent's short term goal is to navigate towards the battery spawn point and pick up any batteries it finds there, to ensure sufficient energy level is maintained for further operations.
                def function_20():
                    global belief_set
                    agent = belief_set['agent'][1]
                    battery_spawn = next(cell for cell in belief_set['map']['grid'] if cell
                        ['cell_type'] == 'batteries_spawn')
                    while agent['coordinates'] != battery_spawn['cell_coordinates']:
                        if agent['coordinates'][0] < battery_spawn['cell_coordinates'][0]:
                            function_2()
                        elif agent['coordinates'][0] > battery_spawn['cell_coordinates'][0]:
                            function_1()
                        elif agent['coordinates'][1] < battery_spawn['cell_coordinates'][1]:
                            function_4()
                        elif agent['coordinates'][1] > battery_spawn['cell_coordinates'][1]:
                            function_3()
                    function_5()
                
    Intention ID: [21]
    Executable: False
    Description: The short term goal is to navigate the agent to the battery spawn point, pick up any batteries it finds there to maintain its energy level, and to ensure the agent doesn't fall into an infinite loop of actions by including an appropriate exit condition.
                def function_21():
                    global belief_set
                    battery_spawn = [cell['cell_coordinates'] for cell in belief_set['map']
                        ['grid'] if cell['cell_type'] == 'batteries_spawn'][0]
                    agent_pos = belief_set['agent'][1]['coordinates']
                    while True:
                        if agent_pos[0] > battery_spawn[0]:
                            function_1()
                        elif agent_pos[0] < battery_spawn[0]:
                            function_2()
                        elif agent_pos[1] > battery_spawn[1]:
                            function_3()
                        elif agent_pos[1] < battery_spawn[1]:
                            function_4()
                        agent_pos = belief_set['agent'][1]['coordinates']
                        if agent_pos == battery_spawn:
                            function_5()
                            break
                
    Intention ID: [22]
    Executable: False
    Description: The short term goal is to navigate the agent to the parcels spawn point, pick up any parcels available there and then navigate to the delivery point to deliver the parcels. If the agent's energy level falls below 50, it will go to the batteries spawn point to recharge.
                def function_22():
                    global belief_set
                    while True:
                        if belief_set['agent'][1]['energy'] < 50:
                            function_21()
                        elif len(belief_set['agent'][1]['parcels_carried_ids']) == 0:
                            function_17()
                        else:
                            function_19()
                
    Intention ID: [23]
    Executable: False
    Description: The agent's short term goal is to collect parcels from the spawn point, deliver them to the delivery cell, and if its energy level drops below 50, it should collect batteries from the battery spawn point. The goal also includes a safety mechanism to prevent the agent from getting stuck in an infinite loop by limiting the number of consecutive actions.
                def function_23():
                    global belief_set
                    counter = 0
                    while True:
                        counter += 1
                        if counter > 100:
                            break
                        if belief_set['agent'][1]['energy'] < 50:
                            function_21()
                            continue
                        if len(belief_set['agent'][1]['parcels_carried_ids']) > 0:
                            function_19()
                        else:
                            function_17()
                
    Intention ID: [24]
    Executable: False
    Description: The short term goal is to navigate the agent to the parcel spawn point, collect a parcel, head towards the delivery cell to deliver the parcel, and if the energy level drops below 50, navigate to the battery spawn point to collect a battery. The goal also includes avoiding an infinite loop of actions.
                def function_24():
                    global belief_set
                    while True:
                        if belief_set['agent'][1]['energy'] < 50:
                            function_21()
                        elif len(belief_set['agent'][1]['parcels_carried_ids']) == 0:
                            function_17()
                        else:
                            function_19()
                        if belief_set['agent'][1]['score'] == belief_set['agent'][1]['score']:
                            break
                
Executable: False
Trigger function:
None



2024-11-04 11:32:56,522 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 11:32:56,522 - INFO - No desire has been triggered.
2024-11-04 11:32:56,522 - INFO - No desire triggered.
