2024-11-04 09:33:20,519 - INFO - Loading actions from agent_dir/actions.json ...
2024-11-04 09:33:20,544 - INFO - Actions loaded: 
[1]
Executable: True
Description: This is a wrapper function for action_1. The agent moves by 1 cell, decreasing its first coordinate by 1.
        def function_1():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_1\n')
                f.close()
            wait()
        
        
[2]
Executable: True
Description: This is a wrapper function for action_2. The agent moves by 1 cell, increasing its first coordinate by 1.
        def function_2():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_2\n')
                f.close()
            wait()
        
        
[3]
Executable: True
Description: This is a wrapper function for action_3. The agent moves by 1 cell, decreasing its second coordinate by 1.
        def function_3():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_3\n')
                f.close()
            wait()
        
        
[4]
Executable: True
Description: This is a wrapper function for action_4. The agent moves by 1 cell, increasing its second coordinate by 1.
        def function_4():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_4\n')
                f.close()
            wait()
        
        
[5]
Executable: True
Description: This is a wrapper function for action_5. The agent picks up the objects on the ground. The agent has to be in the same cell of the objects to pick them up.
        def function_5():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_5\n')
                f.close()
            wait()
        
        
[6]
Executable: True
Description: This is a wrapper function for action_6. The agent puts down all the objects it is carrying on the ground. The agent will put down the objects in the cell it is currently in.
        def function_6():
            with open('agent_dir/functions/agent_1/plan.txt', 'a') as f:
                f.write('action_6\n')
                f.close()
            wait()
        
        

2024-11-04 09:33:58,069 - INFO - Checking if a desire has been triggered ...
Desires: Empty
2024-11-04 09:33:58,076 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 09:33:58,082 - INFO - No desire has been triggered.
2024-11-04 09:33:58,095 - INFO - No desire triggered.
2024-11-04 09:33:59,928 - INFO - Desire added: 1. Desires:
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
Executable: False
Trigger function:
None



2024-11-04 09:34:10,144 - INFO - Testing intention 
def function():
    global belief_set
    agent_position = belief_set['agent']['coordinates']
    key_position = belief_set['keys'][0]['coordinates']
    while agent_position[0] != key_position[0]:
        if agent_position[0] > key_position[0]:
            function_1()
        else:
            function_2()
    while agent_position[1] != key_position[1]:
        if agent_position[1] > key_position[1]:
            function_3()
        else:
            function_4()
    function_5()
    door_position = belief_set['doors'][0]['coordinates']
    while agent_position[0] != door_position[0]:
        if agent_position[0] > door_position[0]:
            function_1()
        else:
            function_2()
    while agent_position[1] != door_position[1]:
        if agent_position[1] > door_position[1]:
            function_3()
        else:
            function_4()

2024-11-04 09:34:10,163 - INFO - The intention is valid.
2024-11-04 09:34:10,164 - INFO - Intention added to desire 1
2024-11-04 09:34:10,171 - INFO - Running intention 7 ...
2024-11-04 09:34:10,415 - INFO - Belief set thread started ...
2024-11-04 09:34:10,447 - INFO - Plan thread started ...
2024-11-04 09:34:10,472 - INFO - Started subprocess...
2024-11-04 09:34:10,472 - INFO - Belief set before intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 100}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:34:10,747 - INFO - Executing action action_1 ...
2024-11-04 09:34:10,959 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}]
2024-11-04 09:34:11,275 - INFO - Executing action action_1 ...
2024-11-04 09:34:11,501 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:11,798 - INFO - Executing action action_1 ...
2024-11-04 09:34:12,024 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:12,331 - INFO - Executing action action_1 ...
2024-11-04 09:34:12,586 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:12,934 - INFO - Executing action action_1 ...
2024-11-04 09:34:13,169 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:13,555 - INFO - Executing action action_1 ...
2024-11-04 09:34:13,779 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:14,059 - INFO - Executing action action_1 ...
2024-11-04 09:34:14,351 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:14,687 - INFO - Executing action action_1 ...
2024-11-04 09:34:14,947 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:15,248 - INFO - Executing action action_1 ...
2024-11-04 09:34:15,467 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:15,783 - INFO - Executing action action_1 ...
2024-11-04 09:34:16,002 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:16,324 - INFO - Executing action action_1 ...
2024-11-04 09:34:16,531 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:16,871 - INFO - Executing action action_1 ...
2024-11-04 09:34:17,088 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:17,517 - INFO - Executing action action_1 ...
2024-11-04 09:34:17,777 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:18,331 - INFO - Executing action action_1 ...
2024-11-04 09:34:18,569 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:18,911 - INFO - Executing action action_1 ...
2024-11-04 09:34:19,141 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:19,491 - INFO - Executing action action_1 ...
2024-11-04 09:34:19,733 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:20,081 - INFO - Executing action action_1 ...
2024-11-04 09:34:20,305 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:20,593 - INFO - Executing action action_1 ...
2024-11-04 09:34:20,829 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:21,133 - INFO - Executing action action_1 ...
2024-11-04 09:34:21,363 - INFO - Action action_1 executed. Events received: [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}]
2024-11-04 09:34:21,730 - INFO - Executing action action_1 ...
2024-11-04 09:34:21,951 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:22,368 - INFO - Executing action action_1 ...
2024-11-04 09:34:22,612 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:22,956 - INFO - Executing action action_1 ...
2024-11-04 09:34:23,203 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:23,550 - INFO - Executing action action_1 ...
2024-11-04 09:34:23,751 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:24,051 - INFO - Executing action action_1 ...
2024-11-04 09:34:24,301 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:24,651 - INFO - Executing action action_1 ...
2024-11-04 09:34:24,887 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:25,156 - INFO - Executing action action_1 ...
2024-11-04 09:34:25,379 - INFO - Action action_1 executed. Events received: []
2024-11-04 09:34:25,497 - ERROR - Error during intention 7 execution. Intention 7 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 09:34:25,573 - INFO - Belief set thread terminated.
2024-11-04 09:34:25,617 - INFO - Plan thread terminated.
2024-11-04 09:34:25,648 - INFO - Intention 7 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1', 'action_1']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [{'event_type': 'object added', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}}], [], [], [], [], [], [], []]
2024-11-04 09:34:25,661 - INFO - Belief set after intention 7 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:34:32,263 - INFO - Invalidating intention 7 ...
2024-11-04 09:34:46,754 - INFO - Testing intention 
def function():
    global belief_set
    target_key = belief_set['keys'][0]['coordinates']
    target_door = belief_set['doors'][0]['coordinates']
    agent_position = belief_set['agent']['coordinates']
    max_iterations = 1000  # to prevent infinite loop

    while agent_position != target_key and max_iterations > 0:
        if agent_position[0] < target_key[0]:
            function_2()
        elif agent_position[0] > target_key[0]:
            function_1()
        elif agent_position[1] < target_key[1]:
            function_4()
        elif agent_position[1] > target_key[1]:
            function_3()
        agent_position = belief_set['agent']['coordinates']  # update agent's position
        max_iterations -= 1

    function_5()  # pick up the key

    while agent_position != target_door and max_iterations > 0:
        if agent_position[0] < target_door[0]:
            function_2()
        elif agent_position[0] > target_door[0]:
            function_1()
        elif agent_position[1] < target_door[1]:
            function_4()
        elif agent_position[1] > target_door[1]:
            function_3()
        agent_position = belief_set['agent']['coordinates']  # update agent's position
        max_iterations -= 1
2024-11-04 09:34:46,780 - INFO - The intention is valid.
2024-11-04 09:34:46,793 - INFO - Intention added to desire 1
2024-11-04 09:34:46,819 - INFO - Running intention 8 ...
2024-11-04 09:34:46,949 - INFO - Belief set thread started ...
2024-11-04 09:34:46,956 - INFO - Plan thread started ...
2024-11-04 09:34:46,956 - INFO - Started subprocess...
2024-11-04 09:34:46,956 - INFO - Belief set before intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': False, 'score': 0, 'energy': 98}, 'keys': [{'id': 1, 'coordinates': [0, 1], 'carried_by_id': None}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:34:47,249 - INFO - Executing action action_5 ...
2024-11-04 09:34:47,462 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 96}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 09:34:47,744 - INFO - Executing action action_4 ...
2024-11-04 09:34:47,987 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]
2024-11-04 09:34:48,260 - INFO - Belief set thread terminated.
2024-11-04 09:34:48,278 - INFO - Plan thread terminated.
2024-11-04 09:34:48,304 - INFO - Intention 8 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_4']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 96}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 94}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}}]]
2024-11-04 09:34:48,304 - INFO - Belief set after intention 8 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 94}, 'keys': [{'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:34:54,306 - INFO - Invalidating intention 8 ...
2024-11-04 09:35:08,924 - INFO - Testing intention 
def function():
    global belief_set
    current_coordinates = belief_set['agent']['coordinates']
    doors = belief_set['doors']
    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][1] - current_coordinates[1]))['coordinates']
    while current_coordinates != nearest_door_coordinates:
        if nearest_door_coordinates[0] < current_coordinates[0]:
            function_1()
        elif nearest_door_coordinates[0] > current_coordinates[0]:
            function_2()
        elif nearest_door_coordinates[1] < current_coordinates[1]:
            function_3()
        else:
            function_4()
        current_coordinates = belief_set['agent']['coordinates']
    function_7()
    parcels = belief_set['parcels']
    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x['coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][1] - current_coordinates[1]))['coordinates']
    while current_coordinates != nearest_parcel_coordinates:
        if nearest_parcel_coordinates[0] < current_coordinates[0]:
            function_1()
        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
            function_2()
        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
            function_3()
        else:
            function_4()
        current_coordinates = belief_set['agent']['coordinates']
    function_5()
2024-11-04 09:35:08,937 - INFO - The intention is valid.
2024-11-04 09:35:08,938 - INFO - Intention added to desire 1
2024-11-04 09:35:08,938 - INFO - Running intention 9 ...
2024-11-04 09:35:09,114 - INFO - Belief set thread started ...
2024-11-04 09:35:09,120 - INFO - Plan thread started ...
2024-11-04 09:35:09,121 - INFO - Started subprocess...
2024-11-04 09:35:09,127 - INFO - Belief set before intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 94}, 'keys': [{'id': 1, 'coordinates': [0, 2], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:35:09,472 - INFO - Executing action action_5 ...
2024-11-04 09:35:09,690 - INFO - Action action_5 executed. Events received: []
2024-11-04 09:35:09,982 - INFO - Executing action action_3 ...
2024-11-04 09:35:10,189 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 09:35:10,470 - INFO - Executing action action_3 ...
2024-11-04 09:35:10,702 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 90}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 09:35:11,073 - INFO - Executing action action_5 ...
2024-11-04 09:35:11,287 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'has_key': True, 'score': 0, 'energy': 88}}]
2024-11-04 09:35:11,649 - INFO - Plan thread terminated.
2024-11-04 09:35:11,692 - INFO - Belief set thread terminated.
2024-11-04 09:35:11,724 - INFO - Intention 9 execution has finished. Threads and subprocess terminated. Plan: ['action_5', 'action_3', 'action_3', 'action_5']. Events: [[], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 0, 'energy': 90}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'has_key': True, 'score': 0, 'energy': 88}}]]
2024-11-04 09:35:11,724 - INFO - Belief set after intention 9 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'has_key': True, 'score': 0, 'energy': 88}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}]}
2024-11-04 09:35:17,576 - INFO - Invalidating intention 9 ...
2024-11-04 09:35:17,621 - INFO - Invalidating intention 1 ...
2024-11-04 09:35:17,633 - INFO - Intention 1 is a base action. It cannot be invalidated.
2024-11-04 09:35:17,633 - INFO - Invalidating intention 2 ...
2024-11-04 09:35:17,633 - INFO - Intention 2 is a base action. It cannot be invalidated.
2024-11-04 09:35:17,646 - INFO - Invalidating intention 3 ...
2024-11-04 09:35:17,646 - INFO - Intention 3 is a base action. It cannot be invalidated.
2024-11-04 09:35:17,646 - INFO - Invalidating intention 4 ...
2024-11-04 09:35:17,646 - INFO - Intention 4 is a base action. It cannot be invalidated.
2024-11-04 09:35:17,646 - INFO - Invalidating intention 5 ...
2024-11-04 09:35:17,646 - INFO - Intention 5 is a base action. It cannot be invalidated.
2024-11-04 09:35:20,267 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None



2024-11-04 09:35:20,267 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 09:35:20,267 - INFO - No desire has been triggered.
2024-11-04 09:35:20,267 - INFO - No desire triggered.
2024-11-04 09:35:22,009 - INFO - Desire added: 2. Desires:
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate through the environment, pick up all the parcels, and deliver them to the specified delivery cell while maintaining its energy level by collecting batteries as needed.
Executable: False
Trigger function:
None



2024-11-04 09:35:33,342 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]['cell_coordinates']
    if agent['parcels_carried_ids'] and agent['energy'] > 0:
        if agent['coordinates'][0] < delivery_cell[0]:
            function_2()
        elif agent['coordinates'][0] > delivery_cell[0]:
            function_1()
        elif agent['coordinates'][1] < delivery_cell[1]:
            function_4()
        elif agent['coordinates'][1] > delivery_cell[1]:
            function_3()

2024-11-04 09:35:33,355 - INFO - The intention is valid.
2024-11-04 09:35:33,356 - INFO - Intention added to desire 2
2024-11-04 09:35:33,361 - INFO - Running intention 10 ...
2024-11-04 09:35:33,561 - INFO - Belief set thread started ...
2024-11-04 09:35:33,561 - INFO - Plan thread started ...
2024-11-04 09:35:33,574 - INFO - Started subprocess...
2024-11-04 09:35:33,574 - INFO - Belief set before intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'has_key': True, 'score': 0, 'energy': 88}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:35:33,907 - INFO - Executing action action_2 ...
2024-11-04 09:35:34,127 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 09:35:34,449 - INFO - Belief set thread terminated.
2024-11-04 09:35:34,467 - INFO - Plan thread terminated.
2024-11-04 09:35:34,467 - INFO - Intention 10 execution has finished. Threads and subprocess terminated. Plan: ['action_2']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}]]
2024-11-04 09:35:34,468 - INFO - Belief set after intention 10 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'has_key': True, 'score': 0, 'energy': 86}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:35:39,167 - INFO - Invalidating intention 10 ...
2024-11-04 09:35:53,501 - INFO - Testing intention 
def function():
    global belief_set
    # Find the next parcel that is not being carried
    for parcel in belief_set['parcels']:
        if parcel['carried_by_id'] is None:
            target_coordinates = parcel['coordinates']
            break
    # Calculate the difference in coordinates between the agent and the target parcel
    x_diff = belief_set['agent']['coordinates'][0] - target_coordinates[0]
    y_diff = belief_set['agent']['coordinates'][1] - target_coordinates[1]
    # Navigate to the target parcel
    if x_diff > 0:
        for _ in range(x_diff):
            function_1()
    elif x_diff < 0:
        for _ in range(-x_diff):
            function_2()
    if y_diff > 0:
        for _ in range(y_diff):
            function_3()
    elif y_diff < 0:
        for _ in range(-y_diff):
            function_4()
    # Pick up the parcel
    function_5()

2024-11-04 09:35:53,526 - INFO - The intention is valid.
2024-11-04 09:35:53,539 - INFO - Intention added to desire 2
2024-11-04 09:35:53,558 - INFO - Running intention 11 ...
2024-11-04 09:35:53,684 - INFO - Belief set thread started ...
2024-11-04 09:35:53,709 - INFO - Plan thread started ...
2024-11-04 09:35:53,721 - INFO - Started subprocess...
2024-11-04 09:35:53,721 - INFO - Belief set before intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5], 'has_key': True, 'score': 0, 'energy': 86}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:35:53,993 - INFO - Executing action action_1 ...
2024-11-04 09:35:54,212 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 09:35:54,590 - INFO - Executing action action_5 ...
2024-11-04 09:35:54,818 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 82}}]
2024-11-04 09:35:55,130 - INFO - Belief set thread terminated.
2024-11-04 09:35:55,187 - INFO - Plan thread terminated.
2024-11-04 09:35:55,187 - INFO - Intention 11 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 82}}]]
2024-11-04 09:35:55,187 - INFO - Belief set after intention 11 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 82}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}]}
2024-11-04 09:36:03,916 - INFO - Testing intention 
def function():
    global belief_set
    delivery_cell = [cell['cell_coordinates'] for cell in belief_set['map']['grid'] if cell['cell_type'] == 'delivery_cell'][0]
    agent_coords = belief_set['agent']['coordinates']
    while agent_coords != delivery_cell:
        if agent_coords[0] < delivery_cell[0]:
            function_2()
        elif agent_coords[0] > delivery_cell[0]:
            function_1()
        elif agent_coords[1] < delivery_cell[1]:
            function_4()
        elif agent_coords[1] > delivery_cell[1]:
            function_3()
        agent_coords = belief_set['agent']['coordinates']
    function_6()
2024-11-04 09:36:03,917 - INFO - The intention is valid.
2024-11-04 09:36:03,923 - INFO - Intention added to desire 2
2024-11-04 09:36:03,924 - INFO - Running intention 12 ...
2024-11-04 09:36:04,087 - INFO - Belief set thread started ...
2024-11-04 09:36:04,093 - INFO - Plan thread started ...
2024-11-04 09:36:04,099 - INFO - Started subprocess...
2024-11-04 09:36:04,100 - INFO - Belief set before intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 82}, 'keys': [{'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 1, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 2, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 3, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 4, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 5, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 6, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 7, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}, {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:36:04,356 - INFO - Executing action action_2 ...
2024-11-04 09:36:04,626 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 09:36:04,921 - INFO - Executing action action_4 ...
2024-11-04 09:36:05,130 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 09:36:05,474 - INFO - Executing action action_4 ...
2024-11-04 09:36:05,705 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 76}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 09:36:06,072 - INFO - Executing action action_4 ...
2024-11-04 09:36:06,278 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 09:36:06,555 - INFO - Executing action action_6 ...
2024-11-04 09:36:06,776 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 72}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]
2024-11-04 09:36:07,107 - INFO - Plan thread terminated.
2024-11-04 09:36:07,126 - INFO - Belief set thread terminated.
2024-11-04 09:36:07,145 - INFO - Intention 12 execution has finished. Threads and subprocess terminated. Plan: ['action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [1, 2, 3, 4, 5, 6, 7], 'has_key': True, 'score': 0, 'energy': 76}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 72}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 1, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 2, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 3, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 4, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 5, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 6, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object removed', 'object_type': 'parcel', 'object': {'id': 7, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}]]
2024-11-04 09:36:07,145 - INFO - Belief set after intention 12 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 72}, 'keys': [{'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:36:14,185 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    parcels = belief_set['parcels']
    agent_energy = belief_set['agent']['energy']
    batteries = belief_set['batteries']
    if any(parcel['carried_by_id'] is None for parcel in parcels) and agent_energy > 0:
        return True
    elif any(battery['coordinates'] == belief_set['agent']['coordinates'] for battery in batteries) and agent_energy <= 20:
        return True
    else:
        return False
2024-11-04 09:36:14,185 - ERROR - Trigger function does not return the boolean True for the prior belief set.
2024-11-04 09:36:16,287 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate through the environment, pick up all the parcels, and deliver them to the specified delivery cell while maintaining its energy level by collecting batteries as needed.
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell by one cell if it is carrying parcels and the energy level allows it.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    if agent['parcels_carried_ids'] and agent['energy'] > 0:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to navigate to the next parcel that is not currently being carried and pick it up.
                def function_11():
                    global belief_set
                    for parcel in belief_set['parcels']:
                        if parcel['carried_by_id'] is None:
                            target_coordinates = parcel['coordinates']
                            break
                    x_diff = belief_set['agent']['coordinates'][0] - target_coordinates[0]
                    y_diff = belief_set['agent']['coordinates'][1] - target_coordinates[1]
                    if x_diff > 0:
                        for _ in range(x_diff):
                            function_1()
                    elif x_diff < 0:
                        for _ in range(-x_diff):
                            function_2()
                    if y_diff > 0:
                        for _ in range(y_diff):
                            function_3()
                    elif y_diff < 0:
                        for _ in range(-y_diff):
                            function_4()
                    function_5()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to deliver all the parcels it's currently carrying to the delivery cell.
                def function_12():
                    global belief_set
                    delivery_cell = [cell['cell_coordinates'] for cell in belief_set['map']
                        ['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coords = belief_set['agent']['coordinates']
                    while agent_coords != delivery_cell:
                        if agent_coords[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coords[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coords[1] < delivery_cell[1]:
                            function_4()
                        elif agent_coords[1] > delivery_cell[1]:
                            function_3()
                        agent_coords = belief_set['agent']['coordinates']
                    function_6()
                
Executable: False
Trigger function:
None



2024-11-04 09:36:16,312 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 09:36:16,325 - INFO - No desire has been triggered.
2024-11-04 09:36:16,325 - INFO - No desire triggered.
2024-11-04 09:36:17,816 - INFO - Desire added: 3. Desires:
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate through the environment, pick up all the parcels, and deliver them to the specified delivery cell while maintaining its energy level by collecting batteries as needed.
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell by one cell if it is carrying parcels and the energy level allows it.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    if agent['parcels_carried_ids'] and agent['energy'] > 0:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to navigate to the next parcel that is not currently being carried and pick it up.
                def function_11():
                    global belief_set
                    for parcel in belief_set['parcels']:
                        if parcel['carried_by_id'] is None:
                            target_coordinates = parcel['coordinates']
                            break
                    x_diff = belief_set['agent']['coordinates'][0] - target_coordinates[0]
                    y_diff = belief_set['agent']['coordinates'][1] - target_coordinates[1]
                    if x_diff > 0:
                        for _ in range(x_diff):
                            function_1()
                    elif x_diff < 0:
                        for _ in range(-x_diff):
                            function_2()
                    if y_diff > 0:
                        for _ in range(y_diff):
                            function_3()
                    elif y_diff < 0:
                        for _ in range(-y_diff):
                            function_4()
                    function_5()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to deliver all the parcels it's currently carrying to the delivery cell.
                def function_12():
                    global belief_set
                    delivery_cell = [cell['cell_coordinates'] for cell in belief_set['map']
                        ['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coords = belief_set['agent']['coordinates']
                    while agent_coords != delivery_cell:
                        if agent_coords[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coords[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coords[1] < delivery_cell[1]:
                            function_4()
                        elif agent_coords[1] > delivery_cell[1]:
                            function_3()
                        agent_coords = belief_set['agent']['coordinates']
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect all the batteries in the environment to ensure that it has enough energy to perform its tasks.
Executable: False
Trigger function:
None



2024-11-04 09:36:25,459 - INFO - Testing intention 
def function():
    global belief_set
    agent = belief_set['agent']
    batteries = belief_set['batteries']
    closest_battery = min(batteries, key=lambda battery: abs(battery['coordinates'][0] - agent['coordinates'][0]) + abs(battery['coordinates'][1] - agent['coordinates'][1]))
    while agent['coordinates'][0] < closest_battery['coordinates'][0]:
        function_2()
    while agent['coordinates'][0] > closest_battery['coordinates'][0]:
        function_1()
    while agent['coordinates'][1] < closest_battery['coordinates'][1]:
        function_4()
    while agent['coordinates'][1] > closest_battery['coordinates'][1]:
        function_3()
    function_5()
2024-11-04 09:36:25,472 - INFO - The intention is valid.
2024-11-04 09:36:25,490 - INFO - Intention added to desire 3
2024-11-04 09:36:25,490 - INFO - Running intention 13 ...
2024-11-04 09:36:25,683 - INFO - Belief set thread started ...
2024-11-04 09:36:25,690 - INFO - Plan thread started ...
2024-11-04 09:36:25,696 - INFO - Started subprocess...
2024-11-04 09:36:25,715 - INFO - Belief set before intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 72}, 'keys': [{'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:36:25,996 - INFO - Executing action action_3 ...
2024-11-04 09:36:26,247 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 70}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 09:36:26,585 - INFO - Executing action action_3 ...
2024-11-04 09:36:26,841 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 09:36:27,143 - INFO - Executing action action_3 ...
2024-11-04 09:36:27,344 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 66}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 09:36:27,655 - INFO - Executing action action_3 ...
2024-11-04 09:36:27,867 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:28,252 - INFO - Executing action action_3 ...
2024-11-04 09:36:28,457 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:28,804 - INFO - Executing action action_3 ...
2024-11-04 09:36:29,010 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:29,347 - INFO - Executing action action_3 ...
2024-11-04 09:36:29,590 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:29,907 - INFO - Executing action action_3 ...
2024-11-04 09:36:30,114 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:30,459 - INFO - Executing action action_3 ...
2024-11-04 09:36:30,683 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:31,037 - INFO - Executing action action_3 ...
2024-11-04 09:36:31,261 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:31,584 - INFO - Executing action action_3 ...
2024-11-04 09:36:31,802 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:32,163 - INFO - Executing action action_3 ...
2024-11-04 09:36:32,414 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:32,721 - INFO - Executing action action_3 ...
2024-11-04 09:36:32,952 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:33,266 - INFO - Executing action action_3 ...
2024-11-04 09:36:33,503 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:33,810 - INFO - Executing action action_3 ...
2024-11-04 09:36:34,023 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:34,341 - INFO - Executing action action_3 ...
2024-11-04 09:36:34,574 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:34,966 - INFO - Executing action action_3 ...
2024-11-04 09:36:35,172 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:35,459 - INFO - Executing action action_3 ...
2024-11-04 09:36:35,672 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:36,119 - INFO - Executing action action_3 ...
2024-11-04 09:36:36,329 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:36,643 - INFO - Executing action action_3 ...
2024-11-04 09:36:36,868 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:37,175 - INFO - Executing action action_3 ...
2024-11-04 09:36:37,399 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:37,722 - INFO - Executing action action_3 ...
2024-11-04 09:36:37,953 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:38,332 - INFO - Executing action action_3 ...
2024-11-04 09:36:38,564 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:38,876 - INFO - Executing action action_3 ...
2024-11-04 09:36:39,101 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:39,480 - INFO - Executing action action_3 ...
2024-11-04 09:36:39,693 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:40,042 - INFO - Executing action action_3 ...
2024-11-04 09:36:40,298 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:40,629 - INFO - Executing action action_3 ...
2024-11-04 09:36:40,760 - ERROR - Error during intention 13 execution. Intention 13 will be invalidated. Error: Command '['python3', 'agent_dir/functions/agent_1/functions.py']' timed out after 15 seconds
2024-11-04 09:36:40,834 - INFO - Belief set thread terminated.
2024-11-04 09:36:40,859 - INFO - Action action_3 executed. Events received: []
2024-11-04 09:36:41,146 - INFO - Plan thread terminated.
2024-11-04 09:36:41,176 - INFO - Intention 13 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3', 'action_3']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 70}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 66}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
2024-11-04 09:36:41,206 - INFO - Belief set after intention 13 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 66}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:36:47,132 - INFO - Invalidating intention 13 ...
2024-11-04 09:36:52,989 - INFO - Testing intention 
def function():
    global belief_set
    battery_coords = belief_set['batteries'][0]['coordinates']
    while belief_set['agent']['coordinates'] != battery_coords:
        if belief_set['agent']['coordinates'][0] < battery_coords[0]:
            function_2()
        elif belief_set['agent']['coordinates'][0] > battery_coords[0]:
            function_1()
        elif belief_set['agent']['coordinates'][1] < battery_coords[1]:
            function_4()
        elif belief_set['agent']['coordinates'][1] > battery_coords[1]:
            function_3()
    function_5()
2024-11-04 09:36:52,989 - INFO - The intention is valid.
2024-11-04 09:36:53,015 - INFO - Intention added to desire 3
2024-11-04 09:36:53,034 - INFO - Running intention 14 ...
2024-11-04 09:36:53,184 - INFO - Belief set thread started ...
2024-11-04 09:36:53,215 - INFO - Plan thread started ...
2024-11-04 09:36:53,228 - INFO - Started subprocess...
2024-11-04 09:36:53,228 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 66}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 1, 'coordinates': [1, 0]}], 'parcels': [{'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:36:53,499 - INFO - Executing action action_5 ...
2024-11-04 09:36:53,717 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [1, 0]}}]
2024-11-04 09:36:54,060 - INFO - Belief set thread terminated.
2024-11-04 09:36:54,073 - INFO - Plan thread terminated.
2024-11-04 09:36:54,073 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 100}}, {'event_type': 'object removed', 'object_type': 'battery', 'object': {'id': 1, 'coordinates': [1, 0]}}]]
2024-11-04 09:36:54,073 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 100}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': [{'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:36:58,276 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    if 'batteries' in belief_set and len(belief_set['batteries']) > 0:
        return True
    return False
2024-11-04 09:36:58,283 - INFO - The trigger function is valid.
2024-11-04 09:36:58,283 - INFO - Trigger function added to desire 3.
2024-11-04 09:37:00,902 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate through the environment, pick up all the parcels, and deliver them to the specified delivery cell while maintaining its energy level by collecting batteries as needed.
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell by one cell if it is carrying parcels and the energy level allows it.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    if agent['parcels_carried_ids'] and agent['energy'] > 0:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to navigate to the next parcel that is not currently being carried and pick it up.
                def function_11():
                    global belief_set
                    for parcel in belief_set['parcels']:
                        if parcel['carried_by_id'] is None:
                            target_coordinates = parcel['coordinates']
                            break
                    x_diff = belief_set['agent']['coordinates'][0] - target_coordinates[0]
                    y_diff = belief_set['agent']['coordinates'][1] - target_coordinates[1]
                    if x_diff > 0:
                        for _ in range(x_diff):
                            function_1()
                    elif x_diff < 0:
                        for _ in range(-x_diff):
                            function_2()
                    if y_diff > 0:
                        for _ in range(y_diff):
                            function_3()
                    elif y_diff < 0:
                        for _ in range(-y_diff):
                            function_4()
                    function_5()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to deliver all the parcels it's currently carrying to the delivery cell.
                def function_12():
                    global belief_set
                    delivery_cell = [cell['cell_coordinates'] for cell in belief_set['map']
                        ['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coords = belief_set['agent']['coordinates']
                    while agent_coords != delivery_cell:
                        if agent_coords[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coords[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coords[1] < delivery_cell[1]:
                            function_4()
                        elif agent_coords[1] > delivery_cell[1]:
                            function_3()
                        agent_coords = belief_set['agent']['coordinates']
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect all the batteries in the environment to ensure that it has enough energy to perform its tasks.
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    closest_battery = min(batteries, key=lambda battery: abs(battery[
                        'coordinates'][0] - agent['coordinates'][0]) + abs(battery[
                        'coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'][0] < closest_battery['coordinates'][0]:
                        function_2()
                    while agent['coordinates'][0] > closest_battery['coordinates'][0]:
                        function_1()
                    while agent['coordinates'][1] < closest_battery['coordinates'][1]:
                        function_4()
                    while agent['coordinates'][1] > closest_battery['coordinates'][1]:
                        function_3()
                    function_5()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_14():
                    global belief_set
                    battery_coords = belief_set['batteries'][0]['coordinates']
                    while belief_set['agent']['coordinates'] != battery_coords:
                        if belief_set['agent']['coordinates'][0] < battery_coords[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > battery_coords[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < battery_coords[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > battery_coords[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if 'batteries' in belief_set and len(belief_set['batteries']) > 0:
        return True
    return False




2024-11-04 09:37:00,902 - INFO - Running trigger function for desire 3 ...
2024-11-04 09:37:00,902 - INFO - Trigger function for desire 3 has been executed. Result: False
2024-11-04 09:37:00,902 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 09:37:00,902 - INFO - No desire has been triggered.
2024-11-04 09:37:00,903 - INFO - No desire triggered.
2024-11-04 09:37:02,539 - INFO - Desire added: 4. Desires:
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate through the environment, pick up all the parcels, and deliver them to the specified delivery cell while maintaining its energy level by collecting batteries as needed.
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell by one cell if it is carrying parcels and the energy level allows it.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    if agent['parcels_carried_ids'] and agent['energy'] > 0:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to navigate to the next parcel that is not currently being carried and pick it up.
                def function_11():
                    global belief_set
                    for parcel in belief_set['parcels']:
                        if parcel['carried_by_id'] is None:
                            target_coordinates = parcel['coordinates']
                            break
                    x_diff = belief_set['agent']['coordinates'][0] - target_coordinates[0]
                    y_diff = belief_set['agent']['coordinates'][1] - target_coordinates[1]
                    if x_diff > 0:
                        for _ in range(x_diff):
                            function_1()
                    elif x_diff < 0:
                        for _ in range(-x_diff):
                            function_2()
                    if y_diff > 0:
                        for _ in range(y_diff):
                            function_3()
                    elif y_diff < 0:
                        for _ in range(-y_diff):
                            function_4()
                    function_5()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to deliver all the parcels it's currently carrying to the delivery cell.
                def function_12():
                    global belief_set
                    delivery_cell = [cell['cell_coordinates'] for cell in belief_set['map']
                        ['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coords = belief_set['agent']['coordinates']
                    while agent_coords != delivery_cell:
                        if agent_coords[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coords[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coords[1] < delivery_cell[1]:
                            function_4()
                        elif agent_coords[1] > delivery_cell[1]:
                            function_3()
                        agent_coords = belief_set['agent']['coordinates']
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect all the batteries in the environment to ensure that it has enough energy to perform its tasks.
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    closest_battery = min(batteries, key=lambda battery: abs(battery[
                        'coordinates'][0] - agent['coordinates'][0]) + abs(battery[
                        'coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'][0] < closest_battery['coordinates'][0]:
                        function_2()
                    while agent['coordinates'][0] > closest_battery['coordinates'][0]:
                        function_1()
                    while agent['coordinates'][1] < closest_battery['coordinates'][1]:
                        function_4()
                    while agent['coordinates'][1] > closest_battery['coordinates'][1]:
                        function_3()
                    function_5()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_14():
                    global belief_set
                    battery_coords = belief_set['batteries'][0]['coordinates']
                    while belief_set['agent']['coordinates'] != battery_coords:
                        if belief_set['agent']['coordinates'][0] < battery_coords[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > battery_coords[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < battery_coords[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > battery_coords[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if 'batteries' in belief_set and len(belief_set['batteries']) > 0:
        return True
    return False



Desire 4: The agent's long term goal is to collect all parcels from the spawn point and deliver them to the delivery cell, maximizing its score while ensuring it has enough energy to perform these tasks.
Executable: False
Trigger function:
None



2024-11-04 09:37:16,797 - INFO - Testing intention 
def function():
    global belief_set
    while belief_set['agent']['coordinates'] != [0, 0]:
        if belief_set['agent']['coordinates'][0] > 0:
            function_1()
        else:
            function_3()
    function_5()
    while belief_set['agent']['coordinates'] != [1, 3]:
        if belief_set['agent']['coordinates'][0] < 1:
            function_2()
        else:
            function_4()
    function_6()
2024-11-04 09:37:16,816 - INFO - The intention is valid.
2024-11-04 09:37:16,823 - INFO - Intention added to desire 4
2024-11-04 09:37:16,829 - INFO - Running intention 15 ...
2024-11-04 09:37:17,055 - INFO - Belief set thread started ...
2024-11-04 09:37:17,062 - INFO - Plan thread started ...
2024-11-04 09:37:17,062 - INFO - Started subprocess...
2024-11-04 09:37:17,093 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 100}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 2, 'coordinates': [1, 0]}], 'parcels': [{'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}, {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:37:17,389 - INFO - Executing action action_1 ...
2024-11-04 09:37:17,617 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 98}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 09:37:17,981 - INFO - Executing action action_5 ...
2024-11-04 09:37:18,232 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 96}}]
2024-11-04 09:37:18,576 - INFO - Executing action action_2 ...
2024-11-04 09:37:18,806 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 94}}]
2024-11-04 09:37:19,129 - INFO - Executing action action_4 ...
2024-11-04 09:37:19,380 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 09:37:19,779 - INFO - Executing action action_4 ...
2024-11-04 09:37:20,005 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 90}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 09:37:20,312 - INFO - Executing action action_4 ...
2024-11-04 09:37:20,531 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 09:37:20,942 - INFO - Executing action action_6 ...
2024-11-04 09:37:21,173 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 86}}]
2024-11-04 09:37:21,474 - INFO - Belief set thread terminated.
2024-11-04 09:37:21,499 - INFO - Plan thread terminated.
2024-11-04 09:37:21,531 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 140, 'energy': 98}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 96}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 94}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 92}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 90}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 8, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 9, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 10, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 11, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [8, 9, 10, 11], 'has_key': True, 'score': 140, 'energy': 88}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 86}}]]
2024-11-04 09:37:21,531 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 86}, 'keys': [{'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 2, 'coordinates': [1, 0]}], 'parcels': []}
2024-11-04 09:37:27,478 - INFO - Testing trigger function 
def should_pursue_goal(belief_set):
    agent = belief_set['agent']
    if agent['energy'] < 20:
        return False
    if len(belief_set['parcels']) == 0 and len(agent['parcels_carried_ids']) == 0:
        return False
    return True
2024-11-04 09:37:27,478 - INFO - The trigger function is valid.
2024-11-04 09:37:27,479 - INFO - Trigger function added to desire 4.
2024-11-04 09:37:29,069 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate through the environment, pick up all the parcels, and deliver them to the specified delivery cell while maintaining its energy level by collecting batteries as needed.
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell by one cell if it is carrying parcels and the energy level allows it.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    if agent['parcels_carried_ids'] and agent['energy'] > 0:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to navigate to the next parcel that is not currently being carried and pick it up.
                def function_11():
                    global belief_set
                    for parcel in belief_set['parcels']:
                        if parcel['carried_by_id'] is None:
                            target_coordinates = parcel['coordinates']
                            break
                    x_diff = belief_set['agent']['coordinates'][0] - target_coordinates[0]
                    y_diff = belief_set['agent']['coordinates'][1] - target_coordinates[1]
                    if x_diff > 0:
                        for _ in range(x_diff):
                            function_1()
                    elif x_diff < 0:
                        for _ in range(-x_diff):
                            function_2()
                    if y_diff > 0:
                        for _ in range(y_diff):
                            function_3()
                    elif y_diff < 0:
                        for _ in range(-y_diff):
                            function_4()
                    function_5()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to deliver all the parcels it's currently carrying to the delivery cell.
                def function_12():
                    global belief_set
                    delivery_cell = [cell['cell_coordinates'] for cell in belief_set['map']
                        ['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coords = belief_set['agent']['coordinates']
                    while agent_coords != delivery_cell:
                        if agent_coords[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coords[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coords[1] < delivery_cell[1]:
                            function_4()
                        elif agent_coords[1] > delivery_cell[1]:
                            function_3()
                        agent_coords = belief_set['agent']['coordinates']
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect all the batteries in the environment to ensure that it has enough energy to perform its tasks.
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    closest_battery = min(batteries, key=lambda battery: abs(battery[
                        'coordinates'][0] - agent['coordinates'][0]) + abs(battery[
                        'coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'][0] < closest_battery['coordinates'][0]:
                        function_2()
                    while agent['coordinates'][0] > closest_battery['coordinates'][0]:
                        function_1()
                    while agent['coordinates'][1] < closest_battery['coordinates'][1]:
                        function_4()
                    while agent['coordinates'][1] > closest_battery['coordinates'][1]:
                        function_3()
                    function_5()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_14():
                    global belief_set
                    battery_coords = belief_set['batteries'][0]['coordinates']
                    while belief_set['agent']['coordinates'] != battery_coords:
                        if belief_set['agent']['coordinates'][0] < battery_coords[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > battery_coords[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < battery_coords[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > battery_coords[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if 'batteries' in belief_set and len(belief_set['batteries']) > 0:
        return True
    return False



Desire 4: The agent's long term goal is to collect all parcels from the spawn point and deliver them to the delivery cell, maximizing its score while ensuring it has enough energy to perform these tasks.
    Intention ID: [15]
    Executable: True
    Description: The short term goal is to navigate to the parcel spawn point, pick up all the available parcels, then navigate to the delivery cell to deliver the parcels.
                def function_15():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [0, 0]:
                        if belief_set['agent']['coordinates'][0] > 0:
                            function_1()
                        else:
                            function_3()
                    function_5()
                    while belief_set['agent']['coordinates'] != [1, 3]:
                        if belief_set['agent']['coordinates'][0] < 1:
                            function_2()
                        else:
                            function_4()
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent']
    if agent['energy'] < 20:
        return False
    if len(belief_set['parcels']) == 0 and len(agent['parcels_carried_ids']
        ) == 0:
        return False
    return True




2024-11-04 09:37:29,069 - INFO - Running trigger function for desire 3 ...
2024-11-04 09:37:29,069 - INFO - Trigger function for desire 3 has been executed. Result: True
2024-11-04 09:37:29,069 - INFO - Desire 3 could be triggered. Adding it to the list...
2024-11-04 09:37:29,069 - INFO - Running trigger function for desire 4 ...
2024-11-04 09:37:29,069 - INFO - Trigger function for desire 4 has been executed. Result: True
2024-11-04 09:37:29,069 - INFO - Desire 4 could be triggered. Adding it to the list...
2024-11-04 09:37:29,069 - INFO - Desires triggered: [3, 4]. Now randomly choosing which one to run.
2024-11-04 09:37:29,075 - INFO - Desire 4 was randomly chosen. Desire 4 has been triggered.
2024-11-04 09:37:29,076 - INFO - Desire 4 is about to be executed ...
2024-11-04 09:37:29,088 - INFO - Executing all valid intentions for desire 4 ...
2024-11-04 09:37:29,088 - INFO - Executing intention 15 ...
2024-11-04 09:37:29,088 - INFO - Running intention 15 ...
2024-11-04 09:37:29,245 - INFO - Belief set thread started ...
2024-11-04 09:37:29,258 - INFO - Plan thread started ...
2024-11-04 09:37:29,270 - INFO - Started subprocess...
2024-11-04 09:37:29,271 - INFO - Belief set before intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 86}, 'keys': [{'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 2, 'coordinates': [1, 0]}], 'parcels': [{'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': None}]}
2024-11-04 09:37:29,600 - INFO - Executing action action_1 ...
2024-11-04 09:37:29,867 - INFO - Action action_1 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}]
2024-11-04 09:37:30,212 - INFO - Executing action action_3 ...
2024-11-04 09:37:30,413 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 82}}]
2024-11-04 09:37:30,764 - INFO - Executing action action_3 ...
2024-11-04 09:37:30,971 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}]
2024-11-04 09:37:31,330 - INFO - Executing action action_3 ...
2024-11-04 09:37:31,564 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}]
2024-11-04 09:37:31,863 - INFO - Executing action action_5 ...
2024-11-04 09:37:32,085 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 76}}]
2024-11-04 09:37:32,446 - INFO - Executing action action_2 ...
2024-11-04 09:37:32,663 - INFO - Action action_2 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 09:37:33,116 - INFO - Executing action action_4 ...
2024-11-04 09:37:33,345 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 72}}]
2024-11-04 09:37:33,776 - INFO - Executing action action_4 ...
2024-11-04 09:37:33,986 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 70}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 09:37:34,309 - INFO - Executing action action_4 ...
2024-11-04 09:37:34,529 - INFO - Action action_4 executed. Events received: [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}]
2024-11-04 09:37:34,897 - INFO - Executing action action_6 ...
2024-11-04 09:37:35,152 - INFO - Action action_6 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}}]
2024-11-04 09:37:35,451 - INFO - Belief set thread terminated.
2024-11-04 09:37:35,457 - INFO - Plan thread terminated.
2024-11-04 09:37:35,488 - INFO - Intention 15 execution has finished. Threads and subprocess terminated. Plan: ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 82}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 72}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 70}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}}]]
2024-11-04 09:37:35,501 - INFO - Belief set after intention 15 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}, 'keys': [{'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 2, 'coordinates': [1, 0]}], 'parcels': []}
2024-11-04 09:37:35,501 - INFO - Intention 15 has been executed with plan ['action_1', 'action_3', 'action_3', 'action_3', 'action_5', 'action_2', 'action_4', 'action_4', 'action_4', 'action_6'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 84}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 82}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 80}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 220, 'energy': 78}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [0, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [0, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [0, 0], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 76}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 0], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 74}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 1], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 72}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 2], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 70}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'parcel', 'object': {'id': 12, 'coordinates': [1, 3], 'score': 20, 'carried_by_id': 1}}, {'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [12], 'has_key': True, 'score': 220, 'energy': 68}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}}]].
2024-11-04 09:37:37,805 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate through the environment, pick up all the parcels, and deliver them to the specified delivery cell while maintaining its energy level by collecting batteries as needed.
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell by one cell if it is carrying parcels and the energy level allows it.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    if agent['parcels_carried_ids'] and agent['energy'] > 0:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to navigate to the next parcel that is not currently being carried and pick it up.
                def function_11():
                    global belief_set
                    for parcel in belief_set['parcels']:
                        if parcel['carried_by_id'] is None:
                            target_coordinates = parcel['coordinates']
                            break
                    x_diff = belief_set['agent']['coordinates'][0] - target_coordinates[0]
                    y_diff = belief_set['agent']['coordinates'][1] - target_coordinates[1]
                    if x_diff > 0:
                        for _ in range(x_diff):
                            function_1()
                    elif x_diff < 0:
                        for _ in range(-x_diff):
                            function_2()
                    if y_diff > 0:
                        for _ in range(y_diff):
                            function_3()
                    elif y_diff < 0:
                        for _ in range(-y_diff):
                            function_4()
                    function_5()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to deliver all the parcels it's currently carrying to the delivery cell.
                def function_12():
                    global belief_set
                    delivery_cell = [cell['cell_coordinates'] for cell in belief_set['map']
                        ['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coords = belief_set['agent']['coordinates']
                    while agent_coords != delivery_cell:
                        if agent_coords[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coords[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coords[1] < delivery_cell[1]:
                            function_4()
                        elif agent_coords[1] > delivery_cell[1]:
                            function_3()
                        agent_coords = belief_set['agent']['coordinates']
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect all the batteries in the environment to ensure that it has enough energy to perform its tasks.
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    closest_battery = min(batteries, key=lambda battery: abs(battery[
                        'coordinates'][0] - agent['coordinates'][0]) + abs(battery[
                        'coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'][0] < closest_battery['coordinates'][0]:
                        function_2()
                    while agent['coordinates'][0] > closest_battery['coordinates'][0]:
                        function_1()
                    while agent['coordinates'][1] < closest_battery['coordinates'][1]:
                        function_4()
                    while agent['coordinates'][1] > closest_battery['coordinates'][1]:
                        function_3()
                    function_5()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_14():
                    global belief_set
                    battery_coords = belief_set['batteries'][0]['coordinates']
                    while belief_set['agent']['coordinates'] != battery_coords:
                        if belief_set['agent']['coordinates'][0] < battery_coords[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > battery_coords[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < battery_coords[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > battery_coords[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if 'batteries' in belief_set and len(belief_set['batteries']) > 0:
        return True
    return False



Desire 4: The agent's long term goal is to collect all parcels from the spawn point and deliver them to the delivery cell, maximizing its score while ensuring it has enough energy to perform these tasks.
    Intention ID: [15]
    Executable: True
    Description: The short term goal is to navigate to the parcel spawn point, pick up all the available parcels, then navigate to the delivery cell to deliver the parcels.
                def function_15():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [0, 0]:
                        if belief_set['agent']['coordinates'][0] > 0:
                            function_1()
                        else:
                            function_3()
                    function_5()
                    while belief_set['agent']['coordinates'] != [1, 3]:
                        if belief_set['agent']['coordinates'][0] < 1:
                            function_2()
                        else:
                            function_4()
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent']
    if agent['energy'] < 20:
        return False
    if len(belief_set['parcels']) == 0 and len(agent['parcels_carried_ids']
        ) == 0:
        return False
    return True




2024-11-04 09:37:37,805 - INFO - Running trigger function for desire 3 ...
2024-11-04 09:37:37,805 - INFO - Trigger function for desire 3 has been executed. Result: True
2024-11-04 09:37:37,805 - INFO - Desire 3 could be triggered. Adding it to the list...
2024-11-04 09:37:37,805 - INFO - Running trigger function for desire 4 ...
2024-11-04 09:37:37,805 - INFO - Trigger function for desire 4 has been executed. Result: False
2024-11-04 09:37:37,805 - INFO - Desires triggered: [3]. Now randomly choosing which one to run.
2024-11-04 09:37:37,805 - INFO - Desire 3 was randomly chosen. Desire 3 has been triggered.
2024-11-04 09:37:37,818 - INFO - Desire 3 is about to be executed ...
2024-11-04 09:37:37,818 - INFO - Executing all valid intentions for desire 3 ...
2024-11-04 09:37:37,831 - INFO - Executing intention 14 ...
2024-11-04 09:37:37,831 - INFO - Running intention 14 ...
2024-11-04 09:37:38,091 - INFO - Belief set thread started ...
2024-11-04 09:37:38,103 - INFO - Plan thread started ...
2024-11-04 09:37:38,116 - INFO - Started subprocess...
2024-11-04 09:37:38,116 - INFO - Belief set before intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 3], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 66}, 'keys': [{'id': 1, 'coordinates': [1, 3], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [{'id': 2, 'coordinates': [1, 0]}], 'parcels': []}
2024-11-04 09:37:38,505 - INFO - Executing action action_3 ...
2024-11-04 09:37:38,712 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 64}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}]
2024-11-04 09:37:39,020 - INFO - Executing action action_3 ...
2024-11-04 09:37:39,263 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 62}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}]
2024-11-04 09:37:39,575 - INFO - Executing action action_3 ...
2024-11-04 09:37:39,811 - INFO - Action action_3 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}]
2024-11-04 09:37:40,178 - INFO - Executing action action_5 ...
2024-11-04 09:37:40,421 - INFO - Action action_5 executed. Events received: [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 100}}]
2024-11-04 09:37:40,752 - INFO - Belief set thread terminated.
2024-11-04 09:37:40,771 - INFO - Plan thread terminated.
2024-11-04 09:37:40,808 - INFO - Intention 14 execution has finished. Threads and subprocess terminated. Plan: ['action_3', 'action_3', 'action_3', 'action_5']. Events: [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 64}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 62}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 100}}]]
2024-11-04 09:37:40,808 - INFO - Belief set after intention 14 execution:
{'map': {'width': 4, 'height': 4, 'grid': [{'cell_coordinates': [0, 0], 'cell_type': 'parcels_spawn'}, {'cell_coordinates': [0, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [0, 3], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 0], 'cell_type': 'batteries_spawn'}, {'cell_coordinates': [1, 1], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 2], 'cell_type': 'walkable'}, {'cell_coordinates': [1, 3], 'cell_type': 'delivery_cell'}, {'cell_coordinates': [2, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [2, 3], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 0], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 1], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 2], 'cell_type': 'non_walkable'}, {'cell_coordinates': [3, 3], 'cell_type': 'non_walkable'}]}, 'agent': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 100}, 'keys': [{'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}], 'doors': [{'id': 1, 'coordinates': [0, 2]}, {'id': 2, 'coordinates': [1, 2]}], 'batteries': [], 'parcels': []}
2024-11-04 09:37:40,808 - INFO - Intention 14 has been executed with plan ['action_3', 'action_3', 'action_3', 'action_5'] and events [[{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 2], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 64}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 2], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 1], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 62}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 1], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 60}}, {'event_type': 'object changed', 'object_type': 'key', 'object': {'id': 1, 'coordinates': [1, 0], 'carried_by_id': 1}}], [{'event_type': 'object changed', 'object_type': 'agent', 'object': {'id': 1, 'coordinates': [1, 0], 'parcels_carried_ids': [], 'has_key': True, 'score': 240, 'energy': 100}}]].
2024-11-04 09:37:42,467 - INFO - Checking if a desire has been triggered ...
Desires: 
Desire 1: The agent should aim to collect all keys and use them to open doors, then collect and deliver all parcels while maintaining its energy level by collecting batteries when needed.
    Intention ID: [7]
    Executable: False
    Description: The agent should aim to move towards the key, pick it up and then move towards the nearest door to open it.
                def function_7():
                    global belief_set
                    agent_position = belief_set['agent']['coordinates']
                    key_position = belief_set['keys'][0]['coordinates']
                    while agent_position[0] != key_position[0]:
                        if agent_position[0] > key_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != key_position[1]:
                        if agent_position[1] > key_position[1]:
                            function_3()
                        else:
                            function_4()
                    function_5()
                    door_position = belief_set['doors'][0]['coordinates']
                    while agent_position[0] != door_position[0]:
                        if agent_position[0] > door_position[0]:
                            function_1()
                        else:
                            function_2()
                    while agent_position[1] != door_position[1]:
                        if agent_position[1] > door_position[1]:
                            function_3()
                        else:
                            function_4()
                
    Intention ID: [8]
    Executable: False
    Description: The agent's short term goal is to move towards the nearest key, pick it up and then move towards the nearest door to open it, while ensuring the agent's position is updated after each move.
                def function_8():
                    global belief_set
                    target_key = belief_set['keys'][0]['coordinates']
                    target_door = belief_set['doors'][0]['coordinates']
                    agent_position = belief_set['agent']['coordinates']
                    max_iterations = 1000
                    while agent_position != target_key and max_iterations > 0:
                        if agent_position[0] < target_key[0]:
                            function_2()
                        elif agent_position[0] > target_key[0]:
                            function_1()
                        elif agent_position[1] < target_key[1]:
                            function_4()
                        elif agent_position[1] > target_key[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                    function_5()
                    while agent_position != target_door and max_iterations > 0:
                        if agent_position[0] < target_door[0]:
                            function_2()
                        elif agent_position[0] > target_door[0]:
                            function_1()
                        elif agent_position[1] < target_door[1]:
                            function_4()
                        elif agent_position[1] > target_door[1]:
                            function_3()
                        agent_position = belief_set['agent']['coordinates']
                        max_iterations -= 1
                
    Intention ID: [9]
    Executable: False
    Description: The short term goal is for the agent to move towards the nearest door, open it using the key it possesses, and then proceed to the nearest parcel for pick up.
                def function_9():
                    global belief_set
                    current_coordinates = belief_set['agent']['coordinates']
                    doors = belief_set['doors']
                    nearest_door_coordinates = min(doors, key=lambda x: abs(x['coordinates'
                        ][0] - current_coordinates[0]) + abs(x['coordinates'][1] -
                        current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_door_coordinates:
                        if nearest_door_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_door_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_door_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_7()
                    parcels = belief_set['parcels']
                    nearest_parcel_coordinates = min(parcels, key=lambda x: abs(x[
                        'coordinates'][0] - current_coordinates[0]) + abs(x['coordinates'][
                        1] - current_coordinates[1]))['coordinates']
                    while current_coordinates != nearest_parcel_coordinates:
                        if nearest_parcel_coordinates[0] < current_coordinates[0]:
                            function_1()
                        elif nearest_parcel_coordinates[0] > current_coordinates[0]:
                            function_2()
                        elif nearest_parcel_coordinates[1] < current_coordinates[1]:
                            function_3()
                        else:
                            function_4()
                        current_coordinates = belief_set['agent']['coordinates']
                    function_5()
                
Executable: False
Trigger function:
None


Desire 2: The agent's long term goal is to efficiently navigate through the environment, pick up all the parcels, and deliver them to the specified delivery cell while maintaining its energy level by collecting batteries as needed.
    Intention ID: [10]
    Executable: False
    Description: The agent's short term goal is to move towards the delivery cell by one cell if it is carrying parcels and the energy level allows it.
                def function_10():
                    global belief_set
                    agent = belief_set['agent']
                    delivery_cell = [cell for cell in belief_set['map']['grid'] if cell[
                        'cell_type'] == 'delivery_cell'][0]['cell_coordinates']
                    if agent['parcels_carried_ids'] and agent['energy'] > 0:
                        if agent['coordinates'][0] < delivery_cell[0]:
                            function_2()
                        elif agent['coordinates'][0] > delivery_cell[0]:
                            function_1()
                        elif agent['coordinates'][1] < delivery_cell[1]:
                            function_4()
                        elif agent['coordinates'][1] > delivery_cell[1]:
                            function_3()
                
    Intention ID: [11]
    Executable: True
    Description: The agent's short term goal is to navigate to the next parcel that is not currently being carried and pick it up.
                def function_11():
                    global belief_set
                    for parcel in belief_set['parcels']:
                        if parcel['carried_by_id'] is None:
                            target_coordinates = parcel['coordinates']
                            break
                    x_diff = belief_set['agent']['coordinates'][0] - target_coordinates[0]
                    y_diff = belief_set['agent']['coordinates'][1] - target_coordinates[1]
                    if x_diff > 0:
                        for _ in range(x_diff):
                            function_1()
                    elif x_diff < 0:
                        for _ in range(-x_diff):
                            function_2()
                    if y_diff > 0:
                        for _ in range(y_diff):
                            function_3()
                    elif y_diff < 0:
                        for _ in range(-y_diff):
                            function_4()
                    function_5()
                
    Intention ID: [12]
    Executable: True
    Description: The agent's short term goal is to deliver all the parcels it's currently carrying to the delivery cell.
                def function_12():
                    global belief_set
                    delivery_cell = [cell['cell_coordinates'] for cell in belief_set['map']
                        ['grid'] if cell['cell_type'] == 'delivery_cell'][0]
                    agent_coords = belief_set['agent']['coordinates']
                    while agent_coords != delivery_cell:
                        if agent_coords[0] < delivery_cell[0]:
                            function_2()
                        elif agent_coords[0] > delivery_cell[0]:
                            function_1()
                        elif agent_coords[1] < delivery_cell[1]:
                            function_4()
                        elif agent_coords[1] > delivery_cell[1]:
                            function_3()
                        agent_coords = belief_set['agent']['coordinates']
                    function_6()
                
Executable: False
Trigger function:
None


Desire 3: The agent's long term goal is to collect all the batteries in the environment to ensure that it has enough energy to perform its tasks.
    Intention ID: [13]
    Executable: False
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_13():
                    global belief_set
                    agent = belief_set['agent']
                    batteries = belief_set['batteries']
                    closest_battery = min(batteries, key=lambda battery: abs(battery[
                        'coordinates'][0] - agent['coordinates'][0]) + abs(battery[
                        'coordinates'][1] - agent['coordinates'][1]))
                    while agent['coordinates'][0] < closest_battery['coordinates'][0]:
                        function_2()
                    while agent['coordinates'][0] > closest_battery['coordinates'][0]:
                        function_1()
                    while agent['coordinates'][1] < closest_battery['coordinates'][1]:
                        function_4()
                    while agent['coordinates'][1] > closest_battery['coordinates'][1]:
                        function_3()
                    function_5()
                
    Intention ID: [14]
    Executable: True
    Description: The agent's short term goal is to navigate to the nearest battery and pick it up.
                def function_14():
                    global belief_set
                    battery_coords = belief_set['batteries'][0]['coordinates']
                    while belief_set['agent']['coordinates'] != battery_coords:
                        if belief_set['agent']['coordinates'][0] < battery_coords[0]:
                            function_2()
                        elif belief_set['agent']['coordinates'][0] > battery_coords[0]:
                            function_1()
                        elif belief_set['agent']['coordinates'][1] < battery_coords[1]:
                            function_4()
                        elif belief_set['agent']['coordinates'][1] > battery_coords[1]:
                            function_3()
                    function_5()
                
Executable: True
Trigger function:
def function_dtf_1(belief_set):
    if 'batteries' in belief_set and len(belief_set['batteries']) > 0:
        return True
    return False



Desire 4: The agent's long term goal is to collect all parcels from the spawn point and deliver them to the delivery cell, maximizing its score while ensuring it has enough energy to perform these tasks.
    Intention ID: [15]
    Executable: True
    Description: The short term goal is to navigate to the parcel spawn point, pick up all the available parcels, then navigate to the delivery cell to deliver the parcels.
                def function_15():
                    global belief_set
                    while belief_set['agent']['coordinates'] != [0, 0]:
                        if belief_set['agent']['coordinates'][0] > 0:
                            function_1()
                        else:
                            function_3()
                    function_5()
                    while belief_set['agent']['coordinates'] != [1, 3]:
                        if belief_set['agent']['coordinates'][0] < 1:
                            function_2()
                        else:
                            function_4()
                    function_6()
                
Executable: True
Trigger function:
def function_dtf_2(belief_set):
    agent = belief_set['agent']
    if agent['energy'] < 20:
        return False
    if len(belief_set['parcels']) == 0 and len(agent['parcels_carried_ids']
        ) == 0:
        return False
    return True




2024-11-04 09:37:42,468 - INFO - Running trigger function for desire 3 ...
2024-11-04 09:37:42,468 - INFO - Trigger function for desire 3 has been executed. Result: False
2024-11-04 09:37:42,468 - INFO - Running trigger function for desire 4 ...
2024-11-04 09:37:42,468 - INFO - Trigger function for desire 4 has been executed. Result: False
2024-11-04 09:37:42,468 - INFO - Desires triggered: []. Now randomly choosing which one to run.
2024-11-04 09:37:42,468 - INFO - No desire has been triggered.
2024-11-04 09:37:42,485 - INFO - No desire triggered.
